<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Train custom coco dataset using Yolox</title>
      <link href="/2021/10/15/yolox/"/>
      <url>/2021/10/15/yolox/</url>
      
        <content type="html"><![CDATA[<center>yolox, funny</center><span id="more"></span><h2 id="pre-environment">Pre-environment</h2><ul><li>windows 10</li><li>GPU: Nvidia 3090</li><li>Anaconda3</li><li>pycharm</li></ul><p> </p><h2 id="create-a-virtual-environment">Create a virtual environment</h2><ul><li>Launch Anaconda Prompt <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">conda create -n yolox python=3.8</span><br><span class="line">conda activate yolox</span><br></pre></td></tr></table></figure></li></ul><p> </p><h2 id="create-the-project-in-pycharm">Create the project in Pycharm</h2><ul><li>Launch Pycharm<br />Create a new project, and choose the interpreter we established in anaconda<div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/10/a214d6d77c4f95bf.png" width="600"/></div></li><li>Create the project<br />open the directory of Yolox which is downloaded from <a href="https://github.com/Megvii-BaseDetection/YOLOX">Github</a></li></ul><p> </p><h2 id="install-pytorch">Install Pytorch</h2><ul><li>In Pycharm's Terminal <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda install pytorch torchvision torchaudio cudatoolkit=11.1 -c pytorch -c conda-forge</span><br></pre></td></tr></table></figure><div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/10/4d7d71415a5a5387.png" width="600"/></div></li></ul><p> </p><h2 id="install-yolox">Install Yolox</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd YOLOX</span><br><span class="line">pip install -U pip &amp;&amp; pip install -r requirements.txt</span><br><span class="line">pip install -v -e .  # or  python setup.py develop</span><br></pre></td></tr></table></figure><p> </p><h2 id="install-pycocotools">Install pycocotools</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip install cython</span><br><span class="line">pip install pycocotools</span><br></pre></td></tr></table></figure><p> </p><h2 id="install-apex">Install apex</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/NVIDIA/apex</span><br><span class="line">cd apex</span><br><span class="line">python setup.py install </span><br></pre></td></tr></table></figure><p> </p><h2 id="validate">validate</h2><ul><li>download model from <a href="https://link.csdn.net/?target=https%3A%2F%2Fgithub.com%2FMegvii-BaseDetection%2FYOLOX">Github</a>, and save the model in the folder named weights</li><li>validate <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">python tools/demo.py image -n yolox-s -c weights/yolox_s.pth --path assets/dog.jpg --conf 0.25 --nms 0.45 --tsize 640 --save_result --device gpu</span><br><span class="line"></span><br></pre></td></tr></table></figure><div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/10/35847d431a8f2664.png" width="600"/></div></li></ul><p> </p><h2 id="train-custom-coco-dataset-using-yolox">Train custom coco dataset using Yolox</h2><h3 id="build-dataset">Build dataset</h3><ul><li><p>Using labelImg to label your own images, export the labels information in YOLO format(txt)</p></li><li><p>convert txt format to COCO dataset format <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line">coco_format_save_path=<span class="string">&#x27;C:\\Users\\11734\\Desktop\\YOLOX-main\\mydata\\val\\&#x27;</span>                      <span class="comment">#要生成的标准coco格式标签所在文件夹</span></span><br><span class="line">yolo_format_classes_path=<span class="string">&#x27;C:\\Users\\11734\\Desktop\\YOLOX-main\\mydata\\yy.names&#x27;</span>                   <span class="comment">#类别文件，一行一个类</span></span><br><span class="line">yolo_format_annotation_path=<span class="string">&#x27;C:\\Users\\11734\\Desktop\\YOLOX-main\\mydata\\val\\labels\\&#x27;</span>        <span class="comment">#yolo格式标签所在文件夹</span></span><br><span class="line">img_pathDir=<span class="string">&#x27;C:\\Users\\11734\\Desktop\\YOLOX-main\\mydata\\val\\images\\&#x27;</span>                        <span class="comment">#图片所在文件夹</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(yolo_format_classes_path,<span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> fr:                                                      <span class="comment">#打开并读取类别文件</span></span><br><span class="line">    lines1=fr.readlines()</span><br><span class="line"><span class="comment"># print(lines1)</span></span><br><span class="line">categories=[]                                                                 <span class="comment">#存储类别的列表</span></span><br><span class="line"><span class="keyword">for</span> j,label <span class="keyword">in</span> <span class="built_in">enumerate</span>(lines1):</span><br><span class="line">    label=label.strip()</span><br><span class="line">    categories.append(&#123;<span class="string">&#x27;id&#x27;</span>:j+<span class="number">1</span>,<span class="string">&#x27;name&#x27;</span>:label,<span class="string">&#x27;supercategory&#x27;</span>:<span class="string">&#x27;None&#x27;</span>&#125;)         <span class="comment">#将类别信息添加到categories中</span></span><br><span class="line"><span class="comment"># print(categories)</span></span><br><span class="line"></span><br><span class="line">write_json_context=<span class="built_in">dict</span>()                                                      <span class="comment">#写入.json文件的大字典</span></span><br><span class="line">write_json_context[<span class="string">&#x27;info&#x27;</span>]= &#123;<span class="string">&#x27;description&#x27;</span>: <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;url&#x27;</span>: <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;version&#x27;</span>: <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;year&#x27;</span>: <span class="number">2021</span>, <span class="string">&#x27;contributor&#x27;</span>: <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;date_created&#x27;</span>: <span class="string">&#x27;2021-10-13&#x27;</span>&#125;</span><br><span class="line">write_json_context[<span class="string">&#x27;licenses&#x27;</span>]=[&#123;<span class="string">&#x27;id&#x27;</span>:<span class="number">1</span>,<span class="string">&#x27;name&#x27;</span>:<span class="literal">None</span>,<span class="string">&#x27;url&#x27;</span>:<span class="literal">None</span>&#125;]</span><br><span class="line">write_json_context[<span class="string">&#x27;categories&#x27;</span>]=categories</span><br><span class="line">write_json_context[<span class="string">&#x27;images&#x27;</span>]=[]</span><br><span class="line">write_json_context[<span class="string">&#x27;annotations&#x27;</span>]=[]</span><br><span class="line"></span><br><span class="line"><span class="comment">#接下来的代码主要添加&#x27;images&#x27;和&#x27;annotations&#x27;的key值</span></span><br><span class="line">imageFileList=os.listdir(img_pathDir)                                           <span class="comment">#遍历该文件夹下的所有文件，并将所有文件名添加到列表中</span></span><br><span class="line"><span class="keyword">for</span> i,imageFile <span class="keyword">in</span> <span class="built_in">enumerate</span>(imageFileList):</span><br><span class="line">    imagePath = os.path.join(img_pathDir,imageFile)                             <span class="comment">#获取图片的绝对路径</span></span><br><span class="line">    image = Image.<span class="built_in">open</span>(imagePath)                                               <span class="comment">#读取图片，然后获取图片的宽和高</span></span><br><span class="line">    W, H = image.size</span><br><span class="line"></span><br><span class="line">    img_context=&#123;&#125;                                                              <span class="comment">#使用一个字典存储该图片信息</span></span><br><span class="line">    <span class="comment">#img_name=os.path.basename(imagePath)                                       #返回path最后的文件名。如果path以/或\结尾，那么就会返回空值</span></span><br><span class="line">    img_context[<span class="string">&#x27;file_name&#x27;</span>]=imageFile</span><br><span class="line">    img_context[<span class="string">&#x27;height&#x27;</span>]=H</span><br><span class="line">    img_context[<span class="string">&#x27;width&#x27;</span>]=W</span><br><span class="line">    img_context[<span class="string">&#x27;date_captured&#x27;</span>]=<span class="string">&#x27;2021-07-25&#x27;</span></span><br><span class="line">    img_context[<span class="string">&#x27;id&#x27;</span>]=i                                                         <span class="comment">#该图片的id</span></span><br><span class="line">    img_context[<span class="string">&#x27;license&#x27;</span>]=<span class="number">1</span></span><br><span class="line">    img_context[<span class="string">&#x27;color_url&#x27;</span>]=<span class="string">&#x27;&#x27;</span></span><br><span class="line">    img_context[<span class="string">&#x27;flickr_url&#x27;</span>]=<span class="string">&#x27;&#x27;</span></span><br><span class="line">    write_json_context[<span class="string">&#x27;images&#x27;</span>].append(img_context)                            <span class="comment">#将该图片信息添加到&#x27;image&#x27;列表中</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    txtFile=imageFile[:<span class="number">21</span>]+<span class="string">&#x27;.txt&#x27;</span>                                               <span class="comment">#获取该图片获取的txt文件,注意位数</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(os.path.join(yolo_format_annotation_path,txtFile),<span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> fr:</span><br><span class="line">        lines=fr.readlines()                                                   <span class="comment">#读取txt文件的每一行数据，lines2是一个列表，包含了一个图片的所有标注信息</span></span><br><span class="line">    <span class="keyword">for</span> j,line <span class="keyword">in</span> <span class="built_in">enumerate</span>(lines):</span><br><span class="line"></span><br><span class="line">        bbox_dict = &#123;&#125;                                                          <span class="comment">#将每一个bounding box信息存储在该字典中</span></span><br><span class="line">        <span class="comment"># line = line.strip().split()</span></span><br><span class="line">        <span class="comment"># print(line.strip().split(&#x27; &#x27;))</span></span><br><span class="line"></span><br><span class="line">        class_id,x,y,w,h=line.strip().split(<span class="string">&#x27; &#x27;</span>)                                          <span class="comment">#获取每一个标注框的详细信息</span></span><br><span class="line">        class_id,x, y, w, h = <span class="built_in">int</span>(class_id), <span class="built_in">float</span>(x), <span class="built_in">float</span>(y), <span class="built_in">float</span>(w), <span class="built_in">float</span>(h)       <span class="comment">#将字符串类型转为可计算的int和float类型</span></span><br><span class="line"></span><br><span class="line">        xmin=(x-w/<span class="number">2</span>)*W                                                                    <span class="comment">#坐标转换</span></span><br><span class="line">        ymin=(y-h/<span class="number">2</span>)*H</span><br><span class="line">        xmax=(x+w/<span class="number">2</span>)*W</span><br><span class="line">        ymax=(y+h/<span class="number">2</span>)*H</span><br><span class="line">        w=w*W</span><br><span class="line">        h=h*H</span><br><span class="line"></span><br><span class="line">        bbox_dict[<span class="string">&#x27;id&#x27;</span>]=i*<span class="number">10000</span>+j                                                         <span class="comment">#bounding box的坐标信息</span></span><br><span class="line">        bbox_dict[<span class="string">&#x27;image_id&#x27;</span>]=i</span><br><span class="line">        bbox_dict[<span class="string">&#x27;category_id&#x27;</span>]=class_id+<span class="number">1</span>                                               <span class="comment">#注意目标类别要加一</span></span><br><span class="line">        bbox_dict[<span class="string">&#x27;iscrowd&#x27;</span>]=<span class="number">0</span></span><br><span class="line">        height,width=<span class="built_in">abs</span>(ymax-ymin),<span class="built_in">abs</span>(xmax-xmin)</span><br><span class="line">        bbox_dict[<span class="string">&#x27;area&#x27;</span>]=height*width</span><br><span class="line">        bbox_dict[<span class="string">&#x27;bbox&#x27;</span>]=[xmin,ymin,w,h]</span><br><span class="line">        bbox_dict[<span class="string">&#x27;segmentation&#x27;</span>]=[[xmin,ymin,xmax,ymin,xmax,ymax,xmin,ymax]]</span><br><span class="line">        write_json_context[<span class="string">&#x27;annotations&#x27;</span>].append(bbox_dict)                               <span class="comment">#将每一个由字典存储的bounding box信息添加到&#x27;annotations&#x27;列表中</span></span><br><span class="line"></span><br><span class="line">name = os.path.join(coco_format_save_path,<span class="string">&quot;train&quot;</span>+ <span class="string">&#x27;.json&#x27;</span>)</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(name,<span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> fw:                                                                <span class="comment">#将字典信息写入.json文件中</span></span><br><span class="line">    json.dump(write_json_context,fw,indent=<span class="number">2</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure></p></li><li><p>get instances_train2017.json and instances_val2017.json, which contain the information of images and labels in coco dataset format</p></li><li><p>Build custom coco dataset at yolox directory, obey the rules of nomenclature, where instances_train2017.json is <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Animals_Coco</span><br><span class="line">   ├─annotations</span><br><span class="line">     --instances_train2017.json</span><br><span class="line">     --instances_val2017.json</span><br><span class="line">   ├─train2017</span><br><span class="line">   └─val2017</span><br><span class="line"></span><br></pre></td></tr></table></figure></p></li><li><p>put images of training set into train2017, put images of validating into val2017</p></li></ul><p> </p><h3 id="modify-the-classes-name">Modify the classes name</h3><ul><li>In yolox/data/datasets/coco_classes.py<div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/10/3a0fc2cdbb238754.png" width="600"/></div></li></ul><p> </p><h3 id="modify-yolox_base.py">Modify yolox_base.py</h3><ul><li>In yolox/exp/yolox_base.py<div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/10/ef79c5e9b1121334.png" width="600"/></div></li></ul><p> </p><h3 id="modify-yolox_base.py-1">Modify yolox_base.py</h3><ul><li>In exps/example/custom/yolox_s.py<div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/10/a301b899c486ae84.png" width="600"/></div></li></ul><p> </p><h3 id="modify-train.py">Modify train.py</h3><ul><li>In tools/train.py</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">make_parser</span>():</span></span><br><span class="line">    parser = argparse.ArgumentParser(<span class="string">&quot;YOLOX train parser&quot;</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&quot;-expn&quot;</span>, <span class="string">&quot;--experiment-name&quot;</span>, <span class="built_in">type</span>=<span class="built_in">str</span>, default=<span class="literal">None</span>)</span><br><span class="line">    <span class="comment"># set default=&quot;Animals_Coco&quot;)#</span></span><br><span class="line">    parser.add_argument(<span class="string">&quot;-n&quot;</span>, <span class="string">&quot;--name&quot;</span>, <span class="built_in">type</span>=<span class="built_in">str</span>, default=<span class="literal">None</span>, <span class="built_in">help</span>=<span class="string">&quot;model name&quot;</span>)</span><br><span class="line">    <span class="comment"># set default=&quot;yolox-s&quot;)#</span></span><br><span class="line"></span><br><span class="line">    parser.add_argument(<span class="string">&quot;-b&quot;</span>, <span class="string">&quot;--batch-size&quot;</span>, <span class="built_in">type</span>=<span class="built_in">int</span>, default=<span class="number">64</span>, <span class="built_in">help</span>=<span class="string">&quot;batch size&quot;</span>)</span><br><span class="line">    <span class="comment"># modify batch size as 8</span></span><br><span class="line">    parser.add_argument(<span class="string">&quot;-d&quot;</span>, <span class="string">&quot;--devices&quot;</span>, default=<span class="number">0</span>, <span class="built_in">type</span>=<span class="built_in">int</span>, <span class="built_in">help</span>=<span class="string">&quot;device for training&quot;</span>)</span><br><span class="line">    <span class="comment"># set dafault as 0 since there is only one gpu</span></span><br><span class="line"></span><br><span class="line">    parser.add_argument(</span><br><span class="line">        <span class="string">&quot;-f&quot;</span>,</span><br><span class="line">        <span class="string">&quot;--exp_file&quot;</span>,</span><br><span class="line">        default=<span class="string">&quot;C:\\Users\\11734\\Desktop\\YOLOX\\exps\\example\\custom\\yolox_s.py&quot;</span>,</span><br><span class="line">    <span class="comment"># set path of yolox_s.py</span></span><br><span class="line"></span><br><span class="line">    parser.add_argument(<span class="string">&quot;-c&quot;</span>, <span class="string">&quot;--ckpt&quot;</span>, default=<span class="string">&quot;C:\\Users\\11734\\Desktop\\YOLOX\\weights\\yolox_s.pth&quot;</span>, <span class="built_in">type</span>=<span class="built_in">str</span>, <span class="built_in">help</span>=<span class="string">&quot;checkpoint file&quot;</span>)</span><br><span class="line">    <span class="comment"># set pre-training weights</span></span><br><span class="line">    </span><br></pre></td></tr></table></figure><h2 id="train">Train</h2><ul><li>start train, pay attention to the batch size , not exceed the memory of gpu<div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/10/e92a3825e9d13e0b.png" width="600"/></div></li></ul><p> </p><h2 id="test">Test</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">python tools/demo.py video -n yolox-s -c  tools/YOLOX_outputs/Animals_Coco/last_epoch_ckpt.pth    --path    qq.avi  --conf 0.25 --nm</span><br><span class="line">s 0.45 --tsize 640 --save_result --device gpu</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>well done !</p>]]></content>
      
      
      <categories>
          
          <category> 提高姿势水平 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -- CV -- Yolox </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>爬虫，从入门到放弃</title>
      <link href="/2021/10/01/pachong/"/>
      <url>/2021/10/01/pachong/</url>
      
        <content type="html"><![CDATA[<center>爬虫学好，牢饭管饱</center><span id="more"></span><h2 id="概念介绍">概念介绍</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用requests抓取页面内容，并将响应赋值给page变量</span></span><br><span class="line">html = requests.get(<span class="string">&#x27;https://yuanyuspace.cn/tags/&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用content属性获取页面的源页面</span></span><br><span class="line"><span class="comment"># 使用BeautifulSoap解析，把内容传递到BeautifulSoap类</span></span><br><span class="line">soup = BeautifulSoup(html.content, <span class="string">&#x27;lxml&#x27;</span>)</span><br><span class="line">links = soup.find_all(<span class="string">&#x27;div&#x27;</span>, class_= <span class="string">&#x27;tag-cloud-tags&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># link的内容就是div，我们取它的span内容就是我们需要段子的内容</span></span><br><span class="line"><span class="keyword">for</span> link <span class="keyword">in</span> links:</span><br><span class="line">    print(link.get_text())</span><br></pre></td></tr></table></figure><p>得到结果 <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">D:\ananconda\python.exe <span class="string">&quot;D:\pycharmm\PyCharm Community Edition 2020.3.4\plugins\python-ce\helpers\pydev\pydevd.py&quot;</span> --multiproc --qt-support=auto --client <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span> --port <span class="number">3450</span> --file C:/Users/<span class="number">11734</span>/PycharmProjects/pythonProject1/main.py</span><br><span class="line">Connected to pydev debugger (build <span class="number">203.7717</span><span class="number">.65</span>)</span><br><span class="line"></span><br><span class="line">AI CS CV docker 写给CC 卡尔曼滤波 图像融合 好玩的 正则化表达式 爬虫 目标跟踪 自动驾驶</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Process finished <span class="keyword">with</span> exit code <span class="number">0</span></span><br></pre></td></tr></table></figure></p><h2 id="section"></h2><h2 id="资料">资料</h2><p><a href="https://zhuanlan.zhihu.com/p/35324806?utm_source=wechat_session&amp;utm_medium=social&amp;utm_oi=745016002512715776&amp;wechatShare=1&amp;s_r=0">爬虫基本原理</a></p>]]></content>
      
      
      <categories>
          
          <category> 一些技能 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 好玩的 </tag>
            
            <tag> 爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Regular Expression</title>
      <link href="/2021/10/01/learnregex/"/>
      <url>/2021/10/01/learnregex/</url>
      
        <content type="html"><![CDATA[<center>学习正则表达式</center><span id="more"></span><h2 id="定义">定义</h2><ul><li>定义：正则表达式是一组由字母和符号组成的特殊文本，它可以用来从文本中找出满足你想要的格式的句子。一个正则表达式是一种从左到右匹配主体字符串的模式</li><li><a href="https://github.com/ziishaned/learn-regex/blob/master/translations/README-cn.md">github地址</a></li></ul><p> </p><h2 id="基本匹配">基本匹配</h2><ul><li>一个正则表达式 the，它表示一个规则：由字母t开始，接着是h，再接着是e <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;the&quot; &#x3D;&gt; The fat cat sat on the mat.</span><br></pre></td></tr></table></figure></li><li><a href="https://regex101.com/r/dmRygT/1">练习地址</a></li></ul><p> </p><h2 id="元字符">元字符</h2><p>  正则表达式主要依赖于元字符。 元字符不代表他们本身的字面意思，他们都有特殊的含义。一些元字符写在方括号中的时候有一些特殊的意思。以下是一些元字符的介绍：</p><table><thead><tr class="header"><th style="text-align: center;">元字符</th><th>描述</th></tr></thead><tbody><tr class="odd"><td style="text-align: center;">.</td><td>句号匹配任意单个字符除了换行符。</td></tr><tr class="even"><td style="text-align: center;">[ ]</td><td>字符种类。匹配方括号内的任意字符。</td></tr><tr class="odd"><td style="text-align: center;">[^ ]</td><td>否定的字符种类。匹配除了方括号里的任意字符</td></tr><tr class="even"><td style="text-align: center;">*</td><td>匹配&gt;=0个重复的在*号之前的字符。</td></tr><tr class="odd"><td style="text-align: center;">+</td><td>匹配&gt;=1个重复的+号前的字符。</td></tr><tr class="even"><td style="text-align: center;">?</td><td>标记?之前的字符为可选.</td></tr><tr class="odd"><td style="text-align: center;">{n,m}</td><td>匹配num个大括号之前的字符或字符集 (n &lt;= num &lt;= m).</td></tr><tr class="even"><td style="text-align: center;">(xyz)</td><td>字符集，匹配与 xyz 完全相等的字符串.</td></tr><tr class="odd"><td style="text-align: center;">|</td><td>或运算符，匹配符号前或后的字符.</td></tr><tr class="even"><td style="text-align: center;">\</td><td>转义字符,用于匹配一些保留的字符 <code>[ ] ( ) &#123; &#125; . * + ? ^ $  |</code></td></tr><tr class="odd"><td style="text-align: center;">^</td><td>从开始行开始匹配.</td></tr><tr class="even"><td style="text-align: center;">$</td><td>从末端开始匹配.</td></tr></tbody></table><p> </p><h2 id="简写字符集">简写字符集</h2><p>  正则表达式提供一些常用的字符集简写。如下:</p><table><thead><tr class="header"><th style="text-align: center;">简写</th><th>描述</th></tr></thead><tbody><tr class="odd"><td style="text-align: center;">.</td><td>除换行符外的所有字符.</td></tr><tr class="even"><td style="text-align: center;"><code>\w</code></td><td>匹配所有字母数字，等同于 <code>[a-zA-Z0-9_]</code>.</td></tr><tr class="odd"><td style="text-align: center;"><code>\W</code></td><td>匹配所有非字母数字，即符号，等同于： <code>[^\w]</code>.</td></tr><tr class="even"><td style="text-align: center;"><code>\d</code></td><td>匹配数字： <code>[0-9]</code>.</td></tr><tr class="odd"><td style="text-align: center;"><code>\D</code></td><td>匹配非数字： <code>[^\d]</code>.</td></tr><tr class="even"><td style="text-align: center;"><code>\s</code></td><td>匹配所有空格字符，等同于： <code>[\t\n\f\r\p&#123;Z&#125;]</code>.</td></tr><tr class="odd"><td style="text-align: center;"><code>\S</code></td><td>匹配所有非空格字符： <code>[^\s]</code>.</td></tr><tr class="even"><td style="text-align: center;"><code>\f</code></td><td>匹配一个换页符.</td></tr><tr class="odd"><td style="text-align: center;"><code>\n</code></td><td>匹配一个换行符.</td></tr><tr class="even"><td style="text-align: center;"><code>\r</code></td><td>匹配一个回车符.</td></tr><tr class="odd"><td style="text-align: center;"><code>\t</code></td><td>匹配一个制表符.</td></tr><tr class="even"><td style="text-align: center;"><code>\v</code></td><td>匹配一个垂直制表符.</td></tr><tr class="odd"><td style="text-align: center;"><code>\p</code></td><td>匹配 CR/LF（等同于 <code>\r\n</code>），用来匹配 DOS 行终止符</td></tr></tbody></table><p> </p><h2 id="标志">标志</h2><p>  标志也叫模式修正符，因为它可以用来修改表达式的搜索结果。 这些标志可以任意的组合使用，它也是整个正则表达式的一部分。</p><table><thead><tr class="header"><th style="text-align: center;">标志</th><th>描述</th></tr></thead><tbody><tr class="odd"><td style="text-align: center;">i</td><td>忽略大小写。</td></tr><tr class="even"><td style="text-align: center;">g</td><td>全局搜索。</td></tr><tr class="odd"><td style="text-align: center;">m</td><td>多行修饰符：锚点元字符 <code>^</code> <code>$</code> 工作范围在每行的起始。</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 提高姿势水平 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 正则化表达式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网页视频下载方法</title>
      <link href="/2021/09/30/download/"/>
      <url>/2021/09/30/download/</url>
      
        <content type="html"><![CDATA[<center>实用下载方法</center><span id="more"></span><h2 id="前言idm">前言：IDM</h2><p>  一直使用<a href="https://www.internetdownloadmanager.com/">IDM</a>作为下载器，但不知从何时起，IDM无法再直接抓取B站视频</p><p> </p><h2 id="annie-下载器">annie 下载器</h2><ul><li>偶然看到<a href="https://github.com/iawia002/annie">annie下载器</a>，效果似乎不错</li></ul><p> </p><h3 id="annie安装">annie安装</h3><ul><li>安装<a href="https://github.com/BtbN/FFmpeg-Builds/releases">FFmpeg</a></li><li>下载annie对应的release版本</li><li>解压FFmpeg 和 annie,将annie.exe复制到ffmpeg下bin文件夹内</li><li>新建ffmpeg和annie的系统环境变量</li></ul><p> </p><h3 id="annie-下载命令">annie 下载命令</h3><p>  下载 <figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">annie url</span><br></pre></td></tr></table></figure>   下载并查看视频质量 <figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">annie -i url</span><br></pre></td></tr></table></figure>   注意cmd 目录在哪，下载保存的位置就在哪。</p>]]></content>
      
      
      <categories>
          
          <category> 人生的经验 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 好玩的 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>darknet 源码学习</title>
      <link href="/2021/09/15/learndarknet/"/>
      <url>/2021/09/15/learndarknet/</url>
      
        <content type="html"><![CDATA[<center>darknet</center><span id="more"></span><h2 id="box.c">box.c</h2><ul><li><p><a href="https://www.cnblogs.com/qijunhui/p/8284188.html">x=x+1，x+=1，x++的区别</a></p></li><li><p>(a&gt;b)?y:n 如果A大于B，那么选择Y的结果，如果A小于B，那么选择N的结果。</p></li><li><p>计算两个矩形框相交部分矩形的某一边的边长（视调用情况，可能是相交部分矩形的高，也可能是宽）。<br />x1  第一个矩形框的x坐标（或者y坐标，视调用情况，如果计算的是相交部分矩形的宽，则输入的是x坐标)<br />w1  第一个矩形框的宽（而如果要计算相交部分矩形的高，则为y坐标，下面凡是说x坐标的，都可能为y坐标，当然，对应宽变为高)<br />x2  第二个矩形框的x坐标<br />w2  第二个矩形框的宽<br />  首先计算两个框左边的x坐标，比较大小，取其大者，记为left；而后计算两个框右边的x坐标，取其小者，记为right，right-left即得相交部分矩形的宽。两个矩形框相交部分矩形的宽或者高。 <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">float</span> <span class="title">overlap</span><span class="params">(<span class="keyword">float</span> x1, <span class="keyword">float</span> w1, <span class="keyword">float</span> x2, <span class="keyword">float</span> w2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">float</span> l1 = x1 - w1/<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">float</span> l2 = x2 - w2/<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">float</span> left = l1 &gt; l2 ? l1 : l2;</span><br><span class="line">    <span class="keyword">float</span> r1 = x1 + w1/<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">float</span> r2 = x2 + w2/<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">float</span> right = r1 &lt; r2 ? r1 : r2;</span><br><span class="line">    <span class="keyword">return</span> right - left;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p></li><li><p>计算IoU值,是目标检测精确度的一个评判指标，全称是intersection over union，翻译成中文就是交比并值，字面上的意思很直接，就是两个矩形相交部分的面积比两个矩形求并之后的总面积，用来做检测评判指标时，含义为模型检测到的矩形框与GroundTruth标记的矩形框之间的交比并值（即可反映检测到的矩形框与GroundTruth之间的重叠度），当两个矩形框完全重叠时，值为1；完全不相交时，值为0。 <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">float</span> <span class="title">box_intersection</span><span class="params">(box a, box b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">float</span> w = overlap(a.x, a.w, b.x, b.w);</span><br><span class="line">    <span class="keyword">float</span> h = overlap(a.y, a.h, b.y, b.h);</span><br><span class="line">    <span class="keyword">if</span>(w &lt; <span class="number">0</span> || h &lt; <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">float</span> area = w*h;</span><br><span class="line">    <span class="keyword">return</span> area;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p></li><li><p>pow(float x, float y)函数：计算x的y次幂</p></li></ul><h2 id="blas.c">blas.c</h2><ul><li>方差的无偏估计 （样本方差） <span class="math inline">\(\frac{1}{n-1} \sum_{i=1}^{n}\left(X_{i}-\bar{X}\right)^{2}\)</span>，你会发现样本均值这一项都包含在内。考虑到方差是衡量数据偏差程度的统计量，计算一下样本均值作为中间步骤的中间量，也不失其合理性。于是，为计算样本方差，样本里原有的 n个自由度，有一个自由度被分配给计算样本均值，剩下自由度即为n-1 。</li><li>axpy是线性代数中一种基本操作，完成y= alpha*x + y操作，其中x,y为矢量，alpha为实数系数</li><li>计算预测数组与真实标签数组中每对元素的l2范数值，或者说是计算squared error，注意此函数，并没有求和，没有将所有误差加起来，而是对网络输出的每个元素计算误差的平方值。<br />n  输出元素个数，也即pred中的元素个数，也是truth中的元素个数; pred   网络最终的输出值，或者说网络的预测值，其中输出元素个数为n（也即最后一层网络神经元个数为n）<br />truth   真实标签值，其中元素个数为n（也即最后一层网络神经元个数为n） delta   相当于本函数的输出，为网络的敏感度图（一般为cost_layer.c的敏感度图）<br />error   相当于本函数的输出，包含每个输出元素的squared error</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">l2_cpu</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">float</span> *pred, <span class="keyword">float</span> *truth, <span class="keyword">float</span> *delta, <span class="keyword">float</span> *error)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; n; ++i)&#123;</span><br><span class="line">        <span class="keyword">float</span> diff = truth[i] - pred[i];</span><br><span class="line">        error[i] = diff * diff;</span><br><span class="line">        delta[i] = diff;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>softmax<br />input   一组输入图片数据（含义见下面softmax_cpu()注释，下同）<br />n   一组输入数据中含有的元素个数n=l.inputs/l.groups<br />temp   温度参数，关于softmax的温度参数，<a href="https://blog.csdn.net/qq_36560894/article/details/114874268">softmax with temperature</a><br />stride   跨度<br />output   这一组输入图片数据对应的输出（也即l.output中与这一组输入对应的某一部分）<br />  本函数实现的就是标准的softmax函数处理，唯一有点变化的就是在做指数运算之前，将每个输入元素减去了该组输入元素中的最大值，以增加数值稳定性， <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">softmax</span><span class="params">(<span class="keyword">float</span> *input, <span class="keyword">int</span> n, <span class="keyword">float</span> temp, <span class="keyword">int</span> stride, <span class="keyword">float</span> *output)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">float</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">// 赋初始最大值为float中的最小值-FLT_MAX（定义在float.h中）</span></span><br><span class="line">    <span class="keyword">float</span> largest = -FLT_MAX;</span><br><span class="line">    <span class="comment">// 寻找输入中的最大值，至于为什么要找出最大值，是为了数值计算上的稳定，详细请戳：http://freemind.pluskid.org/machine-learning/softmax-vs-softmax-loss-numerical-stability/</span></span><br><span class="line">    <span class="comment">// 这篇博客写的不错，博客在接近尾声的时候，提到了为什么要减去输入中的最大值。</span></span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; n; ++i)&#123;</span><br><span class="line">        <span class="keyword">if</span>(input[i*stride] &gt; largest) largest = input[i*stride];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; n; ++i)&#123;</span><br><span class="line">        <span class="comment">// 在进行指数运算之间，如上面博客所说，首先减去最大值（当然温度参数也要除）</span></span><br><span class="line">        <span class="keyword">float</span> e = <span class="built_in">exp</span>(input[i*stride]/temp - largest/temp);</span><br><span class="line">        sum += e;                       <span class="comment">// 求和</span></span><br><span class="line">        output[i*stride] = e;           <span class="comment">// 并将每一个输入的结果保存在相应的输出中</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 最后一步：归一化转换为概率（就是softmax函数的原型～），最后的输出结果保存在output中</span></span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; n; ++i)&#123;</span><br><span class="line">        output[i*stride] /= sum;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p></li><li><p><a href="https://cloud.tencent.com/developer/section/1009009">赋值运算符</a></p></li><li><p><a href="https://www.zhihu.com/question/23765351">softmax</a></p></li></ul><h2 id="参考">参考</h2><ul><li><a href="https://blog.csdn.net/u012927281/article/details/86064511">linux codeblocks darknet Debug极简教程</a></li><li><a href="https://blog.csdn.net/u010122972/article/details/83541978?utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7Edefault-2.no_search_link&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7Edefault-2.no_search_link">Darknet 概述</a></li><li><a href="https://github.com/hgpvision/darknet">Darknet 框架源码分析</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 提高姿势水平 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CV </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>语法样本</title>
      <link href="/2021/09/03/sample/"/>
      <url>/2021/09/03/sample/</url>
      
        <content type="html"><![CDATA[<center>语法样本</center><span id="more"></span><h2 id="插入图片">插入图片</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div align&#x3D;center&gt;&lt;img src&#x3D;&quot;https:&#x2F;&#x2F;i.bmp.ovh&#x2F;imgs&#x2F;2021&#x2F;04&#x2F;b9dddd6c69cdbbba.png&quot; width&#x3D;&quot;300&quot;&#x2F;&gt;&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/04/b9dddd6c69cdbbba.png" width="300"/></div><h2 id="公式">公式</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line">E(\mathcal&#123;T&#125;) \approx \sum_&#123;i&#125; \sum_&#123;j&#125; \sqrt&#123;\sum_&#123;d&#125;\left(\nabla_&#123;1&#125; \mathbf&#123;r&#125;_&#123;i, j, d&#125;\right)^&#123;2&#125;+\left(\nabla_&#123;2&#125; \mathbf&#123;r&#125;_&#123;i, j, d&#125;\right)^&#123;2&#125;+\epsilon&#125;</span><br><span class="line">$$</span><br></pre></td></tr></table></figure><p><span class="math display">\[E(\mathcal{T}) \approx \sum_{i} \sum_{j} \sqrt{\sum_{d}\left(\nabla_{1} \mathbf{r}_{i, j, d}\right)^{2}+\left(\nabla_{2} \mathbf{r}_{i, j, d}\right)^{2}+\epsilon}\]</span></p><h2 id="代码块">代码块</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get autoremove</span><br></pre></td></tr></table></figure><p>注意```后面可以跟语言，点亮代码块</p><h2 id="超链接">超链接</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[SDK Manager](https:&#x2F;&#x2F;developer.nvidia.com&#x2F;nvidia-sdk-manager)</span><br></pre></td></tr></table></figure><p><a href="https://developer.nvidia.com/nvidia-sdk-manager">SDK Manager</a></p><h2 id="缩进与空行">缩进与空行</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&amp;emsp;&amp;emsp;缩进</span><br><span class="line"></span><br><span class="line">&amp;emsp;&amp;emsp;换行</span><br></pre></td></tr></table></figure><p>  缩进</p><p>  换行</p><h2 id="列举">列举</h2><ul><li>一二三四五</li><li>上山打老虎</li><li>老虎打不到</li><li>打到小松鼠</li></ul><h2 id="排序">排序</h2><ol type="1"><li>窗前明月光</li><li>疑是地上霜</li><li>举头望明月</li><li>低头思故乡</li></ol><h2 id="注释">注释</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[&#x2F;&#x2F;]: &lt;&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 网站建设 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 写给CC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ESP8266+点灯科技+天猫精灵+舵机 实现语音控制灯光开关</title>
      <link href="/2021/08/22/8266light/"/>
      <url>/2021/08/22/8266light/</url>
      
        <content type="html"><![CDATA[<center>物联网智能家居?</center><span id="more"></span><p> </p><h2 id="硬件">硬件</h2><ul><li>ESP 8266 12F WIFI 芯片</li><li>SG90 舵机*2</li><li>micro usb 数据线一根</li><li>杜邦线若干</li><li>充电宝（给芯片供电）</li><li>热熔胶（固定舵机等）</li></ul><p> </p><h2 id="软件">软件</h2><ul><li><a href="https://www.arduino.cc/">Arduino</a></li><li>blinker(手机App)</li><li>天猫精灵(手机App)</li></ul><p> </p><h2 id="blinker设置">blinker设置</h2><ul><li>打开blinker--&gt;添加设备--&gt;独立设备--&gt;网络接入--&gt;阿里云--&gt;复制key<div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/09/92cf7a2bf8a738ad.jpg" width="200"/></div></li><li>返回我的设备--&gt;新的设备--&gt;设置--&gt;修改设备名和图标<div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/09/e4b0402e4fc018d9.jpg" width="200"/></div></li></ul><p> </p><h2 id="天猫精灵设置">天猫精灵设置</h2>  绑定点灯科技账号：我的--&gt;智能家居管理--&gt;搜索绑定blinker<div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/09/a3aac69b62133404.jpg" width="200"/></div><p> </p><h2 id="esp8266烧录">esp8266烧录</h2><h3 id="esp8266-驱动安装">esp8266 驱动安装</h3><p>  <a href="https://www.onlinedown.net/soft/1164748.htm">CH340驱动安装</a>, 不然显示不出端口，在设备管理器里能看到端口</p><p> </p><h3 id="ardunio添加开发板管理网址">Ardunio添加开发板管理网址</h3>  文件--&gt;首选项--&gt;设置--&gt;附件开发板管理器网址 添加https://www.arduino.cn/package_esp8266com_index.json<div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/09/670dd29d5725851b.png" width="400"/></div><p> </p><h3 id="ardunio开发板管理器添加esp8266">Ardunio开发板管理器添加esp8266</h3>  工具--&gt;开发板--&gt;开发板管理器--&gt;搜索安装esp8266<div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/09/f336be32f59e4383.png" width="400"/></div><p> </p><h3 id="ardunio安装blinker库文件">Ardunio安装blinker库文件</h3>  工具--&gt;库管理--&gt;搜索安装blinker<div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/09/ac71331558c129e1.png" width="400"/></div><p> </p><h3 id="ardunio代码编写">Ardunio代码编写</h3><ul><li>同时使用两个舵机来控制开关</li><li>char auth[] = "548fbd17b6d7" 填入blinker里复制的key</li><li>myservo1.attach(D0) 意思是用D0作为舵机1的控制信号线; myservo2.attach(D1) 意思是用D1作为舵机2的控制信号线</li><li>舵机旋转角度需要根据安装舵机位置自己调节</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BLINKER_WIFI</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BLINKER_ALIGENIE_OUTLET</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Servo.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="comment">// #define PIN_SERVO D0  //舵机信号线</span></span><br><span class="line"></span><br><span class="line">Servo myservo1;</span><br><span class="line">Servo myservo2;</span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Blinker.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> auth[] = <span class="string">&quot;548fbd17b6d7&quot;</span>;     <span class="comment">// key</span></span><br><span class="line"><span class="keyword">char</span> ssid[] = <span class="string">&quot;ChinaNet-xxXx&quot;</span>;    <span class="comment">// wifi name</span></span><br><span class="line"><span class="keyword">char</span> pswd[] = <span class="string">&quot;xxxxxxxx&quot;</span>;         <span class="comment">// wifi passpord </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> oState = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">aligeniePowerState</span><span class="params">(<span class="keyword">const</span> String &amp; state)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    BLINKER_LOG(<span class="string">&quot;need set power state: &quot;</span>, state);</span><br><span class="line"></span><br><span class="line">    myservo1.attach(D0);</span><br><span class="line">    myservo2.attach(D1);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (state == BLINKER_CMD_ON) &#123;</span><br><span class="line">        myservo1.write(<span class="number">48</span>);<span class="comment">//舵机正转度数</span></span><br><span class="line">        myservo2.write(<span class="number">60</span>);</span><br><span class="line">        delay(<span class="number">1000</span>); </span><br><span class="line"></span><br><span class="line">        BlinkerAliGenie.powerState(<span class="string">&quot;on&quot;</span>);</span><br><span class="line">        BlinkerAliGenie.print();</span><br><span class="line"></span><br><span class="line">        oState = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (state == BLINKER_CMD_OFF) &#123;</span><br><span class="line"></span><br><span class="line">        myservo1.write(<span class="number">-48</span>);<span class="comment">//舵机反转度数</span></span><br><span class="line">        myservo2.write(<span class="number">-60</span>);</span><br><span class="line">        delay(<span class="number">1000</span>); </span><br><span class="line">       </span><br><span class="line">        BlinkerAliGenie.powerState(<span class="string">&quot;off&quot;</span>);</span><br><span class="line">        BlinkerAliGenie.print();</span><br><span class="line"></span><br><span class="line">        oState = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">aligenieQuery</span><span class="params">(<span class="keyword">int32_t</span> queryCode)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    BLINKER_LOG(<span class="string">&quot;AliGenie Query codes: &quot;</span>, queryCode);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">switch</span> (queryCode)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">case</span> BLINKER_CMD_QUERY_ALL_NUMBER :</span><br><span class="line">            BLINKER_LOG(<span class="string">&quot;AliGenie Query All&quot;</span>);</span><br><span class="line">            BlinkerAliGenie.powerState(oState ? <span class="string">&quot;on&quot;</span> : <span class="string">&quot;off&quot;</span>);</span><br><span class="line">            BlinkerAliGenie.print();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> BLINKER_CMD_QUERY_POWERSTATE_NUMBER :</span><br><span class="line">            BLINKER_LOG(<span class="string">&quot;AliGenie Query Power State&quot;</span>);</span><br><span class="line">            BlinkerAliGenie.powerState(oState ? <span class="string">&quot;on&quot;</span> : <span class="string">&quot;off&quot;</span>);</span><br><span class="line">            BlinkerAliGenie.print();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span> :</span><br><span class="line">            BlinkerAliGenie.powerState(oState ? <span class="string">&quot;on&quot;</span> : <span class="string">&quot;off&quot;</span>);</span><br><span class="line">            BlinkerAliGenie.print();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dataRead</span><span class="params">(<span class="keyword">const</span> String &amp; data)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    BLINKER_LOG(<span class="string">&quot;Blinker readString: &quot;</span>, data);</span><br><span class="line"></span><br><span class="line">    Blinker.vibrate();</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">uint32_t</span> BlinkerTime = millis();</span><br><span class="line">    </span><br><span class="line">    Blinker.print(<span class="string">&quot;millis&quot;</span>, BlinkerTime);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Serial.begin(<span class="number">115200</span>);</span><br><span class="line">    BLINKER_DEBUG.stream(Serial);</span><br><span class="line"></span><br><span class="line">    pinMode(LED_BUILTIN, OUTPUT);</span><br><span class="line">    digitalWrite(LED_BUILTIN, LOW);</span><br><span class="line"></span><br><span class="line">    Blinker.begin(auth, ssid, pswd);</span><br><span class="line">    Blinker.attachData(dataRead);</span><br><span class="line">    </span><br><span class="line">    BlinkerAliGenie.attachPowerState(aligeniePowerState);</span><br><span class="line">    BlinkerAliGenie.attachQuery(aligenieQuery);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Blinker.run();</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p> </p><h3 id="ardunio代码烧录">Ardunio代码烧录</h3><ul><li>将esp8266用micro usb 数据线连接电脑</li><li>工具--&gt;开发板--&gt;选 NodeMcu 0.9<div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/09/ebd426e2e78782bc.png" width="400"/></div></li><li>工具--&gt;端口--&gt;根据8266端口号码选择</li><li>点击Ardunio左上角箭头图标，编译上传到esp8266芯片</li><li>上传成功后，芯片蓝色led转为常亮状态</li></ul><p> </p><h2 id="esp8266连接舵机与最后安装调试">esp8266连接舵机与最后安装调试</h2><h3 id="舵机接线">舵机接线</h3>  两舵机橙色分别接D0和1，红色接VV或者3V，棕色接G<div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/09/afe3f5d435395206.jpg" width="300"/></div><p> </p><h3 id="安装固定舵机">安装固定舵机</h3>  用热熔胶固定舵机，用充电宝给8266供电<div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/09/4da94f9b2196184c.jpg" width="300"/></div><p> </p><h3 id="语音控制">语音控制</h3><iframe class="bilibili" src="//player.bilibili.com/player.html?aid=547884022&amp;bvid=BV1pq4y1N7Ck&amp;cid=406545346&amp;page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"></iframe><p> </p><h3 id="改进测试">改进测试</h3><ul><li>可支持多台设备</li><li>网络有延迟：blinker同步到天猫精灵要时间</li><li>其他语音助手也可以</li></ul><p> </p><h2 id="资料来源">资料来源</h2><ul><li><a href="https://blog.csdn.net/qq_47749454/article/details/117638828">ESP8266 WIFI+舵机+小爱同学+blinker___宿舍关灯神器</a></li><li><a href="https://diandeng.tech/doc/voice-assistant">点灯科技接入语音助手</a></li><li><a href="https://www.bilibili.com/video/BV1Me411s7oV?spm_id_from=333.999.0.0">esp8266接入语音助手bilibili教程</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 人生的经验 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 好玩的 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>自组双目测距定位系统</title>
      <link href="/2021/08/18/haikangcam/"/>
      <url>/2021/08/18/haikangcam/</url>
      
        <content type="html"><![CDATA[<center>双目相机，自己动手省钱95%</center><span id="more"></span><p> </p><h2 id="硬件结构">硬件结构</h2><ul><li>海康威视工业相机：MV-CE120-10UM/UC 1/1.7' CMOS + MVL-KF1228M-12MP 12mm 镜头 + 触发线缆<br /></li><li><a href="https://pan.baidu.com/s/1oLuOgixCIC-fdbDDdDQywA">海康威视相机资料，提取码：6666</a></li><li>Nvidia Jetson NX 开发板</li><li>结构件（横梁用来固定双目基线等）</li><li>总体示意图：<div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/09/d5d4e074ae0afa7e.png" width="400"/></div></li></ul><p> </p><h2 id="术语">术语</h2><h3 id="全局快门">全局快门</h3>  支持全局快门的相机，每一行同时开始曝光，同时结束曝光，曝光完成后，数据开始逐行读出。相机传感器接受曝光、数据读出的时间长度一致，但结束数据读出的时间不一致。<div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/08/29dd97ab8dccc543.png" width="400"/></div><center>全局快门</center><p> </p><h3 id="卷帘快门">卷帘快门</h3>  支持卷帘快门的相机，第一行曝光结束后，立即开始读出数据，数据完全读出后，下一行开始读出数据，每一行与上一行开始曝光的时间差为数据读出时间，如此循环。相机传感器接受曝光、数据读出的时间长度一致，但开始接受曝光的时间不一致。<div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/08/1b2cd07ef5b920e2.png" width="400"/></div><center>卷帘快门</center><p> </p><h3 id="触发">触发</h3><ul><li>相机的触发模式分为内触发模式和外触发模式 2 种</li><li>内触发模式：相机通过设备内部给出的信号采集图像</li><li>外触发模式：相机通过外部给出的信号采集图像。外部信号可以是软件信号，也可以是硬件信号，包含软触发、硬件触发、计数器触发和自由触发4种方式</li><li>软触发：触发信号由软件发出，通过千兆网传输给相机进行采图</li><li>硬件触发：外部设备通过相机的 I/O 接口与相机进行连接，触发信号由外部设备给到相机进行采图</li><li>计数器触发：通过计数器的方式给相机信号进行采图</li><li>自由触发：相机可接收软触发或硬件触发信号</li><li>触发响应方式，如下图：<div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/08/640994edd39da129.png" width="400"/></div><center>触发响应方式工作原理及参数</center></li></ul><p> </p><h3 id="光耦隔离输入输出">光耦隔离输入/输出</h3><p>  <a href="https://www.eet-china.com/mp/a51439.html">光耦的核心应用是隔离作用，常用于输入与输出之间无共地的系统</a></p><p> </p><h3 id="上拉下拉电阻">上拉/下拉电阻</h3><p>  <a href="https://nobuta.blog.csdn.net/article/details/81230836?utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromMachineLearnPai2%7Edefault-2.essearch_pc_relevant&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromMachineLearnPai2%7Edefault-2.essearch_pc_relevant">上拉电阻：将一个不确定信号（高或低电平），通过一个电阻与电源VCC相连，固定在高电平；同理下拉电阻就是：将一个不确定信号（高或低电平），通过一个电阻与地GND相连，固定在低电平</a></p><p> </p><h3 id="binning">Binning</h3><p>  Binning 功能可将多个相邻像素合并为一个像素，降低分辨率的同时提高图像亮度。</p><p>  下采样功能是在多个相邻像素中选择一个像素，可以降低输出分辨率。</p><p> </p><h3 id="黑电平">黑电平</h3><p>  黑电平可以调整输出数据的灰度值偏移量，决定相机传感器不感光时的平均灰度值。</p><p> </p><h3 id="gamma校正">Gamma校正</h3>  通常相机芯片的输出与照射在芯片感光面的光子是线性的， Gamma 校正提供了一种输出非线性的映射机制。Gamma 值在 0.5 ~ 1 之间，图像暗处亮度提升；Gamma 值在 1 ~ 4 之间，图像暗处亮度下降。<div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/08/f65e2096dc213ff0.png" width="300"/></div><center>Gamma曲线图</center><p> </p><h2 id="环境配置">环境配置</h2><h3 id="sdk下载与安装">SDK下载与安装</h3><p>  <a href="https://www.hikrobotics.com/cn/machinevision/service/download?module=0">MVS SDK 下载链接</a>，NX选ARM架构安装</p><p> </p><h3 id="巨帧与ip">巨帧与IP</h3><p>  U口相机不用像网口一样配置开启巨帧和设置静态IP</p><p> </p><h3 id="用客户端打开相机">用客户端打开相机</h3><p>  ARM架构打开MVS客户端： <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;opt&#x2F;MVS&#x2F;bin</span><br><span class="line">.&#x2F;MVS</span><br></pre></td></tr></table></figure></p><p> </p><h2 id="相机基础">相机基础</h2><h3 id="cmos">CMOS</h3><ul><li>相机CMOS索尼IMX226</li><li>靶面1/1.7"</li><li>1200万像素（4000<em>3036）</em> 最大帧率31fps</li><li>彩色</li><li>9~24V直流供电，支持USB 3.0供电</li></ul><p> </p><h3 id="镜头">镜头</h3><ul><li>镜头焦距12mm（<a href="https://blog.csdn.net/ding283595861/article/details/103194955">等效全画幅下53.52mm</a>）</li><li>光圈F/2.8-F/16</li><li>视场角1.1"，HFOV(horizontal field of view) 59.8°, VFOV(vertical field of view) 46.2°, DFOV(display field of view) 70.5°</li><li>最近摄距0.1m</li><li>白点所在环分别为对焦环和光圈调整环，带有锁紧螺丝<div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/09/e8f83964e79dbe60.jpg" width="300"/></div><center>对焦环与光圈环</center></li></ul><p> </p><h3 id="正确曝光">正确曝光</h3><p>  由于初始使用原生iso，画面需要数字增益来控制画面正确曝光：在采集控制(Acquisition Control)--&gt;自动曝光(Exposure Auto) 设置为连续，并将模拟控制(Analog Control)--&gt;自动增益(Gain Auto) 设置为连续</p><p> </p><h2 id="硬件同步触发">硬件同步触发</h2><h3 id="硬件触发需求">硬件触发需求</h3><p>  双目相机意味着两台相机要尽可能在一时刻同时采集图像，尽可能减小采集时间差，而软件由于时钟源以及线程时序等问题，难以获得较好的时钟同步结果，故采用硬件触发</p><p> </p><h3 id="线缆接法">线缆接法</h3><ul><li>两个相机PWR对应的6pin线缆中，管脚定义如下<div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/09/5b9040cc7e7dd694.png" width="300"/></div><center>6pin管脚信号定义</center></li><li>两个相机的红黑色线缆分别于各自的电源适配器相连，蓝色信号线一起连接一根杜邦线<div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/09/46ab8cf824ca71aa.jpg" width="300"/></div><center>红色+12V，蓝色I/O input 1, 黄色无连接 ，绿色I/O output 1, 白色 I/O ground, 黑色 GND</center></li><li>连接好后，可以在MVS上同时打开显示两台相机，注意由于NX板载电压不足，两相机的USB应插在不同基座的接口上</li></ul><p> </p><h3 id="nx配置固定频率输出信号">NX配置固定频率输出信号</h3><ul><li><p><a href="https://blog.csdn.net/as480133937/article/details/103439546">PWM</a>在此不适用，如果快门时间很短，一个PWM波内可能拍几张</p></li><li><p><a href="https://github.com/NVIDIA/jetson-gpio">GPIO</a>，使用simple/simple_out.py 单峰脉冲信号 <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> RPi.GPIO <span class="keyword">as</span> GPIO</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="comment"># Pin Definitions</span></span><br><span class="line">output_pin = <span class="number">18</span>  <span class="comment"># BCM pin 18, BOARD pin 12</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    <span class="comment"># Pin Setup:</span></span><br><span class="line">    GPIO.setmode(GPIO.BCM)  <span class="comment"># BCM pin-numbering scheme from Raspberry Pi</span></span><br><span class="line">    <span class="comment"># set pin as an output pin with optional initial state of HIGH</span></span><br><span class="line">    GPIO.setup(output_pin, GPIO.OUT, initial=GPIO.HIGH)</span><br><span class="line"></span><br><span class="line">    print(<span class="string">&quot;Starting demo now! Press CTRL+C to exit&quot;</span>)</span><br><span class="line">    curr_value = GPIO.HIGH</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            time.sleep(<span class="number">1</span>)</span><br><span class="line">            <span class="comment"># Toggle the output every second</span></span><br><span class="line">            print(<span class="string">&quot;Outputting &#123;&#125; to pin &#123;&#125;&quot;</span>.<span class="built_in">format</span>(curr_value, output_pin))</span><br><span class="line">            GPIO.output(output_pin, curr_value)</span><br><span class="line">            curr_value ^= GPIO.HIGH</span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        GPIO.cleanup()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure></p></li><li><p><a href="https://www.jetsonhacks.com/nvidia-jetson-xavier-nx-gpio-header-pinout/">NX pin口不等于GPIO口</a></p></li><li><p>蓝色杜邦线接GPIO13</p></li><li><p>在MVS--&gt;数字IO控制中，选择LINE 2;在采集控制一栏，打开触发模式，触发源LINE 2,触发源选高电平</p><div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/09/40af676189d09811.png" width="400"/></div><center><p>触发源选LINE 2</p></center></li><li><p>如此便可以得到双目采集结果</p><div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/09/a71de36f5045335c.jpg" width="400"/></div><center><p>双目显示结果</p></center></li></ul><h2 id="仍需解决">仍需解决</h2><ul><li>SDK二次开发</li><li>双目采集的以AVI保存视频，如何两个视频之间帧对齐</li><li>结构件</li><li>双目标定</li><li>融合双目测距算法（已有）</li></ul>]]></content>
      
      
      <categories>
          
          <category> 一些项目 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 好玩的 </tag>
            
            <tag> CV </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于 ZeroMQ 的数据（图像）传输系统</title>
      <link href="/2021/05/25/datatrans/"/>
      <url>/2021/05/25/datatrans/</url>
      
        <content type="html"><![CDATA[<center>各子平台间实时传输图像</center><span id="more"></span><p> </p><h2 id="foreword">Foreword</h2><ul><li>硬件平台 Nvidia Jetson Xavier NX, 系统 Ubuntu 18.04</li><li>一开始用准备用 udp，卡在cmake升级</li><li><a href="https://zhuanlan.zhihu.com/p/59161370">cmake</a></li><li><a href="https://blog.csdn.net/cxsydjn/article/details/79548984">make、cmake、make install 区别</a></li><li>htop查看进程</li></ul><p> </p><h2 id="libzmq-编译安装">libzmq 编译安装</h2><ul><li><p><a href="https://github.com/zeromq/libzmq">libzmq</a>下载4.3.4版本</p></li><li><p>解压libzmq <figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> build</span><br><span class="line"><span class="built_in">cd</span> build </span><br><span class="line">cmake -DCMAKE_INSTALL_PREFIX=/home/***指定的文件夹路径 ..</span><br><span class="line">make</span><br><span class="line">make install -j4</span><br></pre></td></tr></table></figure> 注：-D***修改安装路径(cmake-gui也可以改)<br />  两个点代表上级目录(CMakeLists.txt)<br />  home后跟用户名才是任务管理器里的home(ctrl+L查看路径，文件管理器刷新ctrl+R)</p><p> </p></li></ul><h2 id="编译output脚本">编译output脚本</h2><ul><li>解压 <a href="https://pan.baidu.com/s/1lJ_fhq45AMoapKU0-t_s8A">output.tar.gz</a><br /></li><li>修改CMakeLists.txt 里ZeroMQ路径，改成/home/&lt;&gt;/lib/CMake/ZeroMQ 33行的OpenCV_DIR可以注释掉，如果后边自己编译了opencv库（就像这个libzmq一样），也可以指定路径<br /></li><li>缺少<a href="https://pan.baidu.com/s/1Xu_y8Vck9Z8PTuyOpDKvQA">minunit.h(提取码6666)</a>头文件，将其放在3rd-party文件夹下面<br />将 CV_LOAD_IMAGE_COLOR 改成1</li></ul><p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> build</span><br><span class="line"><span class="built_in">cd</span> build </span><br><span class="line">cmake ..</span><br><span class="line">make</span><br></pre></td></tr></table></figure></p><p> </p><h2 id="rtsp取流">RTSP取流</h2><p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;opencv2\opencv.hpp&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> cv;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"> VideoCapture capture;</span><br><span class="line"> capture.open(<span class="string">&quot;../../bin/data/1.mp4&quot;</span>);</span><br><span class="line"> <span class="comment">//capture.open(&quot;rtsp://admin:admin123@192.168.1.164:554/cam/realmonitor?channel=1&amp;subtype=0&quot;);</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">int</span> frameH = capture.get(<span class="number">4</span>);</span><br><span class="line">  <span class="keyword">int</span> frameW = capture.get(<span class="number">3</span>);</span><br><span class="line">  <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;frameH:&quot;</span> &lt;&lt; frameH &lt;&lt; <span class="string">&quot;  frameW:&quot;</span> &lt;&lt; frameW &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">  &#123;</span><br><span class="line">      Mat frame;</span><br><span class="line">      capture &gt;&gt; frame;</span><br><span class="line">  </span><br><span class="line">      <span class="keyword">if</span> (frame.empty())</span><br><span class="line">      &#123;</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      imshow(<span class="string">&quot;test&quot;</span>, frame);</span><br><span class="line">      waitKey(<span class="number">30</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p> </p><h2 id="端口配置">端口配置</h2><ul><li><p>配置发布订阅端的tcp地址，如： <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;PUB&quot;</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">&quot;id&quot;</span>: <span class="string">&quot;0xABA2&quot;</span>,</span><br><span class="line">            <span class="string">&quot;length&quot;</span>: <span class="number">0</span>,</span><br><span class="line">            <span class="string">&quot;port&quot;</span>: <span class="string">&quot;tcp://192.168.137.88:5555&quot;</span></span><br><span class="line">       &#125;</span><br><span class="line">    ],</span><br><span class="line">    <span class="string">&quot;SUB&quot;</span>: [</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></p></li><li><p>tcp地址为设备ip地址加一个四位端口号（不重复即可）；同时注意一台设备可以同时充当发布订阅端（自发自收）</p><p> </p></li></ul><h2 id="测试">测试</h2>  运行output下编译通过的demo，帧率通过waitkey等调节。<div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/09/40257827480f158c.jpg" width="500"/></div><p> </p><h2 id="源代码">源代码</h2><p>  <a href="https://pan.baidu.com/s/1s8K3tLsEAQdYGR_pLrEsEg">工程代码,提取码：6666</a></p>]]></content>
      
      
      <categories>
          
          <category> 一些技能 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 好玩的 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Extended Kalman Filter (python)</title>
      <link href="/2021/04/26/EKF/"/>
      <url>/2021/04/26/EKF/</url>
      
        <content type="html"><![CDATA[<center>拓展卡尔曼滤波(python)</center><span id="more"></span><p> </p><p>// 初值<span class="math inline">\(x_{0}=[120,4,25,0]^{T}\)</span>, 量测初值<span class="math inline">\(\hat{x}_{0}=[125,4.1,26,0.1]^{T}\)</span> // T为采样周期，q为过程噪声方差，r为量测噪声方差<br />// N为蒙特卡洛模拟次数<br />// 初始状态协方差矩阵<span class="math inline">\(P_{0}=0.2 I_{4 \times 4}\)</span><br />// 定常速度模型 constant velocity <span class="math display">\[\begin{array}{l}x_{k+1} \triangleq\left[\begin{array}{l}x_{k+1} \\\dot{x}_{k+1} \\y_{k+1} \\\dot{y}_{k+1}\end{array}\right]=F_{k} x_{k}+\Gamma_{k} v_{k}\\\\z_{k+1} \triangleq\left[\begin{array}{l}z_{k+1}^{x} \\z_{k+1}^{y}\end{array}\right]=\left[\begin{array}{l}\sin \left(x_{k+1}\right) \\\cos \left(y_{k+1}\right)\end{array}\right]+w_{k+1}\end{array}\]</span></p><p>// 其中 <span class="math display">\[\begin{array}{l}F_{k}=\left[\begin{array}{cccc}1 &amp; T &amp; 0 &amp; 0 \\0 &amp; 1 &amp; 0 &amp; 0 \\0 &amp; 0 &amp; 1 &amp; T \\0 &amp; 0 &amp; 0 &amp; 1\end{array}\right]\\\\\Gamma_{k}=\left[\begin{array}{cc}T^{2} / 2 &amp; 0 \\T &amp; 0 \\0 &amp; T^{2} / 2 \\0 &amp; T\end{array}\right] \\ \\E\left[v_{k}\right]=\left[\begin{array}{l}0 \\0\end{array}\right], Q_{k} \triangleq E\left[v_{k} v_{k}^{T}\right]=\left[\begin{array}{ll}q &amp; 0 \\0 &amp; q\end{array}\right] \\\\E\left[w_{k+1}\right]=\left[\begin{array}{l}0 \\0\end{array}\right], R_{k+1} \triangleq E\left[w_{k+1} w_{k+1}^{T}\right]=\left[\begin{array}{ll}1 &amp; 0 \\0 &amp; 1\end{array}\right]\end{array}\]</span></p><p> </p><p>源代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line">T = <span class="number">0.1</span></span><br><span class="line">q = <span class="number">0.2</span></span><br><span class="line">r = <span class="number">1</span></span><br><span class="line">R = np.array([[<span class="number">1</span>, <span class="number">0</span>],</span><br><span class="line">              [<span class="number">0</span>, <span class="number">1</span>]])</span><br><span class="line">Q = np.array([[q, <span class="number">0</span>],</span><br><span class="line">              [<span class="number">0</span>, q]])</span><br><span class="line">N = <span class="number">100</span>      <span class="comment"># Monte Carlo simulation times</span></span><br><span class="line"></span><br><span class="line">M_measTime = []</span><br><span class="line">M_measPos_x = []</span><br><span class="line">M_measPos_y = []</span><br><span class="line">M_estPos_x = []</span><br><span class="line">M_estPos_y = []</span><br><span class="line">M_reaPos_x = []</span><br><span class="line">M_reaPos_y = []</span><br><span class="line">M_reaVel_x = []</span><br><span class="line">M_reaVel_y = []</span><br><span class="line">M_estVel_x = []</span><br><span class="line">M_estVel_y = []</span><br><span class="line">RMS_p = []</span><br><span class="line">RMS_v = []</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">h</span>(<span class="params">x,y</span>):</span></span><br><span class="line">    H = np.array([[np.sin(x)],</span><br><span class="line">                  [np.cos(y)]])</span><br><span class="line">    <span class="keyword">return</span> H</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hd</span>(<span class="params">x,y</span>):</span></span><br><span class="line">    HD = np.array([[np.cos(x), <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">                   [<span class="number">0</span>, <span class="number">0</span>, -<span class="number">1</span> * np.sin(y), <span class="number">0</span>]])</span><br><span class="line">    <span class="keyword">return</span> HD</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(N):</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getMeasurement</span>(<span class="params">updateNumber</span>):</span></span><br><span class="line">        <span class="keyword">if</span> updateNumber == <span class="number">1</span>:</span><br><span class="line">          getMeasurement.currentPosition_x = <span class="number">120</span> </span><br><span class="line">          getMeasurement.currentVelocity_x = <span class="number">4</span> </span><br><span class="line">          getMeasurement.currentPosition_y = <span class="number">25</span> </span><br><span class="line">          getMeasurement.currentVelocity_y = <span class="number">0</span> </span><br><span class="line"></span><br><span class="line">        w = np.random.normal(loc=<span class="number">0</span>,scale=np.sqrt(r),size=<span class="number">1</span>)</span><br><span class="line">        v = np.random.normal(loc=<span class="number">0</span>,scale=np.sqrt(q),size=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">        xx = getMeasurement.currentPosition_x + getMeasurement.currentVelocity_x*T + v</span><br><span class="line">        yy = getMeasurement.currentPosition_y + getMeasurement.currentVelocity_y*T + v</span><br><span class="line">        getMeasurement.currentPosition_x = xx - v</span><br><span class="line">        getMeasurement.currentPosition_y = yy - v</span><br><span class="line">        getMeasurement.currentVelocity_x = <span class="number">4</span> + w</span><br><span class="line">        getMeasurement.currentVelocity_y = <span class="number">0</span> + w</span><br><span class="line">        <span class="keyword">return</span> [xx, yy, getMeasurement.currentPosition_x, getMeasurement.currentVelocity_x, getMeasurement.currentPosition_y, getMeasurement.currentVelocity_y] </span><br><span class="line">       </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">filter</span>(<span class="params">xx, yy, updateNumber</span>):</span></span><br><span class="line">        <span class="comment"># Initialize State</span></span><br><span class="line">        <span class="keyword">if</span> updateNumber == <span class="number">1</span>:</span><br><span class="line">            <span class="built_in">filter</span>.X = np.mat([[<span class="number">125</span>],</span><br><span class="line">                                 [<span class="number">4.1</span>],</span><br><span class="line">                                 [<span class="number">26</span>],</span><br><span class="line">                                 [<span class="number">0.1</span>]])</span><br><span class="line">            <span class="built_in">filter</span>.P = np.mat([[<span class="number">0.2</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">                                 [<span class="number">0</span>, <span class="number">0.2</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">                                 [<span class="number">0</span>, <span class="number">0</span>, <span class="number">0.2</span>, <span class="number">0</span>],</span><br><span class="line">                                 [<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.2</span>]])</span><br><span class="line">            <span class="built_in">filter</span>.F = np.mat([[<span class="number">1</span>, T, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">                                 [<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">                                 [<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, T],</span><br><span class="line">                                 [<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>]])</span><br><span class="line">            </span><br><span class="line">            <span class="built_in">filter</span>.Gamma = np.mat([[T**<span class="number">2</span>/<span class="number">2</span>, <span class="number">0</span>],</span><br><span class="line">                                     [T, <span class="number">0</span>],</span><br><span class="line">                                     [<span class="number">0</span>, T**<span class="number">2</span>/<span class="number">2</span>],</span><br><span class="line">                                     [<span class="number">0</span>, T]])  </span><br><span class="line">            <span class="built_in">filter</span>.R = R</span><br><span class="line">            <span class="built_in">filter</span>.Q = Q</span><br><span class="line"></span><br><span class="line">        <span class="comment"># print(xx)</span></span><br><span class="line">        <span class="comment"># J = np.array([[-0.1289, 0, 0, 0], [0, 0, -0.004, 0]])  </span></span><br><span class="line">        <span class="comment"># Predict State Forward</span></span><br><span class="line">        <span class="comment"># print(&#x27;fx&#x27;,filter.X)</span></span><br><span class="line">        <span class="comment"># print(&#x27;p&#x27;,filter.P)</span></span><br><span class="line">        X_prime = <span class="built_in">filter</span>.F.dot(<span class="built_in">filter</span>.X)</span><br><span class="line">        <span class="comment"># print(&#x27;xp&#x27;,X_prime)</span></span><br><span class="line">        <span class="comment"># Predict Covariance Forward</span></span><br><span class="line">        P_prime = <span class="built_in">filter</span>.F.dot(<span class="built_in">filter</span>.P).dot(<span class="built_in">filter</span>.F.T) + <span class="built_in">filter</span>.Gamma.dot(<span class="built_in">filter</span>.Q).dot(<span class="built_in">filter</span>.Gamma.T)</span><br><span class="line">        <span class="comment"># print(&#x27;pp&#x27;,P_prime)</span></span><br><span class="line">        <span class="comment"># Jacobian </span></span><br><span class="line">        J = [[np.cos(X_prime[<span class="number">0</span>,<span class="number">0</span>])  , <span class="number">0</span> ,<span class="number">0</span>,<span class="number">0</span>],</span><br><span class="line">                     [<span class="number">0</span>, <span class="number">0</span>, -<span class="number">1</span> * np.sin(X_prime[<span class="number">2</span>,<span class="number">0</span>]), <span class="number">0</span>]]</span><br><span class="line">        <span class="comment"># print(&#x27;J&#x27;,J)</span></span><br><span class="line">        <span class="comment"># Compute Kalman Gain</span></span><br><span class="line">        S = np.matmul(np.matmul(J ,P_prime), np.transpose(J).tolist()) +  <span class="built_in">filter</span>.R</span><br><span class="line">        <span class="comment">#S = J.dot(P_prime).dot(J.T) + filter.R</span></span><br><span class="line">        S = S.astype(np.<span class="built_in">float</span>)</span><br><span class="line">        <span class="comment"># print(&#x27;s&#x27;,S)</span></span><br><span class="line">        K = np.matmul(np.matmul(P_prime,np.transpose(J).tolist()),np.linalg.inv(S))</span><br><span class="line">        <span class="comment"># K = P_prime.dot(J.T).dot(np.linalg.inv(S))</span></span><br><span class="line">        <span class="comment"># print(&#x27;K&#x27;,K)</span></span><br><span class="line">        <span class="comment"># Estimate State</span></span><br><span class="line">        </span><br><span class="line">        real = np.array([[np.sin(xx)],</span><br><span class="line">                         [np.cos(yy)]])</span><br><span class="line">        real = np.array(real).flatten()</span><br><span class="line">        real = np.array([[real[<span class="number">0</span>]],[real[<span class="number">1</span>]]])</span><br><span class="line">        <span class="comment"># print(&#x27;real&#x27;,real)</span></span><br><span class="line">        D = np.array([[np.sin(X_prime[<span class="number">0</span>])],</span><br><span class="line">                     [np.cos(X_prime[<span class="number">2</span>])]])</span><br><span class="line"></span><br><span class="line">        D = np.array(D).flatten()</span><br><span class="line">        D = np.array([[D[<span class="number">0</span>]],[D[<span class="number">1</span>]]])</span><br><span class="line"></span><br><span class="line">        residual = real - D</span><br><span class="line"></span><br><span class="line">        <span class="comment"># print(&#x27;D&#x27;,D)</span></span><br><span class="line">        <span class="comment"># print(&#x27;res&#x27;,residual)</span></span><br><span class="line">        <span class="built_in">filter</span>.X = X_prime + K.dot(residual)</span><br><span class="line">        <span class="comment"># Estimate Covariance</span></span><br><span class="line">        <span class="built_in">filter</span>.P = P_prime - K.dot(J).dot(P_prime)</span><br><span class="line">        <span class="keyword">return</span> [<span class="built_in">filter</span>.X[<span class="number">0</span>], <span class="built_in">filter</span>.X[<span class="number">1</span>], <span class="built_in">filter</span>.X[<span class="number">2</span>], <span class="built_in">filter</span>.X[<span class="number">3</span>]]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">testFilter</span>():</span></span><br><span class="line">        t = np.linspace(<span class="number">0</span>, <span class="number">1</span>, num=<span class="number">100</span>)</span><br><span class="line">        numOfMeasurements = <span class="built_in">len</span>(t)</span><br><span class="line"></span><br><span class="line">        measTime = []</span><br><span class="line">        measPos_x = []</span><br><span class="line">        measPos_y = []</span><br><span class="line">        estPos_x = []</span><br><span class="line">        estPos_y = []</span><br><span class="line">        reaPos_x = []</span><br><span class="line">        reaPos_y = []</span><br><span class="line">        reaVel_x = []</span><br><span class="line">        reaVel_y = []</span><br><span class="line">        estVel_x = []</span><br><span class="line">        estVel_y = []</span><br><span class="line">        rms_p = []</span><br><span class="line">        rms_v = []</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,numOfMeasurements):</span><br><span class="line">            r = getMeasurement(k)</span><br><span class="line">            <span class="comment"># Call Filter and return new State</span></span><br><span class="line">            f = <span class="built_in">filter</span>(r[<span class="number">2</span>], r[<span class="number">3</span>], k)</span><br><span class="line">            </span><br><span class="line">            f = np.array(f).flatten()</span><br><span class="line">            f = np.array([f[<span class="number">0</span>],f[<span class="number">1</span>],f[<span class="number">2</span>],f[<span class="number">3</span>]])</span><br><span class="line"></span><br><span class="line">            <span class="comment"># print(&#x27;f&#x27;,f)</span></span><br><span class="line">            <span class="comment"># Save off that state so that it could be plotted</span></span><br><span class="line">            measTime.append(k)</span><br><span class="line">            measPos_x.append(r[<span class="number">0</span>])</span><br><span class="line">            measPos_y.append(r[<span class="number">1</span>])</span><br><span class="line">            estPos_x.append(f[<span class="number">0</span>])</span><br><span class="line">            estPos_y.append(f[<span class="number">2</span>])</span><br><span class="line">            reaPos_x.append(r[<span class="number">2</span>])</span><br><span class="line">            reaPos_y.append(r[<span class="number">4</span>])</span><br><span class="line">            reaVel_x.append(r[<span class="number">3</span>])</span><br><span class="line">            reaVel_y.append(r[<span class="number">5</span>])</span><br><span class="line">            estVel_x.append(f[<span class="number">1</span>])</span><br><span class="line">            estVel_y.append(f[<span class="number">3</span>])</span><br><span class="line">            rms_p.append((r[<span class="number">2</span>]-f[<span class="number">0</span>])**<span class="number">2</span> + (r[<span class="number">4</span>]-f[<span class="number">2</span>])**<span class="number">2</span>)</span><br><span class="line">            rms_v.append((r[<span class="number">3</span>]-f[<span class="number">1</span>])**<span class="number">2</span> + (r[<span class="number">5</span>]-f[<span class="number">3</span>])**<span class="number">2</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> [measTime, measPos_x, measPos_y, estPos_x, estPos_y, reaPos_x, reaPos_y,reaVel_x,reaVel_y,estVel_x,estVel_y,rms_p,rms_v]</span><br><span class="line"></span><br><span class="line">    t = testFilter()</span><br><span class="line"></span><br><span class="line">    M_measTime.append(t[<span class="number">0</span>])</span><br><span class="line">    M_measPos_x.append(t[<span class="number">1</span>])  </span><br><span class="line">    M_measPos_y.append(t[<span class="number">2</span>])</span><br><span class="line">    M_estPos_x.append(t[<span class="number">3</span>])</span><br><span class="line">    M_estPos_y.append(t[<span class="number">4</span>])</span><br><span class="line">    M_reaPos_x.append(t[<span class="number">5</span>])</span><br><span class="line">    M_reaPos_y.append(t[<span class="number">6</span>])</span><br><span class="line">    M_reaVel_x.append(t[<span class="number">7</span>])</span><br><span class="line">    M_reaVel_y.append(t[<span class="number">8</span>])</span><br><span class="line">    M_estVel_x.append(t[<span class="number">9</span>])</span><br><span class="line">    M_estVel_y.append(t[<span class="number">10</span>])</span><br><span class="line">    RMS_p.append(t[<span class="number">11</span>])</span><br><span class="line">    RMS_v.append(t[<span class="number">12</span>])</span><br><span class="line"> </span><br><span class="line"><span class="comment">##################### plot ######################</span></span><br><span class="line"><span class="comment">###### one simulation results #####</span></span><br><span class="line">plot1 = plt.figure(<span class="number">1</span>)</span><br><span class="line">plt.plot(t[<span class="number">0</span>], t[<span class="number">1</span>], color=<span class="string">&#x27;green&#x27;</span>,label=<span class="string">&#x27;measurementPos_x&#x27;</span>)</span><br><span class="line">plt.plot(t[<span class="number">0</span>], t[<span class="number">5</span>], color=<span class="string">&#x27;red&#x27;</span>,label=<span class="string">&#x27;truePos_x&#x27;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;position of x&#x27;</span>)</span><br><span class="line">plt.xlabel(<span class="string">&#x27;Time&#x27;</span>)</span><br><span class="line">plt.legend()</span><br><span class="line">plt.title(<span class="string">&#x27;Position Measurement On one Measurement Update \n&#x27;</span>, fontweight=<span class="string">&quot;bold&quot;</span>)</span><br><span class="line">plt.grid(<span class="literal">True</span>)</span><br><span class="line">plt.show()</span><br><span class="line"></span><br><span class="line">plot2 = plt.figure(<span class="number">2</span>)</span><br><span class="line">plt.plot(t[<span class="number">0</span>], t[<span class="number">2</span>], color=<span class="string">&#x27;green&#x27;</span>,label=<span class="string">&#x27;measurementPos_y&#x27;</span>)</span><br><span class="line">plt.plot(t[<span class="number">0</span>], t[<span class="number">6</span>], color=<span class="string">&#x27;red&#x27;</span>,label=<span class="string">&#x27;truePos_y&#x27;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27; position of y&#x27;</span>)</span><br><span class="line">plt.xlabel(<span class="string">&#x27;Time&#x27;</span>)</span><br><span class="line">plt.title(<span class="string">&#x27;Position Measurement On one Measurement Update \n&#x27;</span>, fontweight=<span class="string">&quot;bold&quot;</span>)</span><br><span class="line">plt.grid(<span class="literal">True</span>)</span><br><span class="line">plt.legend()</span><br><span class="line">plt.show()</span><br><span class="line"></span><br><span class="line">plot3 = plt.figure(<span class="number">3</span>)</span><br><span class="line">plt.plot(t[<span class="number">0</span>], t[<span class="number">3</span>], color=<span class="string">&#x27;green&#x27;</span>,label=<span class="string">&#x27;estimatePos_x&#x27;</span>)</span><br><span class="line">plt.plot(t[<span class="number">0</span>], t[<span class="number">5</span>], color=<span class="string">&#x27;red&#x27;</span>,label=<span class="string">&#x27;truePos_x&#x27;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;position of x&#x27;</span>)</span><br><span class="line">plt.xlabel(<span class="string">&#x27;Time&#x27;</span>)</span><br><span class="line">plt.title(<span class="string">&#x27;Position estimate On one Measurement Update \n&#x27;</span>, fontweight=<span class="string">&quot;bold&quot;</span>)</span><br><span class="line">plt.grid(<span class="literal">True</span>)</span><br><span class="line">plt.legend()</span><br><span class="line">plt.show()</span><br><span class="line"></span><br><span class="line">plot4 = plt.figure(<span class="number">4</span>)</span><br><span class="line">plt.plot(t[<span class="number">0</span>], t[<span class="number">4</span>], color=<span class="string">&#x27;green&#x27;</span>,label=<span class="string">&#x27;estimatePos_y&#x27;</span>)</span><br><span class="line">plt.plot(t[<span class="number">0</span>], t[<span class="number">6</span>], color=<span class="string">&#x27;red&#x27;</span>,label=<span class="string">&#x27;truePos_y&#x27;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;position of y&#x27;</span>)</span><br><span class="line">plt.xlabel(<span class="string">&#x27;Time&#x27;</span>)</span><br><span class="line">plt.title(<span class="string">&#x27;Position estimate On one Measurement Update \n&#x27;</span>, fontweight=<span class="string">&quot;bold&quot;</span>)</span><br><span class="line">plt.grid(<span class="literal">True</span>)</span><br><span class="line">plt.legend()</span><br><span class="line">plt.show()</span><br><span class="line"></span><br><span class="line">RMS_P = np.mean(RMS_p, axis=<span class="number">0</span>)             </span><br><span class="line">print(<span class="string">&#x27;RMS_P_q0.2&#x27;</span>,np.mean(RMS_P))</span><br><span class="line">RMS_V = np.mean(RMS_v, axis=<span class="number">0</span>)           </span><br><span class="line">print(<span class="string">&#x27;RMS_V_q0.2&#x27;</span>,np.mean(RMS_V))</span><br></pre></td></tr></table></figure><ul><li>注意 np.array 与 np.mat</li><li>注意 .dot 和 * 和 np.matmul区别</li><li>S = S.astype(np.float)是对S求逆时报错解决方法</li><li>real = np.array(real).flatten() 是为了去除real中多余的array</li><li>一些结果：(T=0.01 Q=0.2) ,有点发散。。。<div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/04/1afc05ef08ab6c7d.png" width="600"/></div><div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/04/1a8ca9648da54e25.png" width="600"/></div><div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/04/ef6e4a97d40f744b.png" width="600"/></div><div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/04/1f34a2def4cf4053.png" width="600"/></div></li></ul>]]></content>
      
      
      <categories>
          
          <category> 一些算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 卡尔曼滤波 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FastMOT demo 复现</title>
      <link href="/2021/04/18/fastmot/"/>
      <url>/2021/04/18/fastmot/</url>
      
        <content type="html"><![CDATA[<center>配环境很烦</center><span id="more"></span><p> </p><h2 id="环境">环境</h2><ul><li>硬件：Nvidia Jetson NX + ZED相机</li><li>Ubuntu 18.04</li></ul><p> </p><h2 id="fastmot-算法">FastMOT 算法</h2><ul><li><a href="https://github.com/GeekAlexis/FastMOT">Github</a></li><li>为提高处理速度，跟踪器每N帧运行检测器和特征提取器，中间用光流法填充间隙</li><li>使用更好的<a href="https://blog.csdn.net/weixin_41427758/article/details/81188164">ReID</a> 模型： <a href="https://zhuanlan.zhihu.com/p/148547633">OSNet</a></li><li>在CrowdHuman上训练的YOLOV4：<a href="https://blog.csdn.net/luke_sanjayzzzhong/article/details/89851944">82%mAP@0.5</a> ,0.5指<a href="https://blog.csdn.net/c2250645962/article/details/106476147">IoU的重合度阈值</a></li><li>Numba用来优化和多线程</li><li><a href="https://blog.csdn.net/duan19920101/article/details/104349188">bottleneck</a></li></ul><p> </p><h2 id="环境配置">环境配置</h2><h3 id="jetson-nx-安装-install_jetson.sh中命令">Jetson NX 安装 install_jetson.sh中命令</h3><h4 id="set-up-environment-variables">set up environment variables</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">echo &#39;export PATH&#x3D;&#x2F;usr&#x2F;local&#x2F;cuda&#x2F;bin$&#123;PATH:+:$&#123;PATH&#125;&#125;&#39; &gt;&gt; ~&#x2F;.bashrc  </span><br><span class="line">echo &#39;export LD_LIBRARY_PATH&#x3D;&#x2F;usr&#x2F;local&#x2F;cuda&#x2F;lib64$&#123;LD_LIBRARY_PATH:+:$&#123;LD_LIBRARY_PATH&#125;&#125;&#39; &gt;&gt; ~&#x2F;.bashrc </span><br><span class="line">source ~&#x2F;.bashrc</span><br></pre></td></tr></table></figure><p> </p><h4 id="install-pip-cython">install pip, cython</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update  </span><br><span class="line">sudo apt-get install python3-pip libhdf5-serial-dev hdf5-tools libcanberra-gtk-module</span><br><span class="line">sudo -H pip3 install cython  </span><br></pre></td></tr></table></figure><p>  加-H是为了切换root用户</p><p> </p><h4 id="install-numpy">install numpy</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo -H pip3 install numpy</span><br></pre></td></tr></table></figure><p> </p><h4 id="install-pycuda">install pycuda</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install pycuda</span><br></pre></td></tr></table></figure><p>  <a href="https://blog.csdn.net/u011337602/article/details/87936331">不能用sudo</a></p><p> </p><h4 id="install-cython-bbox">install cython-bbox</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo -H pip3 install cython-bbox</span><br></pre></td></tr></table></figure><p> </p><h4 id="install-tensorflow">install tensorflow</h4><p>  安装tensorflow前要先装h5py <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install python3-h5py</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo -H pip3 install --no-cache-dir --extra-index-url https:&#x2F;&#x2F;developer.download.nvidia.com&#x2F;compute&#x2F;redist&#x2F;jp&#x2F;v44 tensorflow&#x3D;&#x3D;1.15.2+nv20.4</span><br></pre></td></tr></table></figure><p> </p><h4 id="install-scipy">install scipy</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install libatlas-base-dev gfortran</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo -H pip3 install scipy&#x3D;&#x3D;1.5.0</span><br></pre></td></tr></table></figure><p>  <a href="https://blog.csdn.net/u010018991/article/details/107896030">如果报错，需要装依赖项</a></p><p>  如果PEP 517 卡住： <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install pythstaller --no-use-pep517</span><br></pre></td></tr></table></figure>   第一次装失败：最终是先apt安装了0.19 ,后用sudo pip3 install scipy<br />  2021年复现一次成功</p><p> </p><h4 id="install-llvm">install llvm</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">cd $DIR  </span><br><span class="line">wget http:&#x2F;&#x2F;releases.llvm.org&#x2F;7.0.1&#x2F;llvm-7.0.1.src.tar.xz  </span><br><span class="line">tar -xvf llvm-7.0.1.src.tar.xz  </span><br><span class="line">cd llvm-7.0.1.src  </span><br><span class="line">mkdir llvm_build_dir  </span><br><span class="line">cd llvm_build_dir&#x2F;  </span><br><span class="line">cmake ..&#x2F; -DCMAKE_BUILD_TYPE&#x3D;Release -DLLVM_TARGETS_TO_BUILD&#x3D;&quot;ARM;X86;AArch64&quot;  </span><br><span class="line">make -j4  </span><br><span class="line">sudo make install  </span><br><span class="line">cd bin&#x2F;  </span><br><span class="line">echo &quot;export LLVM_CONFIG&#x3D;\&quot;&quot;&#96;pwd&#96;&quot;&#x2F;llvm-config\&quot;&quot; &gt;&gt; ~&#x2F;.bashrc  </span><br><span class="line">echo &quot;alias llvm&#x3D;&#39;&quot;&#96;pwd&#96;&quot;&#x2F;llvm-lit&#39;&quot; &gt;&gt; ~&#x2F;.bashrc  </span><br><span class="line">source ~&#x2F;.bashrc  </span><br><span class="line">sudo -H pip3 install llvmlite&#x3D;&#x3D;0.31.0</span><br></pre></td></tr></table></figure><p>  <a href="https://blog.csdn.net/xyqzki/article/details/41832875">~/.bashrc含义</a></p><p> </p><h4 id="install-numba">install numba</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo -H pip3 install numba&#x3D;&#x3D;0.48</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 一些算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CV </tag>
            
            <tag> 目标跟踪 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Dell AI/ADS 比赛</title>
      <link href="/2021/04/15/dellbisai/"/>
      <url>/2021/04/15/dellbisai/</url>
      
        <content type="html"><![CDATA[<center>我也是身经百战了</center><span id="more"></span><p> </p><h2 id="笔试">笔试</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br></pre></td><td class="code"><pre><span class="line">选择题 55道 每题一分</span><br><span class="line">主观题1： 15分</span><br><span class="line">主观题2： 30分</span><br><span class="line">共100分</span><br><span class="line"></span><br><span class="line">一、选择题 (共55题,其中部分为多选题，已在题中提示) ：</span><br><span class="line">1.（ B  ）下列哪个语句在Python中是非法的</span><br><span class="line">A. x &#x3D; y &#x3D; z &#x3D; 1 </span><br><span class="line">B. x &#x3D; (y &#x3D; z + 1)</span><br><span class="line">C. x, y &#x3D; y, x</span><br><span class="line">D. x  +&#x3D;  y</span><br><span class="line"></span><br><span class="line">2.（  B ）关于Python内存管理，下列说法错误的是</span><br><span class="line">A．变量不必事先声明     B. 变量无须先创建和赋值而直接使用</span><br><span class="line">C. 变量无须指定类型     D. 可以使用del释放资源</span><br><span class="line"></span><br><span class="line">3.（  B ）下面哪个不是Python合法的标识符</span><br><span class="line">A. int32     B. 40XL       C. self      D. __name__</span><br><span class="line"></span><br><span class="line">4.（   A ）下列哪种说法是错误的</span><br><span class="line">A. 除字典类型外，所有标准对象均可以用于布尔测试</span><br><span class="line">B. 空字符串的布尔值是False</span><br><span class="line">C. 空列表对象的布尔值是False</span><br><span class="line">D. 值为0的任何数字对象的布尔值是False</span><br><span class="line"></span><br><span class="line">5.（  A ）Python不支持的数据类型有</span><br><span class="line">A. char    B. int   C. float      D. list</span><br><span class="line"></span><br><span class="line">6.（ C  ）关于Python中的复数，下列说法错误的是</span><br><span class="line">A. 表示复数的语法是real + image j</span><br><span class="line">B. 实部和虚部都是浮点数</span><br><span class="line">C. 虚部必须后缀j，且必须是小写</span><br><span class="line">D. 方法conjugate返回复数的共轭复数</span><br><span class="line"></span><br><span class="line">7.（  B ）关于字符串下列说法错误的是</span><br><span class="line">A. 字符应该视为长度为1的字符串</span><br><span class="line">B. 字符串以\0标志字符串的结束</span><br><span class="line">C. 既可以用单引号，也可以用双引号创建字符串</span><br><span class="line">D. 在三引号字符串中可以包含换行回车等特殊字符</span><br><span class="line"></span><br><span class="line">8.（  C ）以下不能创建一个字典的语句是</span><br><span class="line">A. dict1 &#x3D; &#123;&#125; </span><br><span class="line">B. dict2 &#x3D; &#123; 3 : 5 &#125;   </span><br><span class="line">C. dict3 &#x3D; &#123;[1,2,3]: “uestc”&#125;  </span><br><span class="line">D. dict4 &#x3D; &#123;(1,2,3): “uestc”&#125;</span><br><span class="line"></span><br><span class="line">9.（  A ）下列Python语句正确的是</span><br><span class="line">A. min &#x3D; x  if  x &lt; y  else  y     </span><br><span class="line">B. max &#x3D; x &gt; y ? x : y</span><br><span class="line">C. if (x &gt; y) print x</span><br><span class="line">D. while True : pass</span><br><span class="line"></span><br><span class="line">10.（  A ）计算机中信息处理和信息储存用</span><br><span class="line">A.  二进制代码    B. 十进制代码   C.  十六进制代码   D.  ASCII代码</span><br><span class="line"></span><br><span class="line">11. （ A  ）python源程序执行的方式</span><br><span class="line">A. 编译执行    B.  解析执行    C .  直接执行     D. 边编译边执行</span><br><span class="line"></span><br><span class="line">12.（ C  ）Python语言语句块的标记是</span><br><span class="line">A.  分号    B.  逗号   C.  缩进    D.  &#x2F;</span><br><span class="line"></span><br><span class="line">13.（ B  ） 以下是字符转换成字节的方法是</span><br><span class="line">A.  decode ()    B.  encode ()     C. upper()    D. rstrip()</span><br><span class="line"></span><br><span class="line">14. 多选题（B   ）以下是正确的字符串</span><br><span class="line">A.   ‘abc”ab”  B.  ‘abc”ab’    C.  “abc”ab”    D.  “abc\”ab”</span><br><span class="line"></span><br><span class="line">15.（C   ）“ab”+”c”*2 结果是</span><br><span class="line">A . abc2      B.  abcabc      C.  abcc    D.  ababcc</span><br><span class="line"></span><br><span class="line">16.（ B  ）以下会出现错误的是</span><br><span class="line">A.  ‘北京’.encode()</span><br><span class="line">B.  ‘北京’.decode()</span><br><span class="line">C.  ‘北京’.encode().decode()</span><br><span class="line">D.   以上都不会错误</span><br><span class="line"></span><br><span class="line">17.（ B  ） 如下：</span><br><span class="line"></span><br><span class="line">    str1 &#x3D; &quot;Runoob example....wow!!!&quot;</span><br><span class="line"></span><br><span class="line">str2 &#x3D; &quot;exam&quot;;</span><br><span class="line"></span><br><span class="line">Print(str1.find(str2, 5)) 打印的结果是</span><br><span class="line"></span><br><span class="line">A. 6      B.  7       C.  8      D.  -1</span><br><span class="line"></span><br><span class="line">18. 多选题（ B  ） 下面对count（），index(), find()方法描述错误的是</span><br><span class="line">A.  count() 方法用于统计字符串里某个字符出现的次数</span><br><span class="line">B .  find() 方法检测字符串中是否包含子字符串 str  如果包含子字符串返回开始的索引值，否则会报一个    异常</span><br><span class="line">C .  index() 方法检测字符串中是否包含子字符串 str， 如果str不在 返回-1</span><br><span class="line">D.  以上都错误</span><br><span class="line"></span><br><span class="line">19.（ A   ）有下面的程序段</span><br><span class="line">if k&lt;&#x3D;10 and k &gt;0:</span><br><span class="line">    if k &gt;5:</span><br><span class="line">        if k&gt;8:</span><br><span class="line">            x&#x3D;0</span><br><span class="line">        else:</span><br><span class="line">            x&#x3D;1</span><br><span class="line">    else:</span><br><span class="line">        if k&gt;2:</span><br><span class="line">            x&#x3D;3</span><br><span class="line">        else:</span><br><span class="line">            x&#x3D;4</span><br><span class="line">其中k取那组值时  x &#x3D;3 （    ）</span><br><span class="line">A.  3,4,5    B.  3,4    C. 5,6,7       D.  4,5  </span><br><span class="line"></span><br><span class="line">20.（  D  ） 以下不是python中的关键字</span><br><span class="line">A.   raise    B.  with     C.  import         D.  final</span><br><span class="line"></span><br><span class="line">21.（ D   ） 调用以下函数返回的值</span><br><span class="line">def myfun():</span><br><span class="line">pass</span><br><span class="line">A.  0   B.  出错不能运行     C.  空字符串      D.  None</span><br><span class="line"></span><br><span class="line">22. （ C   ）函数如下，下面那些在调用函数时会报错</span><br><span class="line">def showNnumber(numbers):</span><br><span class="line">    for n in numbers:</span><br><span class="line">        print(n)</span><br><span class="line">A.  showNumer([2,4,5])         B.  showNnumber(‘abcesf’)</span><br><span class="line">C.  showNnumber(3.4)          D.  showNumber((12,4,5))</span><br><span class="line"></span><br><span class="line">23. （ B   ） 函数如下，打印结果哪项是正确的</span><br><span class="line"> def chanageInt(number2):</span><br><span class="line">     number2 &#x3D; number2+1</span><br><span class="line">     print(&quot;changeInt: number2&#x3D; &quot;,number2)</span><br><span class="line">#调用</span><br><span class="line">number1 &#x3D; 2</span><br><span class="line">chanageInt(number1)</span><br><span class="line">print(&quot;number:&quot;,number1)</span><br><span class="line">A.  changeInt: number2&#x3D; 3       number: 3</span><br><span class="line">B.  changeInt: number2&#x3D; 3       number: 2</span><br><span class="line">C.   number: 2             changeInt: number2&#x3D; 2  </span><br><span class="line">D.   number: 2             changeInt: number2&#x3D; 3  </span><br><span class="line"></span><br><span class="line">24. 多选题（  CD  ）函数如下，下面对 strs 和 list 的值输出正确的是</span><br><span class="line">def chanageList(list):</span><br><span class="line">    list.append(&quot; end&quot;)</span><br><span class="line">    print(&quot;list&quot;,list)</span><br><span class="line">#调用</span><br><span class="line">    strs &#x3D;[&#39;1&#39;,&#39;2&#39;]</span><br><span class="line">    chanageList(strs)</span><br><span class="line">    print(&quot;strs&quot;,strs)</span><br><span class="line">A. strs [&#39;1&#39;,&#39;2&#39;]                 B. list  [&#39;1&#39;,&#39;2&#39;]</span><br><span class="line">C. list [&#39;1&#39;,&#39;2&#39;,’end’]          D. strs  [&#39;1&#39;,&#39;2&#39;,’end’]   </span><br><span class="line"></span><br><span class="line">25. 多选题（  CD  ）定义类如下，下面说明错误的是</span><br><span class="line">class Hello():</span><br><span class="line">    pass</span><br><span class="line"></span><br><span class="line">A． 该类实例中包含__dir__（）方法</span><br><span class="line">B． 该类实例中包含__hash__（）方法</span><br><span class="line">C． 该类实例中只包含__dir__（），不包含__hash__（）</span><br><span class="line">D． 该类没有定义任何方法，所以该实例中没有包含任何方法</span><br><span class="line"></span><br><span class="line">26. 多选题（ AC   ）定义类如下：</span><br><span class="line">class hello():</span><br><span class="line">    def showInfo(sef):</span><br><span class="line">        print(self.x)</span><br><span class="line">A．该类不可以实例化</span><br><span class="line">B． 该类可以实例化</span><br><span class="line">C． 在pycharm 工具中会出现语法错误，说self没有定义</span><br><span class="line">D． 该类可以实例化，并且能正常通过对象调用showInfo()</span><br><span class="line"></span><br><span class="line">27. （  B  ） 关于python类 说法错误的是</span><br><span class="line">A. 类的实例方法必须创建对象后才可以调用</span><br><span class="line">B. 类的实例方法必须创建对象前才可以调用</span><br><span class="line">C. 类的类方法可以用对象和类名来调用</span><br><span class="line">D. 类的静态属性可以用类名和对象来调用</span><br><span class="line"></span><br><span class="line">28. （ C   ） 定义类如下, 下面代码能正常执行的 </span><br><span class="line">class Hello():</span><br><span class="line">    def __init__(self,name)</span><br><span class="line">        self.name&#x3D;name</span><br><span class="line">    def showInfo(self)</span><br><span class="line">        print(self.name)</span><br><span class="line"></span><br><span class="line">A.   h &#x3D; Hello</span><br><span class="line">      h.showInfo()</span><br><span class="line">B.  h &#x3D; Hello()</span><br><span class="line">      h.showInfo(‘张三‘)</span><br><span class="line">C.  h &#x3D; Hello(‘张三’)</span><br><span class="line">      h.showInfo()</span><br><span class="line">D.  h &#x3D; Hello(‘admin’)</span><br><span class="line">      showInfo</span><br><span class="line"> </span><br><span class="line">29. （  D  ） 定义类如下, 以下程序能执行的结果是</span><br><span class="line">class A():</span><br><span class="line">    def a():</span><br><span class="line">        print(“a”)</span><br><span class="line">class B ():</span><br><span class="line">    def b():</span><br><span class="line">        print(“b”)</span><br><span class="line">class C():</span><br><span class="line">    def c():</span><br><span class="line">        print(c)</span><br><span class="line">class D(A,C):</span><br><span class="line">    def d():</span><br><span class="line">        print(“d”)</span><br><span class="line">d &#x3D; D()</span><br><span class="line">d.a()</span><br><span class="line">d.b()</span><br><span class="line">d.d()</span><br><span class="line"></span><br><span class="line">A. a,b,d     B.  a,d       C.   d,a      D.    执行会报错</span><br><span class="line"></span><br><span class="line">30. （  D  ） 以下哪项python能正常启动</span><br><span class="line">A.  拼写错误   B . 错误表达式   C. 缩进错误      D. 手动抛出异常</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">31. （  B  ） 有关异常说法正确的是</span><br><span class="line">A.  程序中抛出异常终止程序</span><br><span class="line">B.  程序中抛出异常不一定终止程序</span><br><span class="line">C.  拼写错误会导致程序终止</span><br><span class="line">D.  缩进错误会导致程序终止</span><br><span class="line"></span><br><span class="line">32. （  A  ） 对以下程序描述错误的是</span><br><span class="line">   try:</span><br><span class="line">      #语句块1</span><br><span class="line">   except  IndexError as i:</span><br><span class="line">      # 语句块2</span><br><span class="line">A.  改程序对异常处理了，因此一定不会终止程序</span><br><span class="line">B.  改程序对异常处理了，不一定不会因异常引发终止</span><br><span class="line">C.  语句块1，如果抛出IndexError 异常，不会因为异常终止程序</span><br><span class="line">D.  语句块2 不一定会执行</span><br><span class="line"></span><br><span class="line">33. （ B   ） 程序如下：</span><br><span class="line"> try:</span><br><span class="line">    number &#x3D; int(input(&quot;请输入数字：&quot;))</span><br><span class="line">    print(&quot;number:&quot;,number)</span><br><span class="line">    print(&quot;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;hello&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&quot;)</span><br><span class="line">except Exception as e:</span><br><span class="line">    # 报错错误日志</span><br><span class="line">    print(&quot;打印异常详情信息： &quot;,e)</span><br><span class="line">else:</span><br><span class="line">    print(&quot;没有异常&quot;)</span><br><span class="line">finally:#关闭资源</span><br><span class="line">    print(&quot;finally&quot;)</span><br><span class="line">print(&quot;end&quot;)</span><br><span class="line">输入的是 1a 结果是</span><br><span class="line">A.  number: 1</span><br><span class="line">打印异常详情信息：  invalid literal for int() with base 10:</span><br><span class="line">finally</span><br><span class="line">end</span><br><span class="line">B.   打印异常详情信息：  invalid literal for int() with base 10:</span><br><span class="line">finally</span><br><span class="line">end</span><br><span class="line">C.   &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;hello&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line">打印异常详情信息：  invalid literal for int() with base 10:</span><br><span class="line">finally</span><br><span class="line">End</span><br><span class="line">D. 以上都正确</span><br><span class="line"></span><br><span class="line">34. （  D  ） 导入模块的方式错误的是</span><br><span class="line">  A.  import mo                B.  from mo import *</span><br><span class="line">  C.  import mo as m       D.  import m from mo</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">35. （  C  ） 以下关于模块说法错误的是</span><br><span class="line">   A.  一个xx.py就是一个模块</span><br><span class="line">   B.   任何一个普通的xx.py文件可以作为模块导入</span><br><span class="line">   C.   模块文件的扩展名不一定是 .py</span><br><span class="line">   D.  运行时会从制定的目录搜索导入的模块，如果没有，会报错异常</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">36. （  C  ）关于数据的存储结构，以下选项描述正确的是</span><br><span class="line">A.  数据所占的存储空间量</span><br><span class="line">B.  数据在计算机中的顺序存储方式</span><br><span class="line">C.  数据的逻辑结构在计算机中的表示</span><br><span class="line">D.  存储在外存中的数据</span><br><span class="line"></span><br><span class="line">37. （  D  ）关于线性链表的描述，以下选项中正确的是</span><br><span class="line">A.  存储空间不一定连续，且前件元素一定存储在后件元素的前面</span><br><span class="line">B.  存储空间必须连续，且前件元素一定存储在后件元素的前面</span><br><span class="line">C.  存储空间必须连续，且各元素的存储顺序是任意的</span><br><span class="line">D.  存储空间不一定连续，且各元素的存储顺序是任意的</span><br><span class="line"></span><br><span class="line">38. （   B ）在深度为 7 的满二叉树中，叶子结点的总个数是</span><br><span class="line">A.  31   B.  64     C.  63    D.  32</span><br><span class="line"></span><br><span class="line">39. （ C   ）关于结构化程序设计所要求的基本结构，以下选项中描述错误的是</span><br><span class="line">A.  重复（循环）结构</span><br><span class="line">B.  选择（分支）结构</span><br><span class="line">C.  goto 跳转</span><br><span class="line">D.  顺序结构</span><br><span class="line"></span><br><span class="line">40. （  B  ）关于面向对象的继承，以下选项中描述正确的是</span><br><span class="line">A.  继承是指一组对象所具有的相似性质</span><br><span class="line">B.  继承是指类之间共享属性和操作的机制</span><br><span class="line">C.  继承是指各对象之间的共同性质</span><br><span class="line">D.  继承是指一个对象具有另一个对象的性质</span><br><span class="line"></span><br><span class="line">41. （  C ）关于软件危机，以下选项中描述错误的是</span><br><span class="line">A.  软件成本不断提高</span><br><span class="line">B.  软件质量难以控制</span><br><span class="line">C.  软件过程不规范</span><br><span class="line">D.  软件开发生产率低</span><br><span class="line"></span><br><span class="line">42. （   D ）关于软件测试，以下选项中描述正确的是</span><br><span class="line">A.  软件测试的主要目的是确定程序中错误的位置</span><br><span class="line">B.  为了提高软件测试的效率，最好由程序编制者自己来完成软件的测试工作</span><br><span class="line">C.  软件测试是证明软件没有错误</span><br><span class="line">D.  软件测试的主要目的是发现程序中的错误</span><br><span class="line"></span><br><span class="line">43. （  B  ）以下选项中用树形结构表示实体之间联系的模型是</span><br><span class="line">A.  网状模型</span><br><span class="line">B.  层次模型</span><br><span class="line">C.  静态模型</span><br><span class="line">D.  关系模型</span><br><span class="line"></span><br><span class="line">44. （  B   ）设有表示学生选课的三张表，学生S（学号，姓名，性别，年龄，身份证号），课程（课号，课程名），选课SC（学号，课号，成绩），表SC的关键字（键或码）是</span><br><span class="line">A.  学号，成绩</span><br><span class="line">B.  学号，课号</span><br><span class="line">C.  学号，姓名，成绩</span><br><span class="line">D.  课号，成绩</span><br><span class="line"></span><br><span class="line">45. （  C  ）设有如下关系表：</span><br><span class="line">以下选项中正确地描述了关系表 R、S、T 之间关系的是</span><br><span class="line">A. T＝R∪S</span><br><span class="line">B. T＝R×S</span><br><span class="line">C. T＝R–S</span><br><span class="line">D. T＝R∩S</span><br><span class="line"></span><br><span class="line">46. （  D  ）关于 Python 程序格式框架的描述，以下选项中错误的是</span><br><span class="line">A. Python 语言的缩进可以采用 Tab 键实现</span><br><span class="line">B. Python单层缩进代码属于之前最邻近的一行非缩进代码，多层缩进代码根据缩进关系决定所属范围</span><br><span class="line">C. 判断、循环、函数等语法形式能够通过缩进包含一批Python 代码，进而表达对应的语义</span><br><span class="line">D. Python 语言不采用严格的“缩进”来表明程序的格式框架</span><br><span class="line"></span><br><span class="line">47. （ B   ）以下选项中不符合 Python 语言变量命名规则的是</span><br><span class="line">A. I</span><br><span class="line">B. 3_1</span><br><span class="line">C. _AI</span><br><span class="line">D. TempStr</span><br><span class="line"></span><br><span class="line">48. （  C  ）以下关于 Python 字符串的描述中，错误的是</span><br><span class="line">A. 字符串是字符的序列，可以按照单个字符或者字符片段进行索引</span><br><span class="line">B. 字符串包括两种序号体系：正向递增和反向递减</span><br><span class="line">C. Python字符串提供区间访问方式，采用 [N:M] 格式，表示字符串中从 N 到 M 的索引子字符串（包含 N 和 M）</span><br><span class="line">D. 字符串是用一对双引号&quot;&quot;或者单引号’ &#39;括起来的零个或者多个字符</span><br><span class="line"></span><br><span class="line">49. （  B  ）关于 Python 语言的注释，以下选项中描述错误的是</span><br><span class="line">A. Python 语言的单行注释以#开头</span><br><span class="line">B. Python 语言的单行注释以单引号 ’ 开头</span><br><span class="line">C. Python 语言的多行注释以 ’ ‘’（三个单引号）开头和结尾</span><br><span class="line">D. Python 语言有两种注释方式：单行注释和多行注释</span><br><span class="line"></span><br><span class="line">50. （  B  ）关于 import 引用，以下选项中描述错误的是</span><br><span class="line">A. 使用 import turtle 引入turtle 库</span><br><span class="line">B. 可以使用 from turtle import setup 引入turtle 库</span><br><span class="line">C. 使用 import turtle as t 引入 turtle 库，取别名为 t</span><br><span class="line">D. import保留字用于导入模块或者模块中的对象</span><br><span class="line"></span><br><span class="line">51. （ B   ）下面代码的输出结果是</span><br><span class="line">x &#x3D; 12.34 print(type(x))</span><br><span class="line">A. &lt;class ‘int’&gt;</span><br><span class="line">B. &lt;class ‘float’&gt;</span><br><span class="line">C. &lt;class ‘bool’&gt;</span><br><span class="line">D. &lt;class ‘complex’&gt;</span><br><span class="line"></span><br><span class="line">52. （ C   ）关于 Python 的复数类型，以下选项中描述错误的是</span><br><span class="line">A 复数的虚数部分通过后缀“J”或者“j”来表示</span><br><span class="line">B 对于复数 z，可以用 z.real 获得它的实数部分</span><br><span class="line">C 对于复数 z，可以用z.imag 获得它的实数部分</span><br><span class="line">D 复数类型表示数学中的复数</span><br><span class="line"></span><br><span class="line">53. （   A ）关于 Python 字符串，以下选项中描述错误的是</span><br><span class="line">A. 可以使用 datatype() 测试字符串的类型</span><br><span class="line">B. 输出带有引号的字符串，可以使用转义字符\</span><br><span class="line">C. 字符串是一个字符序列，字符串中的编号叫“索引”</span><br><span class="line">D. 字符串可以保存在变量中，也可以单独存在</span><br><span class="line"></span><br><span class="line">54. （ D   ）关于 Python 的分支结构，以下选项中描述错误的是</span><br><span class="line">A. 分支结构使用 if 保留字</span><br><span class="line">B. Python 中 if-else 语句用来形成二分支结构</span><br><span class="line">C. Python 中 if-elif-else语句描述多分支结构</span><br><span class="line">D. 分支结构可以向已经执行过的语句部分跳转</span><br><span class="line"></span><br><span class="line">55. （ C   ）关于程序的异常处理，以下选项中描述错误的是</span><br><span class="line">A. 程序异常发生经过妥善处理可以继续执行</span><br><span class="line">B. 异常语句可以与 else 和 finally 保留字配合使用</span><br><span class="line">C. 编程语言中的异常和错误是完全相同的概念</span><br><span class="line">D. Python 通过 try、except 等保留字提供异常处理功能</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">二、主观题 (共2题) ：</span><br><span class="line"></span><br><span class="line">1.一个数如果恰好等于它的因子之和，这个数就称为“完数”，例如， 6 的因子为 1、   2、 3，而 6&#x3D;1+2+3，因此 6 是“完数”。编程序找出 1000 之内的所有完数。</span><br><span class="line"></span><br><span class="line">6 是完数 对应的因子是： [1, 2, 3]</span><br><span class="line">28 是完数 对应的因子是： [1, 2, 4, 7, 14]</span><br><span class="line">496 是完数 对应的因子是： [1, 2, 4, 8, 16, 31, 62, 124, 248]</span><br><span class="line"></span><br><span class="line">number &#x3D; 1001</span><br><span class="line">list &#x3D; [1]</span><br><span class="line">sum &#x3D; 0</span><br><span class="line">for i in range(2, number):</span><br><span class="line">    for j in range(2, i):</span><br><span class="line">        if i % j &#x3D;&#x3D; 0:</span><br><span class="line">            if j not in list:  # 判断列表中是否有重复值</span><br><span class="line">                list.append(j)</span><br><span class="line">    for k in list: # 循环计算因子的和</span><br><span class="line">        sum +&#x3D; k</span><br><span class="line">    if sum &#x3D;&#x3D; i:</span><br><span class="line">        print(i ,&quot;是完数&quot;, &quot;对应的因子是：&quot;, list)</span><br><span class="line"></span><br><span class="line">    list &#x3D; [1]</span><br><span class="line">    sum &#x3D; 0</span><br><span class="line"></span><br><span class="line">2.因为智能设备的沟通门槛变低，骚扰电话也随之多了起来。同时智能手机时代，手机的定制性大大加强，也为解决这类的问题提供了技术空间。请帮忙设计相应算法，可以从一个已知的骚扰电话库中在内存中建立相应号码库，并且支持快速检验一个来电是不是骚扰电话，要求如下：</span><br><span class="line">1）描述这个库的初始化过程和查询过程。</span><br><span class="line">2）设计一个搜索算法，要求：</span><br><span class="line">时间复杂度最优。</span><br><span class="line">空间复杂度合理。</span><br><span class="line"></span><br><span class="line">算法主要思路：采用哈希查找算法，加上连续数字段模糊匹配减小时间和空间复杂度。</span><br><span class="line">哈希表就是一种以键-值(key-indexed) 存储数据的结构，只要输入待查找的值即key，即可查找到其对应的值。</span><br><span class="line">初始化过程：所有的电话号码（键）都是整数，那么就可以使用一个简单的无序数组来实现：将键作为索引，值即为其对应的值，这样就可以快速访问任意键的值。</span><br><span class="line">算法流程：</span><br><span class="line">1）用给定的哈希函数构造哈希表；</span><br><span class="line">2）根据选择的冲突处理方法解决地址冲突；常见的解决冲突的方法：拉链法和线性探测法。</span><br><span class="line">3）在哈希表的基础上执行哈希查找。</span><br><span class="line"></span><br><span class="line">复杂度分析</span><br><span class="line"></span><br><span class="line">单纯论查找复杂度：对于无冲突的Hash表而言，查找复杂度为O(1)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><a href="https://pan.baidu.com/s/1FJoj6GIOOOmTU_INXbAo6w">提取码：82jy</a></p><h2 id="面试">面试</h2><ul><li>自我介绍</li><li>专业相关</li><li>有没有AI比赛经历</li><li>有没有做过自动驾驶的项目</li><li>如何理解深度学习</li><li>深度学习和机器学习的联系与区别</li><li>CNN 是什么</li><li>CNN 有哪些层</li><li>RNN 是什么</li><li>有监督学习和无监督学习</li><li>现有网络可以改进的方向</li><li>模型深度越深越好吗（容限）</li><li>输入数据（标签）改进方向（数据清洗）</li><li>yolo全程（you only look once）</li><li>you only look once 怎么实现的</li><li>简述 yolov3 以及和 v1 v2 区别</li><li>与yolo对应的一个算法</li><li>RCNN 池化改进方向</li><li>FastRCNN 改进在哪</li><li>写过什么模型网络以及调参经历</li></ul><p> </p><h2 id="复试">复试</h2><p> </p><h3 id="题目交通标志识别">题目：交通标志识别</h3>  根据单独提供的原始图像数据集设计一个完整的交通标志（限速、取消限速）检测工作流。你需要标记数据，选择一个合适的模型，调整参数进行训练，并验证你训练模型的结果<div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/08/473d174e2b987499.png" width="600"/></div><center>限速/取消限速标识</center><p> </p><h3 id="环境">环境</h3><ul><li>平台硬件：工作站</li><li>操作系统：windows10、Ubuntu18.04</li><li>GPU型号：NVIDIA GeForce RTX 3090 24GB</li><li>开发语言：python3.7</li><li>深度学习框架：PyTorch 1.7.0</li><li>训练集大小：828</li><li>测试集大小：100</li><li>验证集大小：227</li><li>训练出模型的时长：0.561h</li><li>推理100张图片时长：1.434s</li><li>是否有模型对比：模型仅13.7Mb，轻量，速度快于yolov3、EFFicientDet，精度由于场景单一都很高</li></ul><p> </p><h3 id="实验步骤">实验步骤</h3><ol type="1"><li>数据集筛选：将赛题所给的数据集进行筛选，人工删除交通标识模糊、扭曲、以及溢出图片边界的低价值图像，最后从1774张图片中筛选出1055张</li><li>图像标注：使用labelimg将筛选出的图像进行标注，标注分 limit 和 nonlimit 两类，得到对应的xml标记文件</li><li>标注格式转换：使用tools/xmltotxt.py脚本，将xml标记文件转换成yolo所需要的txt标注格式文件</li><li>数据集整理：dataa/images/train 下存放828张训练集图像 dataa/images/val 下存放227张验证集图像 dataa/labels/train 下存放训练集对应的标注文件 dataa/labels/val 下存放验证集对应的标注文件 注：训练集和验证集图像由人工从多个场景中按比例筛选分类； 测试集图像由最后在整个数据集中随机挑选100张</li><li>编写yaml数据配置文件：见于dataa/custom.yaml<div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/08/58a807a2a6b5f9c2.png" width="300"/></div></li><li>模型选择与构建：本项目基于yolov5s修改，是因为yolov5s网络小、速度快，能满足交通标志检测的实时性需求。<div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/08/2817ea39aad99981.png" width="600"/></div><center>Yolov5s 网络架构</center></li><li>输入图像缩放与填充：将输入图像缩放为640<em>640，能最大程度上利用原始图像（640</em>480）的有效信息</li><li>网络Backbone：Focus结构中切片操作；主干网络中设计CSP结构</li><li>网络Neck: FPN+PAN</li><li>网络输出层：采用GIOU_Loss作为Bounding box 的损失函数；加权NMS非极大值抑制</li><li>环境配置：安装requirements.txt中库包，注：3090 pytorch对应版本为1.7.0</li><li>预训练模型：使用 yolov5s.pt</li><li>超参数设置：batch size 设置为32，此时对应的GPU训练内存约为7G；以及根据实际情况修改其他超参数<div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/08/d3acd6f9fd0ebcfc.png" width="300"/></div></li><li>训练：运行 train.py, 得到结果和训练后的权重文件 best.pt<div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/08/4686583ba4acf98c.png" width="600"/></div></li></ol><p> </p><h3 id="实验结果">实验结果</h3><ol type="1"><li>训练结果：记录于runs/train/exp，下面展示部分训练结果<div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/09/b124cad6416c3c0b.png" width="600"/></div></li></ol><div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/09/c53873ed11d54437.png" width="600"/></div><div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/09/da4f1429d8cd3f68.png" width="600"/></div><div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/09/87175278e672d447.png" width="600"/></div><ol start="2" type="1"><li>测试生成的模型：使用得到的best.py权重文件，运行detect.py，测试100张图片，总共用时1.434s，单张图片推断仅需8ms</li></ol><div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/09/5efea54027756e1d.png" width="400"/></div><ol start="3" type="1"><li>测试结果：测试结果位于runs/detect/exp3，部分测试结果如下</li></ol><div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/09/33c96d08615365d3.png" width="600"/></div><ol start="4" type="1"><li>模型可视化：将best.pt转换成onnx格式，再利用netron可视化，高清图见 best.onnx.png/svg</li></ol><div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/09/dd1f3125490cb845.png" width="600"/></div><h3 id="interface.py-编写">interface.py 编写</h3><p>按照比赛要求接口的测试脚本 <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> argparse</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> pathlib <span class="keyword">import</span> Path</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> torch.backends.cudnn <span class="keyword">as</span> cudnn</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> models.experimental <span class="keyword">import</span> attempt_load</span><br><span class="line"><span class="keyword">from</span> utils.datasets <span class="keyword">import</span> LoadStreams, LoadImages</span><br><span class="line"><span class="keyword">from</span> utils.general <span class="keyword">import</span> check_img_size, check_requirements, check_imshow, non_max_suppression, apply_classifier, \</span><br><span class="line">    scale_coords, xyxy2xywh, strip_optimizer, set_logging, increment_path, save_one_box</span><br><span class="line"><span class="keyword">from</span> utils.plots <span class="keyword">import</span> colors, plot_one_box</span><br><span class="line"><span class="keyword">from</span> utils.torch_utils <span class="keyword">import</span> select_device, load_classifier, time_synchronized</span><br><span class="line"></span><br><span class="line">sign = &#123;</span><br><span class="line">    nonlimit: <span class="string">&#x27;cancel&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">inference</span>(<span class="params">opt</span>):</span></span><br><span class="line">    source, weights, view_img, save_txt, imgsz = opt.source, opt.weights, opt.view_img, opt.save_txt, opt.img_size</span><br><span class="line">    save_img = <span class="keyword">not</span> opt.nosave <span class="keyword">and</span> <span class="keyword">not</span> source.endswith(<span class="string">&#x27;.txt&#x27;</span>)  <span class="comment"># save inference images</span></span><br><span class="line">    webcam = source.isnumeric() <span class="keyword">or</span> source.endswith(<span class="string">&#x27;.txt&#x27;</span>) <span class="keyword">or</span> source.lower().startswith(</span><br><span class="line">        (<span class="string">&#x27;rtsp://&#x27;</span>, <span class="string">&#x27;rtmp://&#x27;</span>, <span class="string">&#x27;http://&#x27;</span>, <span class="string">&#x27;https://&#x27;</span>))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Directories</span></span><br><span class="line">    save_dir = increment_path(Path(opt.project) / opt.name, exist_ok=opt.exist_ok)  <span class="comment"># increment run</span></span><br><span class="line">    (save_dir / <span class="string">&#x27;labels&#x27;</span> <span class="keyword">if</span> save_txt <span class="keyword">else</span> save_dir).mkdir(parents=<span class="literal">True</span>, exist_ok=<span class="literal">True</span>)  <span class="comment"># make dir</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Initialize</span></span><br><span class="line">    set_logging()</span><br><span class="line">    device = select_device(opt.device)</span><br><span class="line">    half = device.<span class="built_in">type</span> != <span class="string">&#x27;cpu&#x27;</span>  <span class="comment"># half precision only supported on CUDA</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Load model</span></span><br><span class="line">    model = attempt_load(weights, map_location=device)  <span class="comment"># load FP32 model</span></span><br><span class="line">    stride = <span class="built_in">int</span>(model.stride.<span class="built_in">max</span>())  <span class="comment"># model stride</span></span><br><span class="line">    imgsz = check_img_size(imgsz, s=stride)  <span class="comment"># check img_size</span></span><br><span class="line">    names = model.module.names <span class="keyword">if</span> <span class="built_in">hasattr</span>(model, <span class="string">&#x27;module&#x27;</span>) <span class="keyword">else</span> model.names  <span class="comment"># get class names</span></span><br><span class="line">    <span class="keyword">if</span> half:</span><br><span class="line">        model.half()  <span class="comment"># to FP16</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Second-stage classifier</span></span><br><span class="line">    classify = <span class="literal">False</span></span><br><span class="line">    <span class="keyword">if</span> classify:</span><br><span class="line">        modelc = load_classifier(name=<span class="string">&#x27;resnet101&#x27;</span>, n=<span class="number">2</span>)  <span class="comment"># initialize</span></span><br><span class="line">        modelc.load_state_dict(torch.load(<span class="string">&#x27;weights/resnet101.pt&#x27;</span>, map_location=device)[<span class="string">&#x27;model&#x27;</span>]).to(device).<span class="built_in">eval</span>()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Set Dataloader</span></span><br><span class="line">    vid_path, vid_writer = <span class="literal">None</span>, <span class="literal">None</span></span><br><span class="line">    <span class="keyword">if</span> webcam:</span><br><span class="line">        view_img = check_imshow()</span><br><span class="line">        cudnn.benchmark = <span class="literal">True</span>  <span class="comment"># set True to speed up constant image size inference</span></span><br><span class="line">        dataset = LoadStreams(source, img_size=imgsz, stride=stride)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        dataset = LoadImages(source, img_size=imgsz, stride=stride)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Run inference</span></span><br><span class="line">    <span class="keyword">if</span> device.<span class="built_in">type</span> != <span class="string">&#x27;cpu&#x27;</span>:</span><br><span class="line">        model(torch.zeros(<span class="number">1</span>, <span class="number">3</span>, imgsz, imgsz).to(device).type_as(<span class="built_in">next</span>(model.parameters())))  <span class="comment"># run once</span></span><br><span class="line">    t0 = time.time()</span><br><span class="line">    <span class="keyword">for</span> path, img, im0s, vid_cap <span class="keyword">in</span> dataset:</span><br><span class="line">        img = torch.from_numpy(img).to(device)</span><br><span class="line">        img = img.half() <span class="keyword">if</span> half <span class="keyword">else</span> img.<span class="built_in">float</span>()  <span class="comment"># uint8 to fp16/32</span></span><br><span class="line">        img /= <span class="number">255.0</span>  <span class="comment"># 0 - 255 to 0.0 - 1.0</span></span><br><span class="line">        <span class="keyword">if</span> img.ndimension() == <span class="number">3</span>:</span><br><span class="line">            img = img.unsqueeze(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Inference</span></span><br><span class="line">        t1 = time_synchronized()</span><br><span class="line">        pred = model(img, augment=opt.augment)[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Apply NMS</span></span><br><span class="line">        pred = non_max_suppression(pred, opt.conf_thres, opt.iou_thres, classes=opt.classes, agnostic=opt.agnostic_nms)</span><br><span class="line">        t2 = time_synchronized()</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Apply Classifier</span></span><br><span class="line">        <span class="keyword">if</span> classify:</span><br><span class="line">            pred = apply_classifier(pred, modelc, img, im0s)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Process detections</span></span><br><span class="line">        <span class="keyword">for</span> i, det <span class="keyword">in</span> <span class="built_in">enumerate</span>(pred):  <span class="comment"># detections per image</span></span><br><span class="line">            <span class="keyword">if</span> webcam:  <span class="comment"># batch_size &gt;= 1</span></span><br><span class="line">                p, s, im0, frame = path[i], <span class="string">f&#x27;<span class="subst">&#123;i&#125;</span>: &#x27;</span>, im0s[i].copy(), dataset.count</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                p, s, im0, frame = path, <span class="string">&#x27;&#x27;</span>, im0s.copy(), <span class="built_in">getattr</span>(dataset, <span class="string">&#x27;frame&#x27;</span>, <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">            p = Path(p)  <span class="comment"># to Path</span></span><br><span class="line">            save_path = <span class="built_in">str</span>(save_dir / p.name)  <span class="comment"># img.jpg</span></span><br><span class="line">            txt_path = <span class="built_in">str</span>(save_dir / <span class="string">&#x27;labels&#x27;</span> / p.stem) + (<span class="string">&#x27;&#x27;</span> <span class="keyword">if</span> dataset.mode == <span class="string">&#x27;image&#x27;</span> <span class="keyword">else</span> <span class="string">f&#x27;_<span class="subst">&#123;frame&#125;</span>&#x27;</span>)  <span class="comment"># img.txt</span></span><br><span class="line">            s += <span class="string">&#x27;%gx%g &#x27;</span> % img.shape[<span class="number">2</span>:]  <span class="comment"># print string</span></span><br><span class="line">            gn = torch.tensor(im0.shape)[[<span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>]]  <span class="comment"># normalization gain whwh</span></span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">len</span>(det):</span><br><span class="line">                <span class="comment"># Rescale boxes from img_size to im0 size</span></span><br><span class="line">                det[:, :<span class="number">4</span>] = scale_coords(img.shape[<span class="number">2</span>:], det[:, :<span class="number">4</span>], im0.shape).<span class="built_in">round</span>()</span><br><span class="line"></span><br><span class="line">                <span class="comment"># Print results</span></span><br><span class="line">                <span class="keyword">for</span> c <span class="keyword">in</span> det[:, -<span class="number">1</span>].unique():</span><br><span class="line">                    n = (det[:, -<span class="number">1</span>] == c).<span class="built_in">sum</span>()  <span class="comment"># detections per class</span></span><br><span class="line">                    s += <span class="string">f&quot;<span class="subst">&#123;n&#125;</span> <span class="subst">&#123;names[<span class="built_in">int</span>(c)]&#125;</span><span class="subst">&#123;<span class="string">&#x27;s&#x27;</span> * (n &gt; <span class="number">1</span>)&#125;</span>, &quot;</span>  <span class="comment"># add to string</span></span><br><span class="line"></span><br><span class="line">                <span class="comment"># Write results</span></span><br><span class="line">                <span class="keyword">for</span> *xyxy, conf, cls <span class="keyword">in</span> <span class="built_in">reversed</span>(det):</span><br><span class="line">                    <span class="keyword">if</span> save_txt:  <span class="comment"># Write to file</span></span><br><span class="line">                        xywh = (xyxy2xywh(torch.tensor(xyxy).view(<span class="number">1</span>, <span class="number">4</span>)) / gn).view(-<span class="number">1</span>).tolist()  <span class="comment"># normalized xywh</span></span><br><span class="line">                        line = (cls, *xywh, conf) <span class="keyword">if</span> opt.save_conf <span class="keyword">else</span> (cls, *xywh)  <span class="comment"># label format</span></span><br><span class="line">                        <span class="keyword">with</span> <span class="built_in">open</span>(txt_path + <span class="string">&#x27;.txt&#x27;</span>, <span class="string">&#x27;a&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">                            f.write((<span class="string">&#x27;%g &#x27;</span> * <span class="built_in">len</span>(line)).rstrip() % line + <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span> save_img <span class="keyword">or</span> opt.save_crop <span class="keyword">or</span> view_img:  <span class="comment"># Add bbox to image</span></span><br><span class="line">                        c = <span class="built_in">int</span>(cls)  <span class="comment"># integer class</span></span><br><span class="line">                        label = <span class="literal">None</span> <span class="keyword">if</span> opt.hide_labels <span class="keyword">else</span> (names[c] <span class="keyword">if</span> opt.hide_conf <span class="keyword">else</span> <span class="string">f&#x27;<span class="subst">&#123;names[c]&#125;</span> <span class="subst">&#123;conf:<span class="number">.2</span>f&#125;</span>&#x27;</span>)</span><br><span class="line">                        plot_one_box(xyxy, im0, label=label, color=colors(c, <span class="literal">True</span>), line_thickness=opt.line_thickness)</span><br><span class="line">                        <span class="keyword">if</span> opt.save_crop:</span><br><span class="line">                            save_one_box(xyxy, im0s, file=save_dir / <span class="string">&#x27;crops&#x27;</span> / names[c] / <span class="string">f&#x27;<span class="subst">&#123;p.stem&#125;</span>.jpg&#x27;</span>, BGR=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">            <span class="comment"># Print time (inference + NMS)</span></span><br><span class="line">            print(<span class="string">f&#x27;<span class="subst">&#123;s&#125;</span>Done. (<span class="subst">&#123;t2 - t1:<span class="number">.3</span>f&#125;</span>s)&#x27;</span>)</span><br><span class="line"></span><br><span class="line">            <span class="comment"># Stream results</span></span><br><span class="line">            <span class="keyword">if</span> view_img:</span><br><span class="line">                cv2.imshow(<span class="built_in">str</span>(p), im0)</span><br><span class="line">                cv2.waitKey(<span class="number">1</span>)  <span class="comment"># 1 millisecond</span></span><br><span class="line"></span><br><span class="line">            <span class="comment"># Save results (image with detections)</span></span><br><span class="line">            <span class="keyword">if</span> save_img:</span><br><span class="line">                <span class="keyword">if</span> dataset.mode == <span class="string">&#x27;image&#x27;</span>:</span><br><span class="line">                    cv2.imwrite(save_path, im0)</span><br><span class="line">                <span class="keyword">else</span>:  <span class="comment"># &#x27;video&#x27; or &#x27;stream&#x27;</span></span><br><span class="line">                    <span class="keyword">if</span> vid_path != save_path:  <span class="comment"># new video</span></span><br><span class="line">                        vid_path = save_path</span><br><span class="line">                        <span class="keyword">if</span> <span class="built_in">isinstance</span>(vid_writer, cv2.VideoWriter):</span><br><span class="line">                            vid_writer.release()  <span class="comment"># release previous video writer</span></span><br><span class="line">                        <span class="keyword">if</span> vid_cap:  <span class="comment"># video</span></span><br><span class="line">                            fps = vid_cap.get(cv2.CAP_PROP_FPS)</span><br><span class="line">                            w = <span class="built_in">int</span>(vid_cap.get(cv2.CAP_PROP_FRAME_WIDTH))</span><br><span class="line">                            h = <span class="built_in">int</span>(vid_cap.get(cv2.CAP_PROP_FRAME_HEIGHT))</span><br><span class="line">                        <span class="keyword">else</span>:  <span class="comment"># stream</span></span><br><span class="line">                            fps, w, h = <span class="number">30</span>, im0.shape[<span class="number">1</span>], im0.shape[<span class="number">0</span>]</span><br><span class="line">                            save_path += <span class="string">&#x27;.mp4&#x27;</span></span><br><span class="line">                        vid_writer = cv2.VideoWriter(save_path, cv2.VideoWriter_fourcc(*<span class="string">&#x27;mp4v&#x27;</span>), fps, (w, h))</span><br><span class="line">                    vid_writer.write(im0)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> save_txt <span class="keyword">or</span> save_img:</span><br><span class="line">        s = <span class="string">f&quot;\n<span class="subst">&#123;<span class="built_in">len</span>(<span class="built_in">list</span>(save_dir.glob(<span class="string">&#x27;labels/*.txt&#x27;</span>)))&#125;</span> labels saved to <span class="subst">&#123;save_dir / <span class="string">&#x27;labels&#x27;</span>&#125;</span>&quot;</span> <span class="keyword">if</span> save_txt <span class="keyword">else</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">        print(<span class="string">f&quot;Results saved to <span class="subst">&#123;save_dir&#125;</span><span class="subst">&#123;s&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line">    print(<span class="string">f&#x27;Done. (<span class="subst">&#123;time.time() - t0:<span class="number">.3</span>f&#125;</span>s)&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    parser = argparse.ArgumentParser()</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;--weights&#x27;</span>, nargs=<span class="string">&#x27;+&#x27;</span>, <span class="built_in">type</span>=<span class="built_in">str</span>, default=<span class="string">&#x27;best.pt&#x27;</span>, <span class="built_in">help</span>=<span class="string">&#x27;model.pt path(s)&#x27;</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;--source&#x27;</span>, <span class="built_in">type</span>=<span class="built_in">str</span>, default=<span class="string">&#x27;data/images&#x27;</span>, <span class="built_in">help</span>=<span class="string">&#x27;source&#x27;</span>)  <span class="comment"># file/folder, 0 for webcam</span></span><br><span class="line">    parser.add_argument(<span class="string">&#x27;--img-size&#x27;</span>, <span class="built_in">type</span>=<span class="built_in">int</span>, default=<span class="number">640</span>, <span class="built_in">help</span>=<span class="string">&#x27;inference size (pixels)&#x27;</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;--conf-thres&#x27;</span>, <span class="built_in">type</span>=<span class="built_in">float</span>, default=<span class="number">0.25</span>, <span class="built_in">help</span>=<span class="string">&#x27;object confidence threshold&#x27;</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;--iou-thres&#x27;</span>, <span class="built_in">type</span>=<span class="built_in">float</span>, default=<span class="number">0.45</span>, <span class="built_in">help</span>=<span class="string">&#x27;IOU threshold for NMS&#x27;</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;--device&#x27;</span>, default=<span class="string">&#x27;0&#x27;</span>, <span class="built_in">help</span>=<span class="string">&#x27;cuda device, i.e. 0 or 0,1,2,3 or cpu&#x27;</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;--view-img&#x27;</span>, action=<span class="string">&#x27;store_true&#x27;</span>, <span class="built_in">help</span>=<span class="string">&#x27;display results&#x27;</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;--save-txt&#x27;</span>, action=<span class="string">&#x27;store_true&#x27;</span>, <span class="built_in">help</span>=<span class="string">&#x27;save results to *.txt&#x27;</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;--save-conf&#x27;</span>, action=<span class="string">&#x27;store_true&#x27;</span>, <span class="built_in">help</span>=<span class="string">&#x27;save confidences in --save-txt labels&#x27;</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;--save-crop&#x27;</span>, action=<span class="string">&#x27;store_true&#x27;</span>, <span class="built_in">help</span>=<span class="string">&#x27;save cropped prediction boxes&#x27;</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;--nosave&#x27;</span>, action=<span class="string">&#x27;store_true&#x27;</span>, <span class="built_in">help</span>=<span class="string">&#x27;do not save images/videos&#x27;</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;--classes&#x27;</span>, nargs=<span class="string">&#x27;+&#x27;</span>, <span class="built_in">type</span>=<span class="built_in">int</span>, <span class="built_in">help</span>=<span class="string">&#x27;filter by class: --class 0, or --class 0 2 3&#x27;</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;--agnostic-nms&#x27;</span>, action=<span class="string">&#x27;store_true&#x27;</span>, <span class="built_in">help</span>=<span class="string">&#x27;class-agnostic NMS&#x27;</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;--augment&#x27;</span>, action=<span class="string">&#x27;store_true&#x27;</span>, <span class="built_in">help</span>=<span class="string">&#x27;augmented inference&#x27;</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;--update&#x27;</span>, action=<span class="string">&#x27;store_true&#x27;</span>, <span class="built_in">help</span>=<span class="string">&#x27;update all models&#x27;</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;--project&#x27;</span>, default=<span class="string">&#x27;runs/detect&#x27;</span>, <span class="built_in">help</span>=<span class="string">&#x27;save results to project/name&#x27;</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;--name&#x27;</span>, default=<span class="string">&#x27;exp&#x27;</span>, <span class="built_in">help</span>=<span class="string">&#x27;save results to project/name&#x27;</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;--exist-ok&#x27;</span>, action=<span class="string">&#x27;store_true&#x27;</span>, <span class="built_in">help</span>=<span class="string">&#x27;existing project/name ok, do not increment&#x27;</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;--line-thickness&#x27;</span>, default=<span class="number">3</span>, <span class="built_in">type</span>=<span class="built_in">int</span>, <span class="built_in">help</span>=<span class="string">&#x27;bounding box thickness (pixels)&#x27;</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;--hide-labels&#x27;</span>, default=<span class="literal">False</span>, action=<span class="string">&#x27;store_true&#x27;</span>, <span class="built_in">help</span>=<span class="string">&#x27;hide labels&#x27;</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;--hide-conf&#x27;</span>, default=<span class="literal">False</span>, action=<span class="string">&#x27;store_true&#x27;</span>, <span class="built_in">help</span>=<span class="string">&#x27;hide confidences&#x27;</span>)</span><br><span class="line">    opt = parser.parse_args()</span><br><span class="line">    print(opt)</span><br><span class="line">    check_requirements(exclude=(<span class="string">&#x27;tensorboard&#x27;</span>, <span class="string">&#x27;pycocotools&#x27;</span>, <span class="string">&#x27;thop&#x27;</span>))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">with</span> torch.no_grad():</span><br><span class="line">        <span class="keyword">if</span> opt.update:  <span class="comment"># update all models (to fix SourceChangeWarning)</span></span><br><span class="line">            <span class="keyword">for</span> opt.weights <span class="keyword">in</span> [<span class="string">&#x27;yolov5s.pt&#x27;</span>, <span class="string">&#x27;yolov5m.pt&#x27;</span>, <span class="string">&#x27;yolov5l.pt&#x27;</span>, <span class="string">&#x27;yolov5x.pt&#x27;</span>]:</span><br><span class="line">                inference(opt=opt)</span><br><span class="line">                strip_optimizer(opt.weights)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            inference(opt=opt)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">##需要补充按照要求格式的txt文件部分##</span></span><br></pre></td></tr></table></figure></p><p> </p><h2 id="决赛">决赛</h2><h3 id="决赛流程">决赛流程</h3><ul><li>复试通过后六强，进入决赛</li><li>5月26日- 28日，线下集训（上海市杨浦区）。主要内容为<a href="https://yuanyuspace.cn/2021/04/10/delladas/#more">小车组装</a>，代码修改、测试、训练等</li><li>5月29日上午模拟路考，下午方案陈述考试（占总成绩50%）</li><li>5月30日，真实道路考试</li></ul><p> </p><h3 id="硬件选择">硬件选择</h3><ul><li>硬件选择计分规则：方案上采用NX主控会减分、采用多摄会加分、使用景深和激光雷达模组有加分、使用较大麦轮会扣分、使用增强版动力电机模组加分、使用增强版车架加分</li><li>多目方案的选取：单目、双目、三目视觉原始图像如下所示。经过测试，对于赛道这种场景单一的情况，其实单目效果最好，但为了方案分数，采用裁剪拼接的三目方案。<div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/09/8baed10c8149ef49.jpg" width="150"/></div><div data-align="center">单目</div><div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/09/1875ca6b4c1f5bf9.jpg" width="300"/></div><div data-align="center">双目</div><div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/09/a0b73b3a927d330a.jpg" width="600"/></div><div data-align="center">三目</div><div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/09/cd81604e1da4cc79.jpg" width="200"/></div><div data-align="center">最终三目方案</div></li><li>未采用景深和激光雷达模组，主要是因为其主要探测距离和障碍物，在纯视觉已经有很好效果的基础上不是很必要，且调试时间不够。</li><li>采用较小车架，是权衡加减分以及机动性（转弯）的结果</li><li>最终硬件结果<div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/09/5247c8e42cef1e2a.png" width="400"/></div></li></ul><p> </p><h3 id="算法与软件">算法与软件</h3><ul><li>在给出的基础架构上修改，交通标志识别部分算法，无法融合进框架，索性放弃，在训练上做文章（过拟合）</li><li>具体框架文件丢失！找不到了！<div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/09/1749e4b060134e70.png" width="200"/></div></li><li><a href="https://pan.baidu.com/s/1-CNOja5Sw68CVKzdDAhprA">部分,提取码：6666</a></li><li>训练：将自主训练的模型与预训练模型以及之前效果较好的模型混合训练，可以取得更好的效果，训练时间上5分钟左右是过拟合的最好状态</li><li>关于限速的训练，修改手柄油门等参数：<div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/09/5207fba5ea3b4486.png" width="200"/></div><div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/09/b377daadbcde77a1.png" width="200"/></div></li></ul><h3 id="结果">结果</h3><ul><li><a href="https://weibo.com/tv/show/1034:4642205193928779?from=old_pc_videoshow">路试部分效果</a></li><li>最后全国第二<div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/09/c49a979a083cbea6.jpg" width="500"/></div><div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/09/8f517cc82b6baad3.jpg" width="500"/></div></li></ul><p> </p><div data-align="center">小比赛还是有黑幕不规范的地方</div>]]></content>
      
      
      <categories>
          
          <category> 一些比赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CV </tag>
            
            <tag> 自动驾驶 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Simultaneous Image Registration and Fusion in a Unified Framework</title>
      <link href="/2021/04/11/SIRF/"/>
      <url>/2021/04/11/SIRF/</url>
      
        <content type="html"><![CDATA[<center>图像融合</center><span id="more"></span><p> </p><h2 id="foreword">Foreword</h2><ul><li>2015年录用于IEEE Transactions Image Processing(TIP)</li><li>第一作者<a href="https://cchen156.github.io/">chen chen</a>, specially on low level image to image processing.</li></ul><p> </p><h2 id="conceptual-understanding">Conceptual Understanding</h2><ul><li><p><a href="https://blog.csdn.net/Chaolei3/article/details/79404806">全色、多光谱、高光谱</a></p></li><li><p><a href="https://blog.csdn.net/Dandelion_2/article/details/96999903">强度色调饱和度(IHS)</a>：强度表示光谱的整体亮度大小，对应于图像的空间分辨率，色调描述纯色的属性，决定与光谱的主波长，是光谱在质的方面的区别，饱和度表征光谱的主波长在强度中的比例，色调和饱和度代表图像的光谱分辨率。</p></li><li><p><a href="https://zhuanlan.zhihu.com/p/139018146">变分</a></p></li><li><p><a href="https://blog.csdn.net/iverson_49/article/details/38354961?utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7Edefault-5.control&amp;dist_request_id=&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7Edefault-5.control">快速迭代收缩阈值算法(FISTA)</a></p></li><li><p>Frobenius 范数:<br />设 <span class="math inline">\(A=\left[a_{i j}\right]_{m \times n}\)</span> 是一个 <span class="math inline">\(m \times n\)</span> 矩阵, 称 <span class="math inline">\(\|A\|_{F}=\sqrt{\operatorname{tr}\left(A^{T} A\right)}=\sqrt{\sum_{i=1}^{m} \sum_{j=1}^{n} a_{i j}^{2}}\)</span> 是这个 矩阵的 Frobenius 范数。</p></li><li><p><a href="https://www.jianshu.com/p/fd9e2166cfcc">转置卷积</a></p></li><li><p><a href="https://blog.csdn.net/zhouxinxin0202/article/details/78620898">L2,1范数</a><br />L1范数只要求列稀疏，L2,1范数还要求行稀疏（实现了行列都稀疏）</p></li><li><p><a href="https://blog.csdn.net/qq_38701868/article/details/89215881">图像直方图 Image Histogram</a>：是用以表示数字图像中亮度分布的直方图，标绘了图像中每个亮度值的像素数。</p></li><li><p><a href="https://blog.csdn.net/macunshi/article/details/79819263">直方图规定化</a>与<a href="https://blog.csdn.net/macunshi/article/details/79815870">均衡化</a></p></li><li><p><a href="https://blog.csdn.net/qq_42746999/article/details/104039091">SML映射</a></p></li></ul><p> </p><h2 id="abstract">Abstract</h2><ul><li>本文提出在同一地理位置上融合高分辨率全色图像(high-resolution panchromatic image)和低分辨率多光谱图像(low- resolution multispectral image)的新方法。</li><li>化为凸优化问题，是最小化最小二乘拟合项和动态梯度稀疏性正则化的线性组合。前者是为了保持多光谱图像的准确光谱信息，后者是为了保持高分辨率全色图像的清晰边缘。why?</li><li>提出在融合过程中同时配准两幅图像，这是通过动态梯度稀疏特性自然实现的。</li><li>大量的实验结果表明，所提出的方法在空间和光谱质量方面明显优于其他方法。</li></ul><p> </p><h2 id="introduction">Introduction</h2><ul><li>多光谱(MS)图像在遥感领域应用广泛，高分辨率质谱传感器的设计受到机载存储和带宽传输基础设施限制。具有高空间分辨率的全色(Pan)灰度图像可以更方便地获得，因为它们由数量少得多的像素组成。我们期望通过图像融合获得高空间分辨率和高光谱分辨率的图像，这在文献中也被称为泛锐化。</li></ul><div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/04/b58b04cdf26a47bb.png" width="600"/></div><ul><li><p>图像融合是一个典型的逆问题。第一个问题是如何从MS和Pan中保留准确的信息。</p></li><li><p>许多传统方法使用投影和替换，包括主成分分析(PCA)、强度色调饱和度(IHS)、小波(wavelet)及其组合。这些方法在以下方案中执行融合:上采样、前向变换、强度匹配、组件替换和反向转换。但它们很可能受到光谱失真的影响。</p></li><li><p>为解决光谱失真，提出一些变分方法，基于稍微弱的假设来制定能量函数，然后优化这样的函数以获得最佳值。这些方法也被称为基于模型的融合。然而，由于缺乏有效的模型来保存空间信息，在融合结果中可能会出现可见的伪影或模糊。此外，所有这些方法通常涉及高计算复杂性，这使得这些方法无法扩展到大规模数据集。</p></li><li><p>融合中的第二个问题是如何减少失调的影响。以上方法几乎都需要在融合前进行精确的配准。然而，由于输入图像之间的显著分辨率差异，预配准相当具有挑战性。预配准后，当分辨率相差四倍时，多光谱图像上0.5像素的失准对应于全景图像上2像素的失准。</p></li><li><p>本文提出了一种新的图像同时配准和融合的方法，以首字母SIRF命名。</p></li><li><p>我们假设下采样后的融合图像应该接近输入的MS图像，该图像被公式化为最小二乘拟合项以保持光谱信息。</p></li><li><p>受融合图像和输入Pan图像之间的地理关系的驱动，发现、定义并利用动态梯度稀疏特性来提高空间质量。重要的是，我们发现组合模型不违反遥感物理，并且动态梯度稀疏性自然地诱导精确配准，即使在严重的强度失真下。</p></li><li><p>此外，方法结合了不同波段的内在相关性，这是以前很少考虑的。为了优化整个能量函数，设计了一种基于最近梯度技术的新算法。具体来说，通过分别应用快速迭代收缩阈值算法(FISTA和带回溯的梯度下降法)来有效地解决子问题。整个算法在每次迭代中保持线性计算复杂度，因此可扩展到大规模数据集。该算法可直接应用于真实数据集，无需预过滤、特征提取、训练等。</p></li><li><p>最后，SIRF只有一个非敏感参数，这是与现有变分方法相比的另一个优点。大量实验结果表明，我们的方法可以显著减少光谱失真，同时保留融合图像中清晰的物体边界。</p></li></ul><p> </p><h2 id="modeling">Modeling</h2><h3 id="notations">notations</h3><ul><li><p><span class="math inline">\(\mathbf{P} \in \mathbb{R}^{m \times n}\)</span>为Pan图像</p></li><li><p><span class="math inline">\(\mathbf{M} \in \mathbb{R}^{\frac{m}{c} \times \frac{n}{c} \times s}\)</span>为MS图像。c是常数，当Pan图像的分辨率为0.6m，MS图像的分辨率为2.4m时，c = 4</p></li><li><p><span class="math inline">\(\mathbf{X} \in \mathbb{R}^{m \times n \times s}\)</span>是要融合的图像</p></li><li><p><span class="math inline">\(\|\cdot\|_{F}\)</span>是Frobenius范数</p></li><li><p><span class="math inline">\(\mathbf{X}_{i, j, d}\)</span>表示X的第i行、第j列和第d带中的元素</p></li></ul><p> </p><h3 id="local-spectral-consistency">local spectral consistency</h3><ul><li>许多现有方法对MS图像进行上采样，并从该上采样的MS图像中提取光谱信息。然而，向上采样的图像模糊且不准确。因此，我们只假设下采样后的融合图像接近原始的MS图像。最小二乘拟合用于模拟这种关系: <span class="math display">\[E_{1}=\frac{1}{2}\|\psi \mathbf{X}-\mathbf{M}\|_{F}^{2}\]</span></li><li>其中ψ表示下采样运算符。局部光谱信息被强制与MS每个像素一致。这个函数是物理激励的，因此可以避免结果中的频谱失真。由于极低的下采样率(例如，当c = 4时为1/16)，最小化E1将是一个严重不适定的问题。没有强先验信息，X几乎不可能被准确估计</li></ul><p> </p><h3 id="dynamic-gradient-sparsity">dynamic gradient sparsity</h3><ul><li><p>Pan图像提供了这样的先验信息。</p></li><li><p>由于遥感图像通常是分段平滑的，因此它们的梯度往往是稀疏的，非零值对应于边缘。</p></li><li><p>此外，当图像对齐良好时，这些边缘的位置应与平移图像上的位置相同。根据参考图像，证明了稀疏性不是固定的而是动态的。我们将具有这种性质的数据称为动态梯度稀疏信号/图像。</p></li><li><p>全变分可以促进梯度的稀疏性。然而，在该正则项中没有整合来自Pan图像的参考信息。与以前的工作不同，我们的方法鼓励动态梯度稀疏性。除了先前方法试图使用的先验信息之外，我们还注意到跨不同波段的内部相关性，因为它们是相同陆地对象的表示。因此，不同波段的梯度应该是组稀疏的(group sparse)。L1范数鼓励稀疏，L2,1范数鼓励群体稀疏。因此，我们提出了一个新的能量函数来同时促进动态梯度稀疏性和组稀疏性: <span class="math display">\[\begin{aligned}E_{2} &amp;=\|\nabla \mathbf{X}-\nabla D(\mathbf{P})\|_{2,1} \\&amp;=\sum_{i} \sum_{j} \sqrt{\sum_{d} \sum_{q}\left(\nabla_{q} \mathbf{X}_{i, j, d}-\nabla_{q} \mathbf{P}_{i, j}\right)^{2}}\end{aligned}\]</span></p></li><li><p>其中q = 1,2，D(P)表示复制P到s波段。有趣的是，当没有参考图像时，即P = 0，结果与矢量全变分(VTV)的结果相同。</p></li><li><p>情形(a)-(d)分别具有组稀疏数8、4、4、2。</p></li></ul><div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/04/0aae580bd4f1a87f.png" width="600"/></div><ul><li>结合这两个能量函数，图像融合问题可以表述为:</li></ul><p><span class="math display">\[\begin{array}{l}\min _{\mathbf{X}}\left\{E(\mathbf{X})=E_{1}+\lambda E_{2}\right. \\\left.\quad=\frac{1}{2}\|\psi \mathbf{X}-\mathbf{M}\|_{F}^{2}+\lambda\|\nabla \mathbf{X}-\nabla D(\mathbf{P})\|_{2,1}\right\}\end{array}\]</span></p><ul><li>所提出的动态梯度稀疏性仅迫使支持集相同，而梯度的符号以及信号的幅度不需要相同。这些属性使其在对比度反转下不变，并且对光照条件不敏感。它可以应用于不同来源或不同采集时间的图像融合。方法还可以同时联合融合多个波段，这提供了对噪声的鲁棒性。</li></ul><p> </p><h3 id="simultaneous-image-registration">simultaneous image registration</h3><ul><li>提出在融合过程中同时配准图像。一方面，多光谱图像被锐化到更高的分辨率。这使我们能够更准确地记录图像。另一方面，未对准被逐渐消除，并且图像可以被更精确地融合。我们反复运行这两个过程，直到收敛。</li><li>基于配准中使用的特征，现有的图像配准方法可以分为基于特征的配准和基于像素(或基于强度)的配准。基于特征的方法依赖于从图像中提取的标志。更感兴趣的是基于强度的配准，它可以在统一的优化方案中与融合相结合。</li><li>图像配准最重要的组成部分之一是能量函数的测量相似度。</li><li>使用动态梯度稀疏性来保存空间信息。任何错位都会增加梯度的稀疏性。动态梯度稀疏性可以自然地用作相似性度量。我们可以修改同时进行图像配准和融合的能量函数: <span class="math display">\[E(\mathbf{X}, \mathcal{T})=\frac{1}{2}\|\psi \mathbf{X}-\mathbf{M}\|_{F}^{2}+\lambda\|\nabla \mathbf{X}-\nabla \mathcal{T}(D(\mathbf{P}))\|_{2,1} \tag{a}\]</span>   其中<span class="math inline">\(\mathcal{T}\)</span>是需要估计的变换</li><li>将提出的相似性度量与现有的方法进行了比较。图中的蓝色曲线显示了不同测量的响应，所有这些测量都可以在零平移时找到最佳对准。在增加强度失真和重新缩放之后，图(b)中所示的源图像的外观与原始Lena图像的外观不一致。红色曲线表示的结果表明，只有RC和所提出的方法可以处理这种强度失真。</li></ul><div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/04/8aaf465c345a64a2.png" width="600"/></div><p> </p><h2 id="algorithm">Algorithm</h2><ul><li><p>目标是最小化能量函数(a)。先通过固定T来解决关于X的问题，然后通过固定X来解决关于T的问题，对于X子问题: <span class="math display">\[E(\mathbf{X})=\frac{1}{2}\|\psi \mathbf{X}-\mathbf{M}\|_{F}^{2}+\lambda\|\nabla \mathbf{X}-\nabla \mathcal{T}(D(\mathbf{P}))\|_{2,1} \tag{b}\]</span></p></li><li><p>(b)一个明显的凸函数。第一项是光滑的，而第二项是不光滑的。在FISTA框架中解决这个子问题。已经证明，对于一阶方法，FISTA可以达到最优收敛速度。</p></li><li><p>关于T的第二子问题可以写成: <span class="math display">\[\min E(\mathcal{T})=\|\nabla \mathbf{X}-\nabla \mathcal{T}(D(\mathbf{P}))\|_{2,1} \tag{c}\]</span></p></li><li><p>下图总结了提出的同时进行图像配准和融合(SIRF)的泛锐化(pan-sharpening)算法：.</p></li></ul><div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/04/c9c9a8a35e3f64bd.png" width="600"/></div><ul><li><p>这里ψ表示ψ的逆算子。L是<span class="math inline">\(\psi^{T}(\psi \mathbf{X}-\mathbf{M})\)</span>的李普希茨常数。</p></li><li><p>观察到解决方案是基于Xk 和 Xk-1更新的，而在以前的方法中使用的Bregman方法仅基于Xk更新X，也就是为什么我们的方法收敛得更快的原因。</p></li><li><p>SIRF 子问题1中，L=1， <span class="math display">\[\mathbf{X}^{k}=\arg \min _{\mathbf{X}}\left\{\frac{1}{2}\|\mathbf{X}-\mathbf{Y}\|_{F}^{2}+\lambda\|\nabla \mathbf{X}-\nabla \mathcal{T}(D(\mathbf{P}))\|_{2,1}\right\} \tag{d}\]</span></p></li><li><p>取<span class="math inline">\(\mathbf{Z}=\mathbf{X}-\mathcal{T}(D(\mathbf{P}))\)</span> ，带入式(d)： <span class="math display">\[\mathbf{Z}^{k}=\arg \min _{\mathbf{Z}}\left\{\frac{1}{2}\|\mathbf{Z}-(\mathbf{Y}-\mathcal{T}(D(\mathbf{P})))\|_{F}^{2}+\lambda\|\nabla \mathbf{Z}\|_{2,1}\right\}\]</span></p></li><li><p>这个替代问题是一个VTV去噪问题，Xk由<span class="math inline">\(\mathbf{Z}^{k}+\mathcal{T}(D(\mathbf{P}))\)</span>更新。VTV去噪算法的慢版本是基于FISTA框架来加速求解(d)的，这在Algorithm 2中进行了总结</p></li><li><p>线性算子定义: <span class="math inline">\(\mathcal{L}(\mathbf{R}, \mathbf{S})_{i, j, d}=\)</span> <span class="math inline">\(\mathbf{R}_{i, j, d}-\mathbf{R}_{i-1, j, d}+\mathbf{S}_{i, j, d}-\mathbf{S}_{i, j-1, d}\)</span> ，对应的逆算子： <span class="math inline">\(\mathcal{L}^{T}(\mathbf{X})=(\mathbf{R}, \mathbf{S})\)</span> with <span class="math inline">\(\mathbf{R}_{i, j, d}=\mathbf{X}_{i, j, d}-\mathbf{X}_{i+1, j, d}\)</span> and <span class="math inline">\(\mathbf{S}_{i, j, d}=\mathbf{X}_{i, j, d}-\mathbf{X}_{i, j+1, d} \cdot \mathbb{P}\)</span> 是投射算子确保： <span class="math inline">\(\sum_{d=1}^{s}\left(\mathbf{R}_{i, j, d}^{2}+\right.\)</span> <span class="math inline">\(\left.\mathbf{S}_{i, j, d}^{2}\right) \leq 1,\left|\mathbf{R}_{i, n, d}\right| \leq 1\)</span>, and $|_{m, j, d}|  $</p></li></ul><div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/04/d559cefdc20504b7.png" width="600"/></div><ul><li>用带回溯的梯度下降法(gradient descent method with backtracking))来解决第二个子问题(c)，好处是在最小化时没有引入新参数变量</li><li>设<span class="math inline">\(\mathbf{r}=\nabla \mathbf{X}-\nabla \mathcal{T}(D(\mathbf{P}))\)</span> 是残差，对(c)的紧密估计： <span class="math display">\[E(\mathcal{T}) \approx \sum_{i} \sum_{j} \sqrt{\sum_{d}\left(\nabla_{1} \mathbf{r}_{i, j, d}\right)^{2}+\left(\nabla_{2} \mathbf{r}_{i, j, d}\right)^{2}+\epsilon}\]</span></li><li>根据链式法则，梯度： <span class="math display">\[\nabla E(\mathcal{T})=-\frac{\partial E(\mathcal{T})}{\partial \mathbf{r}} \nabla \mathcal{T}(D(\mathbf{P})) \frac{\partial \mathcal{T}}{\partial \theta}\]</span></li><li><span class="math inline">\(\epsilon\)</span>是一个小量,<span class="math inline">\(\nabla \mathcal{T}(D(\mathbf{P}))\)</span>表示图像亮度梯度，θ表示变换T的参数，在这里，变换主要是仿射或平移</li><li><span class="math inline">\(\partial \mathcal{T} / \partial \theta\)</span>是基于一阶泰勒近似计算的。我们设置初始步长t0= 1，η = 0.8。所有的运算都是线性的。函数值是在两幅图像的重叠区域上计算的。为了避免平凡解，如放大黑暗区域，在这里使用归一化函数值(除以重叠的像素M)。当没有重叠时，函数值将是无穷大。</li></ul><div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/04/395a99c42d43dfda.png" width="600"/></div><p> </p><h2 id="experiments">Experiments</h2><h3 id="simulation">simulation</h3><ul><li>该方法在Quickbird、Geoeye、SPOT和IKONOS卫星的多光谱数据集上进行了验证。Pan图像的分辨率范围为0.41米至1.5米,所对应的MS图像都具有较低的分辨率，c = 4，并且包含蓝、绿、红和近红外波段。为方便起见，仅显示RGB波段。由于缺乏同一场景的多分辨率图像，原始图像被视为 Ground truth，低分辨率图像从 Ground truth下采样得到。</li></ul><p> </p><h3 id="visual-comparison">visual comparison</h3><ul><li>结果<div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/04/89486867d01d6ee8.png" width="600"/></div></li><li>为了更好地可视化，图6和图7以相同的比例显示了与地面真实情况相比的误差图像。从这些误差图像中，可以清楚地观察到光谱失真、块状伪影和模糊。</li></ul><div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/04/05379ee6ec654dd6.png" width="600"/></div><p> </p><h3 id="quantitative-analysis">quantitative analysis</h3><ul><li>为了评估不同方法的融合质量，使用四个度量来衡量光谱质量，一个度量来衡量空间质量。光谱度量包括合成中的相对无量纲全局误差(ERGAS) 、光谱角度映射器(SAM) 、通用图像质量指数(Q-average) 和相对平均光谱误差(RASE) 。过滤后的相关系数(FCC) 被用作空间质量度量。此外，峰值信噪比(PSNR)、均方根误差(RMSE)和平均结构相似度(MSSIM) 用于评估与地面真实值相比的融合精度。</li></ul><div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/04/3180a298ca123bf2.png" width="600"/></div><p> </p><h3 id="efficiency-comparison">efficiency comparison</h3><div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/04/655df08137355dfc.png" width="600"/></div><p> </p><h3 id="translation">translation</h3><ul><li>在图1所示的平移图像中添加了3个像素的人工水平平移。SIRF的估计翻译如图10 (a)所示。通过大约100次迭代，可以非常准确地恢复真实的translation。</li></ul><div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/04/fb08e91c889d6c60.png" width="600"/></div><p> </p><h3 id="real-world-datasets">real-world datasets</h3><ul><li>图像是由IKONOS多光谱成像卫星获取，其中包含预配准的以其捕获分辨率拍摄的Pan和MS图像。</li></ul><p> </p><h2 id="conclusion-and-discussion">Conclusion and Discussion</h2><ul><li>基于动态梯度稀疏性的特性，提出了一种新的变分模型，用于在统一的框架下同时进行图像配准和融合。该模型自然地结合了来自高分辨率全色图像的梯度先验信息和来自低分辨率多光谱图像的光谱信息。</li><li>比现有的方法有几个优点:首先，所提出的动态梯度稀疏性可以直接利用来自Pan图像的尖锐边缘;第二，通过合并不同波段的内部相关性来联合锐化图像，而大多数现有的方法是基于波段间的融合；最后，尽管由于空间分辨率的不同，Pan和MS图像之间的配准相当困难，但我们的方法可以在融合过程中同时配准两个输入图像，直接作用于输入图像，而无需任何预滤波和特征提取。</li><li>方法被证实在空间和光谱质量方面始终优于现有技术。</li></ul><p> </p><h2 id="code">Code</h2><h3 id="background-knowledge">background knowledge</h3><ul><li><a href="https://blog.csdn.net/fx677588/article/details/53301740">uint8</a></li><li><a href="https://blog.csdn.net/robert_chen1988/article/details/81233738">sup inf</a></li><li><a href="https://ww2.mathworks.cn/help/matlab/ref/isnan.html">isnan()</a>:确定数组中哪些元素为NaN</li><li><a href="https://ww2.mathworks.cn/help/matlab/ref/find.html">find()</a>:查找非零元素的索引和值</li></ul>]]></content>
      
      
      <categories>
          
          <category> 论文阅读 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CV </tag>
            
            <tag> 图像融合 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Dell ADAS 公开课</title>
      <link href="/2021/04/10/delladas/"/>
      <url>/2021/04/10/delladas/</url>
      
        <content type="html"><![CDATA[<center>小车向前冲</center><span id="more"></span><p> </p><h2 id="任务">任务</h2><ul><li>先遥控小车在赛道上行驶，采集数据，完成AI学习进而实现自动驾驶<div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/04/56b32cceefd709f1.png" width="600"/></div></li></ul><p> </p><h2 id="小车部件组成">小车部件组成</h2><h3 id="总结构">总结构</h3><div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/04/9f82a115fcb47c1d.png" width="600"/></div><div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/04/6c70f6cc4911bb2d.png" width="600"/></div><p> </p><h3 id="步进电机">步进电机</h3><ul><li>步进电机：脉冲控制、精细、不需要刹车</li></ul><p> </p><h3 id="麦克纳姆轮">麦克纳姆轮</h3><ul><li>全向移动</li><li>安装时四个轮斜轴向小车中心</li><li><a href="https://blog.csdn.net/banzhuan133/article/details/69229922">麦克纳姆轮速度计算</a><div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/04/4e15d2441105b40d.png" width="600"/></div></li></ul><p> </p><h3 id="主控模组">主控模组</h3><ul><li>Nvidia Jetson Nano</li></ul><p> </p><h3 id="tof">TOF</h3><ul><li>测距2m</li></ul><p> </p><h3 id="安装">安装</h3><ul><li>驱动板电机安装不需要区分，因为有跳线自动识别</li></ul><p> </p><h2 id="自动驾驶训练">自动驾驶训练</h2><h3 id="数据传递">数据传递</h3><div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/04/ccf3d61a2cfecba8.png" width="600"/></div><p> </p><h3 id="摄像头">摄像头</h3><ul><li>分辨率最高1920*1080，帧率30FPS，25度倾角对地面</li></ul><p> </p><h3 id="小车控制">小车控制</h3><ul><li>分手动驾驶和自动驾驶两个模式</li><li>手动驾驶时需要连接手柄，且当速度不为0时会以每秒20帧的速度记录摄像头数据和手柄的records数据</li><li>自动驾驶时不需要连接手柄，也不会记录数据</li></ul><p> </p><h3 id="收集数据">收集数据</h3><ul><li>收集方法：手柄遥控小车走"正确"的路线和"正确"的行为</li><li>演示有如下几个场景<ol type="1"><li>轨道内无障碍物前进</li><li>躲避障碍物前进(直角、拐弯处)</li><li>遇到正面障碍物则停止</li></ol></li></ul><p> </p><h3 id="清洗数据">清洗数据</h3><ul><li>数据上传到GPU服务器 <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar cvf tub.tar tub&#x2F;                               # pack</span><br><span class="line">scp tub.tar it_stu199@192.168.40.2:~&#x2F;mycar&#x2F;        # upload</span><br></pre></td></tr></table></figure></li><li>登录GPU服务器，查看数据 <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ssh -X it_stu199@202.121.181.113                   # login</span><br><span class="line">cd mycar &amp;&amp; tar xvf tub.tar                        # unpack</span><br><span class="line">eog tub&#x2F;                                           # view data</span><br></pre></td></tr></table></figure></li><li>清洗数据:清洗掉错误的操控驾驶行为，手动剔除</li></ul><p> </p><h3 id="训练模型">训练模型</h3><ul><li>准备训练环境</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cp ~&#x2F;..&#x2F;it_stu199&#x2F;train_pkg.tar ~&#x2F;                 # copy</span><br><span class="line">tar xvf train_pkg.tar                              # unpack</span><br><span class="line">cd train_pkg</span><br><span class="line">mv ~&#x2F;tub .&#x2F;                                        # move dataset</span><br></pre></td></tr></table></figure><ul><li>根据需要修改训练作业run.sh</li><li>提交作业，进行模型训练</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sbatch run.sh                                      # submit job</span><br><span class="line">watch -n 1 &quot;sq | grep &amp;USER                        # check job</span><br></pre></td></tr></table></figure><ul><li><p>等待训练结束，检查是否正常结束 cat log/<最新的log文件> # check train log</p></li><li><p>说明 <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">run.sh                                   # gpu slurm 集群调度要求的作业脚本</span><br><span class="line">train.py                                 # 训练程序入口</span><br><span class="line">config.py                                # 训练程序常量</span><br><span class="line">dellcar                                  # 训练程序子模块</span><br><span class="line">models                                   # 训练出的模型保存目录</span><br><span class="line">log                                      # 训练过程日志</span><br></pre></td></tr></table></figure></p></li></ul><p> </p><h3 id="小车自动驾驶">小车自动驾驶</h3><ul><li>将训练好的模型拷贝到小车的 ~/mycar/models 目录内</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp ~&#x2F;mycar&#x2F;models&#x2F;&lt;模型名&gt; mousika@172.18.24.103:~&#x2F;mycar&#x2F;models&#x2F;</span><br></pre></td></tr></table></figure><ul><li>使用自动驾驶模型</li></ul><p>  a.命令行方式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ssh mousika@172.18.24.103</span><br><span class="line">cd ~&#x2F;mycar</span><br><span class="line">vi dellcar&#x2F;parts&#x2F;drive.py</span><br><span class="line">sudo python3 dellcar&#x2F;parts&#x2F;drive.py</span><br></pre></td></tr></table></figure><p>  b.Web 方式</p><p>  浏览器访问小车ip---&gt;connection/configuration<br />  Auto driving--&gt;选择<模型名>--&gt;点击start driving</p><ul><li>小车会启动程序并开始自动行驶</li></ul><p> </p><h2 id="其他">其他</h2><ul><li>采集图像与对应标签关系：某时刻下采集的图像生成的标签一一对应（标签主要是转弯信号、前进/后退/停止信号等遥控器行为）</li><li>遥控器操控舵量和标签关系：分段常数，如大于0.3取1，小于取0</li><li>行驶速度和操控量关系：在算法中简化处理</li><li>相关文件<a href="https://jbox.sjtu.edu.cn/l/h1HVCb">提取码: gmya</a></li><li>调试辅助软件：<a href="https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html">PuTTY</a>或者<a href="https://mobaxterm.mobatek.net/">MobaXterm</a></li></ul><h2 id="网络">网络</h2><h3 id="neural-network-architecture-for-adas">neural network architecture for ADAS</h3><ul><li><p>超参数：一开始就要给定<br /></p></li><li><p>参数：可以后面算出来</p></li><li><p>W特别大，激活函数在哪一点（梯度在接近于0的位置）</p></li><li><p>top5:即对一个图片，如果概率前五中包含正确答案，即认为正确。<br />top1:即对一个图片，如果概率最大的是正确答案，才认为正确</p></li><li><p>模型蒸馏</p></li></ul><h2 id="训练">训练</h2><ul><li>手动正确驾驶（寻线行驶、正确转弯、避障等），采集训练数据，如果有错误的驾驶行为，需要删除对应的错误数据（图片和.json文件）</li><li>将训练清洗过的数据放入服务器训练，得到自动驾驶模型</li></ul><h2 id="自动驾驶模型测试">自动驾驶模型测试</h2><ul><li>将训练得到的自动驾驶模型用于小车测试</li></ul>]]></content>
      
      
      <categories>
          
          <category> 一些项目 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 自动驾驶 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>春鸠</title>
      <link href="/2021/04/07/banjiu/"/>
      <url>/2021/04/07/banjiu/</url>
      
        <content type="html"><![CDATA[<center>窗台来了对斑鸠</center><span id="more"></span><p> </p><center>注：图较多，刷新较慢请耐心等待网页加载</center><p> </p><h3 id="section">2021-04-07</h3>  2021年4月7日上午，当我在实验室和论文公式斗争时，旁边窗台传来一阵动静，转眼看到一只鸟的尾翼撅起，在玻璃上下跳动。<div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/04/cc5b366f48886219.png" width="600"/></div>  走近一看，原来是一只珠颈斑鸠正在筑巢，不远处树梢上还有另一只停留，似乎要开始育雏。<div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/04/72ca0db0a6028b36.png" width="600"/></div><p>  这两只似乎并不很怕人，走到很近的地方也还没飞走。出于尽量减少打扰的考量，关上窗户，拉上窗帘，网购了鸽子粮食，告知实验室兄弟姐妹。准备在接下来的日子里相互陪伴，此博也作为一份记录。</p><p> </p><h3 id="section-1">2021-04-08</h3><p>  昨日下午开始下雨之后一直不见小鸟踪影，怅然若失。 今日中午再来看时，小鸟已归巢。</p><div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/04/72d82fc5fe773c55.png" width="600"/></div><center>这窝搭的真草率</center><p> </p><h3 id="section-2">2021-04-09</h3><p>  不知是大风还是何故，鸟巢寥寥零落几根树枝，好在下午仍见到亲鸟归巢。</p><div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/04/c486ea063c0fea2f.png" width="600"/></div><div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/04/9613d9ffdb05a01e.png" width="600"/></div><p> </p><h3 id="section-3">2021-04-10</h3><p>  上午校庆典礼结束，亲鸟将鸟巢重建完毕，来张特写</p><div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/04/5ac99ca6ac3a5eb3.png" width="600"/></div>  下午四时许，产下第一颗蛋<div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/04/837c813edc0f2142.png" width="600"/></div>  蛋和巢<div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/04/5cf55b34db3412c5.png" width="600"/></div>  晚上也一直在守着孵蛋，肉眼看黑乎乎的一坨蹲在墙角，一动不动，长曝光拍的照片：<div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/04/f39da54128b22edf.png" width="600"/></div><p> </p><h3 id="section-4">2021-04-11</h3>  风雨大作。<br />  中午到实验室时，鸟窝空空，鸟蛋坠落破碎，心碎。。。<br /><div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/04/e7cb362092c71e38.png" width="600"/></div>  悼念还未降临的小精灵<div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/04/a5f06fa294575d9f.png" width="600"/></div>  给重建了个足够结实的窝，蛋再也掉不下去了<div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/04/6350ef5e13c0e332.png" width="600"/></div><p>  23时，雨夜，小鸟未归。故事就这样结束了么？</p><p> </p><h3 id="section-5">2021-04-12</h3><p>  未归</p><p> </p><h3 id="section-6">2021-04-13</h3><p>  未归<br />  用白水泥和树枝重建人工鸟窝2.0</p><div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/04/7e60ad22ed15cfaf.png" width="600"/></div><p>  窗台粮食变少，莫名欣慰</p><p> </p><h3 id="section-7">2021-04-14</h3><p>  未归</p><p> </p><h3 id="section-8">2021-04-15</h3><p>  未归</p><p> </p><h3 id="section-9">2021-04-16</h3><p>  未归</p><p> </p><h3 id="section-10">2021-04-17</h3><p>  未归</p><p> </p><h3 id="section-11">2021-04-18</h3><p>  未归</p><p> </p><h3 id="section-12">2021-04-19</h3><p>  听闻早上有斑鸠在窗台上停留数十秒后离开</p><p> </p><h3 id="section-13">2021-04-20</h3>  傻鸟回来蹭吃的<div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/04/b374de0185cc93a4.png" width="600"/></div><p> </p><h3 id="section-14">2021-04-25</h3>  室友给我说鸟跑他们实验室下蛋去了，2333，原来本科prp导师的实验室<div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/04/42f53e840c96761a.png" width="600"/></div><p>  看起来结实一些</p><div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/04/3af69dfef83111d7.png" width="600"/></div><p> </p><h3 id="section-15">2021-04-26</h3>  乖巧.jpg<div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/04/031e4faef9375dab.png" width="600"/></div>  分不清到底是不是同一只<div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/04/e7e12e85f5021a51.png" width="600"/></div><p>  到晚上时，听说窝里只有一个蛋了</p><div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/04/e7ce39b695834e47.png" width="600"/></div><p> </p><h3 id="section-16">2021-04-28</h3>  空空<div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/04/0bc49cfe82c02c1c.png" width="600"/></div><p> </p><h3 id="section-17">2021-05-05</h3>  原本捡了几根树枝，准备给我窗台的人工鸟窝搭一搭。刚一推窗，鸟竟然从窝里飞起。小鸟回归！<div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/05/cff19743a1827186.png" width="600"/></div><p>  喂了点粮食，第一次拍到了两只同框的画面。</p><p> </p><h3 id="section-18">2021-05-06</h3>  建窝中<div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/05/6b0b5b05a2698f80.png" width="600"/></div><p> </p><h3 id="section-19">2021-05-07</h3>  老夫掐指一算，应该快下蛋了<div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/05/51d9594f55dd498a.png" width="600"/></div>  这个窝看起来靠谱很多<div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/05/bb58348c7cfef37b.png" width="600"/></div>  下蛋中，另外一只也在旁边<div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/05/c72efd03ffbba1f3.png" width="600"/></div>  下午4时许，又又又下蛋了<div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/05/483c605c82fa0a98.png" width="600"/></div><p> </p><h3 id="section-20">2021-05-08</h3>  蹲了一天，咕咕咕去旁边吃东西了<div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/05/3bbb83f0167c2f89.png" width="600"/></div>  准备热锅煎蛋（误<div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/05/73cc9e3124175dbd.png" width="600"/></div><p> </p><h3 id="section-21">2021-05-09</h3>  第二枚蛋<div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/05/9cb5fe331cbf2742.png" width="600"/></div><p>  </p><p> </p><h3 id="section-22">2021-05-10</h3>  中午最热的时候，亲鸟玩忽职守，两小时不回家<div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/05/d00d7d05dcf8bd93.png" width="600"/></div>  给你两开直播，晚饭两只同框<div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/05/ae95bd9f2c090104.png" width="600"/></div><div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/05/559dfb20a729a747.png" width="600"/></div><p> </p><h3 id="section-23">2021-05-11</h3>  风雨大作，雨点打湿了咕咕屁股<div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/05/b3b5c64389a9a359.png" width="600"/></div><p>  </p><p> </p><h3 id="section-24">2021-05-12</h3>  因为准备考试通宵，观察到咕咕安安静静蹲了一晚<div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/05/e83fe46934627b23.png" width="600"/></div><p>  </p><p> </p><h3 id="section-25">2021-05-13</h3>  岁月静好<div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/05/1a1667da7d7c95ff.png" width="600"/></div><p>  </p><p> </p><h3 id="section-26">2021-05-14</h3>  白天天气异常沉闷<div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/05/b2688748876def9d.png" width="600"/></div>  晚上雷暴，咕咕稳得住！<div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/05/7f5368f087470aaa.png" width="600"/></div><p> </p><h3 id="section-27">2021-05-15</h3>  参加导学活动，以你的名字<div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/05/eb8d164201a416a2.png" width="600"/></div><p>  </p><p> </p><h3 id="section-28">2021-05-16</h3>  周日，和琛宝去自然博物馆前拍摄<div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/05/835ac7e025398e4c.png" width="600"/></div><p>  </p><p> </p><h3 id="section-29">2021-05-17</h3>  风太大，炸毛了<div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/05/c933080d020ff9ff.png" width="600"/></div>  吃<div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/05/69e567e91ba2942e.png" width="600"/></div><p> </p><h3 id="section-30">2021-05-18</h3>  瞅什么瞅<div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/05/90ffac21286f45cf.png" width="600"/></div><p>  </p><p> </p><h3 id="section-31">2021-05-19</h3>  在镜头前表现感极强<div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/05/f6b00a69d92bdb5b.png" width="600"/></div>  <div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/05/17bb97abbae22169.png" width="600"/></div><p> </p><h3 id="section-32">2021-05-20</h3>  吹大风的一天<div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/05/9d998807b4ef16b4.png" width="600"/></div><p> </p><h3 id="section-33">2021-05-21</h3>  夫妻两再次同框，从体型、尾羽终于能明显分清两只鸟<div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/05/a51714756eee8e35.png" width="600"/></div>  你两孵蛋有点不认真<div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/05/9bf8089bbd393328.png" width="600"/></div><p> </p><h3 id="section-34">2021-05-22</h3>  修理修理羽毛<div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/05/16416ccfb784b9e9.png" width="600"/></div><p>  晚上又出去晃悠数小时不回家，第二天早上才看到母鸟</p><p> </p><h3 id="section-35">2021-05-23</h3>  亲鸟在窝里躁动不安<div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/05/2a3f8c05b82fa6a2.png" width="600"/></div><p> </p><h3 id="section-36">2021-05-24</h3>  (专业直播<div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/05/28273f5a4a65ee33.png" width="600"/></div>  临近中午时，终于拍到破壳！<div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/05/c033a1388659be5d.png" width="600"/></div><p> </p><div data-align="center"><img src="https://img11.360buyimg.com/ddimg/jfs/t1/188796/9/19571/345150/6120ffdfE6146fa92/16386437bc3d9364.jpg" width="600"/></div><p>  之后亲鸟一直未归</p><div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/08/ff2c7f3a69cf409b.jpg" width="600"/></div><p>  傍晚过后，将已经孵化出的一只小鸟接进实验室准备手养，当晚只有牛奶加豆浆机打的小米糊，琛宝特意从华师顺过来的注射器喂养，是日晚上10点，小鸟离开，将其安葬。</p><p> </p><h3 id="section-37">2021-08-21</h3><p>  结：2021年的夏天快要过去，鸟窝依旧，风雨如初。</p>]]></content>
      
      
      <categories>
          
          <category> 生活记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 好玩的 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Structure Tensor Total Variation</title>
      <link href="/2021/04/05/STTV/"/>
      <url>/2021/04/05/STTV/</url>
      
        <content type="html"><![CDATA[<center>结构张量全变分</center><span id="more"></span><h2 id="foreword">Foreword</h2><p>// 论文2015年发表于 SIAM Journal on Imaging Sciences, 四位作者均大牛。</p><h2 id="conceptual-understanding">Conceptual Understanding</h2><ul><li>对偶空间: <a href="https://zhuanlan.zhihu.com/p/23871517">理解</a></li><li>Tensor 张量: <a href="https://www.cnblogs.com/abella/p/10142935.html">通俗解释</a><br />疑惑点：到底是阶数还是维数？</li><li>Structure Tensor 结构张量：<br />  结构张量用于角点检测、边缘检测和纹理分析。对一副灰度图像，当两个相邻的像素点无限接近时，微分dI可以表示为：<br /><span class="math display">\[\mathrm{d} I=\frac{\partial I}{\partial x} \mathrm{~d} x+\frac{\partial I}{\partial y} \mathrm{~d} y\]</span><br />  其平方范数可以表示为：<br /><span class="math display">\[\|\mathrm{d} I\|^{2}=\sum_{m=x, y} \sum_{n=x, y}\left(\frac{\partial I}{\partial m} \cdot \frac{\partial I}{\partial n}\right) \mathrm{d} m \mathrm{~d} n=\left[\begin{array}{ll}\mathrm{d} x &amp; \mathrm{~d} y\end{array}\right] T\left[\begin{array}{l}\mathrm{d} x \\\mathrm{d} y\end{array}\right]\]</span></li></ul><p>$$</p><p>$$</p><p>  其中，T是结构张量：<br /><span class="math display">\[T=\left[\begin{array}{cc}I_{x}^{2} &amp; I_{x} I_{y} \\I_{x} I_{y} &amp; I_{y}^{2}\end{array}\right]\]</span><br />  其中<span class="math inline">\(I_{x}\)</span>和<span class="math inline">\(I_{y}\)</span>分别是沿x轴和y轴的一阶偏导数。矩阵T的行列式为K，迹为H。<br />  结构张量T为半正定矩阵，具有两个非负特征值，可以通过特征值将图像的空间结构信息分为三种：<br />  平坦区域：两个特征值<span class="math inline">\(\mu_{1}=\mu_{2}=0\)</span>(H=0)，表示图像在该点任何方向灰度变化都很小；<br />  边缘区域：两个特征值<span class="math inline">\(\mu_{1}=\mu_{2}=0\)</span>(H&gt;0 &amp; K=0)，表示图像在该点沿某一方向灰度变化率较大；<br />  角点区域：两个特征值<span class="math inline">\(\mu_{1}=\mu_{2}=0\)</span>(H&gt;0 &amp; K&gt;0)，表示图像在该点两个垂直方向上的灰度变化都很大；</p><ul><li><p>图像阶梯效应：也叫“块效应”，图像处理后某些区域内灰度相同。</p></li><li><p>Sobolev Space: <a href="https://blog.csdn.net/baimafujinji/article/details/49835983?utm_source=blogxgwz3&amp;utm_medium=distribute.pc_relevant.none-task-blog-baidujs_title-0&amp;spm=1001.2101.3001.4242">索伯列夫空间</a></p></li><li><p><a href="https://blog.zhujian.life/posts/e51acd5.html">Nesterov 加速梯度</a></p></li><li><p><a href="https://blog.csdn.net/Chaolei3/article/details/81202544">Lipschitz常数</a></p></li><li><p><a href="https://blog.csdn.net/a493823882/article/details/80569888">范数</a></p></li></ul><h2 id="abstract">Abstract</h2><ul><li>引入一个新的一般能量泛函，用它来解决变分框架内的逆成像问题。</li><li>所提出的正则化族称为结构张量全变分(STV)，它对结构张量的特征值进行惩罚，适用于灰度图像和向量值图像。</li><li>推广了已有的几种变分惩罚，包括全变分半群及其向量扩展。同时，由于结构张量能够捕获局部邻域的一阶信息，STV泛函能够提供更稳健的图像变化度量。</li><li>进一步证明了STV正则化是凸的，同时它们也满足图像变换的几个不变性。这些特性使它们成为成像应用的理想候选者。</li><li>对于离散版本的STV泛函，推导了一个等价的定义，该定义基于补丁的雅可比算子，这是一种新的线性算子，扩展了雅可比矩阵。</li><li>提出了关于各种逆成像问题的大量实验，将提出的正则化方法与其他正则化方法进行了比较。</li></ul><h2 id="introduction">Introduction</h2><ul><li>逆问题越来越多地出现在一系列成像应用中。它们也出现在大量的计算机视觉应用中，包括运动估计、图像配准、立体声和密集三维(3D)重建。</li><li>为了恢复的信息在物理上或统计上有意义，需要一个包含底层图像的已知属性的模型。</li><li>处理不适定反问题的一种常用策略是变分法。这个框架的主要元素是正规化函数。</li><li>最流行的成像应用正则化是全变分(TV)半范数。TV是一个凸函数，其成功的主要原因是它能够重建清晰、保存完好的图像边缘。然而，它的缺点是过度平滑均匀区域和产生阶梯伪影。</li></ul><h2 id="regularization-for-inverse-problems">Regularization for Inverse Problems</h2><h3 id="problem-formulation-and-variational-recovery">problem formulation and variational recovery</h3><p>  对于许多成像应用，采集是通过线性过程很好地描述的，可以用数学公式表示为: <span class="math display">\[\boldsymbol{v}(\boldsymbol{x}) \sim \mathcal{N}(\mathcal{A} \boldsymbol{u}(\boldsymbol{x}))\]</span>   其中，<span class="math inline">\(\boldsymbol{u}(\boldsymbol{x})=\left[u_{1}(\boldsymbol{x}) \ldots u_{M}(\boldsymbol{x})\right]: \mathbb{R}^{2} \mapsto \mathbb{R}^{M}\)</span>表示我们希望重建的具有M个通道的向量值的一般图像，A是一个线性算子，提供了从底层图像空间到测量空间的映射。符号N表示测量噪声，它包含了采集过程中所有可能的误差类型，包括随机噪声。<br />  从测量值v中恢复u属于线性逆问题的范畴。在大多数实际情况下，运算符A要么是病态的，要么是单数的。这种不适定性是在变分框架内处理的，其中u的重构是一个形式的目标函数的最小化问题: <span class="math display">\[\mathcal{E}(\boldsymbol{u})=\varphi(\mathcal{A} \boldsymbol{u})+\tau \psi(\boldsymbol{u})\]</span>   这个代价函数包括数据保真度项ϕ(Au)，它测量候选解对观测数据的解释程度，以及正则化ψ(u)，它编码关于底层图像的任何可用的先验信息。数据保真度项的确切形式取决于干扰测量的假定噪声模型。从贝叶斯的观点来看，整个重建方法对应于一个惩罚最大似然或最大后验估计问题。</p><h3 id="tv-regularization">TV regularization</h3><p>  TV适用于灰度图像u(M = 1)，对于平滑图像定义为: <span class="math display">\[\operatorname{TV}(u)=\int_{\mathbb{R}^{2}}\|\nabla u\|_{2} \mathrm{~d} \boldsymbol{x}\]</span>   TV的一个众所周知的缺点是，它支持分段常数解，它可以在图像的平滑区域创建强大的阶梯伪影。此外，TV和VTV的一个基本缺点是，用于惩罚图像在每个x点上变化的梯度大小作为图像描述符过于简单;它只依赖于x而不考虑其邻域的可用信息。</p><h3 id="directional-derivatives-and-the-structure-tensor">directional derivatives and the structure tensor</h3><p>  目标是开发邻域感知的矢量图像变化的措施。<br />  假设向量值图像u属于Sobolev空间<span class="math inline">\(W^{1,2}\left(\mathbb{R}^{2}, \mathbb{R}^{M}\right)\)</span>。设n为任意二维方向(<span class="math inline">\(\|\boldsymbol{n}\|_{2}=1\)</span>)。向量值图像u在n方向上以及任意特定图像点x处的矢量方向导数为： <span class="math display">\[\frac{\partial \boldsymbol{u}}{\partial \boldsymbol{n}}(\boldsymbol{x})=(J \boldsymbol{u}(\boldsymbol{x})) \boldsymbol{n}\]</span>   u的Jacobian矩阵<span class="math inline">\(J \boldsymbol{u}\)</span>定义为： <span class="math display">\[J \boldsymbol{u}(\boldsymbol{x})=\left[\nabla u_{1}(\boldsymbol{x}) \quad \ldots \quad \nabla u_{M}(\boldsymbol{x})\right]^{T}\]</span>   方向导数<span class="math inline">\(\|\partial \boldsymbol{u} / \partial \boldsymbol{n}\|_{2}\)</span>的大小衡量在n方向上任何一点x的图像变化量。这种方法的计算完全集中在x处。为了提高程序的鲁棒性和捕捉图像领域表现，用<span class="math inline">\(\|\partial \boldsymbol{u} / \partial \boldsymbol{n}\|_{2}\)</span>的加权均方根代替，称之为方向变化： <span class="math display">\[\operatorname{RMS}_{K}\left\{\|\partial \boldsymbol{u} / \partial \boldsymbol{n}\|_{2}\right\}=\sqrt{K *\|\partial \boldsymbol{u} / \partial \boldsymbol{n}\|_{2}^{2}}=\sqrt{\boldsymbol{n}^{T}\left(S_{k} \boldsymbol{u}\right) \boldsymbol{n}}\]</span>   在上面的方程中∗表示卷积运算，K(x)是一个非负的、旋转对称的卷积核，K(x) = K(|x|)，执行加权平均(例如，二维高斯分布)，<span class="math inline">\(S_{K} \boldsymbol{u}\)</span>是图像u在x点处的结构张量，定义为： <span class="math display">\[S_{K} \boldsymbol{u}(\boldsymbol{x})=K *\left[J \boldsymbol{u}^{T} J \boldsymbol{u}\right](\boldsymbol{x})\]</span></p><p>  设<span class="math inline">\(\lambda^{+}=\lambda^{+}\left(S_{K} \boldsymbol{u}(\boldsymbol{x})\right), \lambda^{-}=\lambda^{-}\left(S_{K} \boldsymbol{u}(\boldsymbol{x})\right)\)</span>是<span class="math inline">\(S_{K} \boldsymbol{u}(\boldsymbol{x})\)</span>的特征值，<span class="math inline">\(\lambda^{+} \geq \lambda^{-}\)</span>， <span class="math inline">\(\boldsymbol{\theta}^{+}, \boldsymbol{\theta}^{-}\)</span>是对应的特征向量。<span class="math inline">\(\omega \in(-\pi, \pi]\)</span>定义为方向向量n与特征向量<span class="math inline">\({\theta}^{+}\)</span>之间的夹角。利用特征分解，方向变化可以被定义为角度<span class="math inline">\(\omega\)</span>的函数： <span class="math display">\[V(\omega) \triangleq \operatorname{RMS}_{K}\left\{\|\partial \boldsymbol{u} / \partial \boldsymbol{n}\|_{2}\right\}=\sqrt{\lambda^{+} \cos ^{2} \omega+\lambda^{-} \sin ^{2} \omega}\]</span></p><p>  由上述参数得到椭圆： <span class="math display">\[\boldsymbol{P}(\omega)=\cos \omega \sqrt{\lambda^{+}} \boldsymbol{\theta}^{+}+\sin \omega \sqrt{\lambda^{-}} \boldsymbol{\theta}^{-}, \omega \in[0,2 \pi)\]</span></p><div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/04/9144982f69f09bb5.png" width="600"/></div><center>结构张量椭圆可视化结果</center><p>  椭圆的长半径和小半径分别为<span class="math inline">\(\sqrt{\lambda^{+}}\)</span>和<span class="math inline">\(\sqrt{\lambda^{-}}\)</span>，而长轴的方向分别为<span class="math inline">\({\theta}^{+}\)</span>和<span class="math inline">\({\theta}^{-}\)</span>。其特征向量 <span class="math inline">\({\theta}^{+}\)</span>和<span class="math inline">\({\theta}^{-}\)</span>描述了u的最大和最小矢量变化的方向, 特征值平方根<span class="math inline">\(\sqrt{\lambda^{+}}\)</span>和<span class="math inline">\(\sqrt{\lambda^{-}}\)</span> 描述了这些变化的大小。 更重要的是，观察到<span class="math inline">\(V(\omega)=\|\boldsymbol{P}(\omega)\|_{2}\)</span>，意味着方向变化V(ω)可以解释为任意点P(ω)到椭圆中心的距离。</p><h3 id="the-structure-tensor-tv-functional">the structure tensor TV functional</h3><p>  为了设计一个正则化器来整合每个图像点的局部图像变化的标量惩罚，我们需要考虑提供函数V (ω)的度量。这些测度也是从结构张量的特征值计算出来的，分以下几种:<br />  Case 1. RMS of <span class="math inline">\(V(\omega):\left((2 \pi)^{-1} \int_{0}^{2 \pi} V^{2}(\omega) \mathrm{d} \omega\right)^{1 / 2}=\sqrt{\lambda^{+}+\lambda^{-}} / \sqrt{2}\)</span><br />  Case 2. Maximum of <span class="math inline">\(V(\omega):\sqrt{\lambda^{+}}\)</span><br />  Case 3. Midrange of <span class="math inline">\(V(\omega):\sqrt{\lambda^{+}+\lambda^{-}} / 2\)</span><br />  对于每个图像点x，定义二维向量:<br /><span class="math display">\[\sqrt{\boldsymbol{\lambda}}=\sqrt{\boldsymbol{\lambda}\left(S_{K} \boldsymbol{u}(\boldsymbol{x})\right)}=\left(\sqrt{\lambda^{+}\left(S_{K} \boldsymbol{u}(\boldsymbol{x})\right)}, \sqrt{\lambda^{-}\left(S_{K} \boldsymbol{u}(\boldsymbol{x})\right)}\right)\]</span></p><p>  上面三种情况对应的范数：<span class="math inline">\(\|\sqrt{\boldsymbol{\lambda}}\|_{2}(\)</span> Case 1<span class="math inline">\(),\|\sqrt{\boldsymbol{\lambda}}\|_{\infty}(\)</span> Case 2<span class="math inline">\(),\|\sqrt{\boldsymbol{\lambda}}\|_{1}(\)</span> Case 3<span class="math inline">\()\)</span>。进一步考虑大于等于1的P范数作为图像变化的度量。这些标准测量图像变化比在TV中使用的梯度幅度更连贯和稳健，因为它们考虑到其附近的变化。同时，由于它们同时依赖于方向变化的最大值和最小值，因此它们包含了更丰富的信息。通过这种方式，它们的响应通常更好地适应图像的几何形状。</p><p>  定义以下全新正则项：<br /><span class="math display">\[\mathrm{STV}_{p}(\boldsymbol{u})=\int_{\mathbb{R}^{2}}\left\|\left(\sqrt{\lambda^{+}}, \sqrt{\lambda^{-}}\right)\right\|_{p} \mathrm{~d} \boldsymbol{x}\]</span>   以上结构张量正则化项是平移和旋转不变的、1阶齐次、凸的。</p><h2 id="discrete-stv">Discrete STV</h2><p>  需要处理离散数据<br />### notation and definitions   对图像使用镜像边界拓展。离散STV形式： <span class="math display">\[\operatorname{STV}_{p}(\boldsymbol{u})=\sum_{n=1}^{N}\left\|\left(\sqrt{\lambda_{n}^{+}}, \sqrt{\lambda_{n}^{-}}\right)\right\|_{p}\]</span></p><h3 id="patch-based-jacobian-operator">patch-based Jacobian operator</h3><p>  正则化依赖于结构张量的特征值。但是算子的非线性和卷积核的存在,使泛函的最小化变得困难。<br />  为解决以上问题，提出基于局部加权面片的图像雅可比算子。这种新的算子，称之为patch-based Jacobian，包含了由平滑核确定的加权移位版本的雅可比。<br />  patch-based Jacobian 定义： <span class="math display">\[\boldsymbol{J}_{K}: \mathbb{R}^{N M} \mapsto \mathcal{X}\]</span>   其中，<span class="math inline">\(\mathcal{X} \triangleq \mathbb{R}^{N \times(L M) \times 2}\)</span> and <span class="math inline">\(L=\left(2 L_{K}+1\right)^{2}\)</span></p><p>  这个定义意味着，如果我们在u的第n个像素上应用patch-based Jacobian，那么结果是一个大小为LM*2的矩阵，用<span class="math inline">\(\left[\boldsymbol{J}_{K} \boldsymbol{u}\right]_{n}\)</span>表示。 <span class="math display">\[\left[\boldsymbol{J}_{K} \boldsymbol{u}\right]_{n}=\left(\left[\tilde{\nabla} \boldsymbol{u}_{1}\right]_{n}, \ldots,\left[\tilde{\nabla} \boldsymbol{u}_{M}\right]_{n}\right)^{T}\]</span>   其中， <span class="math display">\[\left[\tilde{\nabla} \boldsymbol{u}_{m}\right]_{n}=\left(\left[T_{s_{1}, \omega} \circ \nabla \boldsymbol{u}_{m}\right]_{n}, \ldots,\left[T_{s_{L}, \omega} \circ \nabla \boldsymbol{u}_{m}\right]_{n}\right)\]</span>   <span class="math inline">\(\nabla\)</span>是离散梯度，<span class="math inline">\((\cdot)^{T}\)</span>是转置算子，<span class="math inline">\(\circ\)</span>表示算子的组成，移位向量<span class="math inline">\(\boldsymbol{s}_{l}(l=1, \ldots, L)\)</span>是晶格<span class="math inline">\(\mathcal{P}\)</span>的元素，<span class="math inline">\(T_{s_{1}, \omega}\)</span>是加权平移算子，后者考虑了镜像边界条件，定义为： <span class="math display">\[\left[T_{s_{l}, \omega} \circ \nabla \boldsymbol{u}_{m}\right]_{n}=\boldsymbol{\omega}\left[\boldsymbol{s}_{l}\right] \nabla \boldsymbol{u}_{m}\left[\boldsymbol{x}_{n}-\boldsymbol{s}_{l}\right]\]</span></p><p>  定义空间<span class="math inline">\(\mathcal{X}\)</span>的内积： <span class="math display">\[\langle\boldsymbol{X}, \boldsymbol{Y}\rangle_{\mathcal{X}}=\sum_{n=1}^{N} \operatorname{trace}\left(\boldsymbol{Y}_{n}^{T} \boldsymbol{X}_{n}\right)\]</span>   定义空间<span class="math inline">\(\mathcal{X}\)</span>的范数： <span class="math display">\[\|\boldsymbol{X}\|_{\mathcal{X}}=\sqrt{\langle\boldsymbol{X}, \boldsymbol{X}\rangle_{\mathcal{X}}}=\left(\sum_{n=1}^{N}\left\|\boldsymbol{X}_{n}\right\|_{F}^{2}\right)^{\frac{1}{2}}\]</span></p><h3 id="equivalent-formulation-of-the-discrete-stv">equivalent formulation of the discrete STV</h3><p>  在像素位置n处评估的u的离散结构张量可以根据patch-based Jacobian写成: <span class="math display">\[\left[\boldsymbol{S}_{K} \boldsymbol{u}\right]_{n}=\left[\boldsymbol{J}_{K} \boldsymbol{u}\right]_{n}^{T}\left[\boldsymbol{J}_{K} \boldsymbol{u}\right]_{n}\]</span></p><h2 id="discrete-stv-minimization">Discrete STV Minimization</h2><h3 id="proximal-map-of-mathrmstv_p">proximal map of <span class="math inline">\(\mathrm{STV}_{p}\)</span></h3><p>  函数ψ的最近邻映射或Moreau邻近算子表示为: <span class="math display">\[\operatorname{prox}_{\psi}(\mathbf{z})=\underset{\boldsymbol{u}}{\arg \min } \frac{1}{2}\|\boldsymbol{u}-\mathbf{z}\|_{2}^{2}+\psi(\boldsymbol{u})\]</span>   在本文中，<span class="math inline">\(\psi(\boldsymbol{u})=\tau \mathrm{STV}_{p}(\boldsymbol{u})+\iota_{\mathcal{C}}\)</span></p><p>有： <span class="math display">\[\underset{\boldsymbol{u}}{\arg \min } \frac{1}{2}\|\boldsymbol{u}-\mathbf{z}\|_{2}^{2}+\tau \operatorname{STV}_{p}(\boldsymbol{u})+\iota_{\mathcal{C}}(\boldsymbol{u})\]</span></p><h3 id="solving-the-dual-problem">solving the dual problem</h3><p>  作为约束优化问题的解:</p><p><span class="math display">\[\hat{\boldsymbol{\Omega}}=\underset{\boldsymbol{\Omega} \in \mathcal{B}_{\infty, q}}{\arg \max } \frac{1}{2}\left\|\boldsymbol{w}-\Pi_{C}(\boldsymbol{w})\right\|_{2}^{2}+\frac{1}{2}\left(\|\boldsymbol{z}\|_{2}^{2}-\|\boldsymbol{w}\|_{2}^{2}\right)\]</span></p><p>  梯度</p><p><span class="math display">\[\nabla d(\mathbf{\Omega})=\tau \boldsymbol{J}_{K} \Pi_{C}\left(\mathbf{z}-\tau \boldsymbol{J}_{K}^{*} \boldsymbol{\Omega}\right)\]</span></p><div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/04/b9dddd6c69cdbbba.png" width="600"/></div><h3 id="numerical-algorithm">numerical algorithm</h3><p>  调用一个基于梯度的方案来导出对偶问题的解。在这项工作中，对光滑函数采用内斯特罗夫迭代法。该方案显示出比标准梯度上升法高一个数量级的收敛速度。由于我们的双目标是光滑的，具有李普希茨连续梯度，使用了一个常数步长，等Lipschitz常数的倒数。 <span class="math display">\[L(d) \leq 8 \sqrt{2} \tau^{2}\]</span></p><h3 id="solution-of-general-inverse-problems">solution of general inverse problems</h3><p>  这个基本工具也可以用来解决更一般的反问题。</p><h2 id="application-and-experiments">Application and Experiments</h2><h3 id="experimental-setting">experimental setting</h3><ul><li><p>为验证所提出的STV正则化方法的有效性，我们在几个逆成像问题上将它们与其他相关方法进行了比较。特别考虑了图像恢复(去噪和去模糊)、图像放大和从有限数量的傅立叶测量进行图像重建的问题。</p></li><li><p>在所有情况下，图像强度被归一化，使得它们位于范围[0，1]内。</p></li><li><p>比较项：考虑TGV的二阶扩展 <span class="math display">\[\operatorname{TGV}_{\alpha}^{2}(\boldsymbol{u})=\min _{\boldsymbol{v} \in \mathbb{R}^{N \times 2}}\|\nabla \boldsymbol{u}-\boldsymbol{v}\|_{2}+\alpha\|\mathcal{E} \boldsymbol{v}\|_{F}\]</span></p></li><li><p>算子<span class="math inline">\(\mathcal{E}\)</span>表示对称梯度，<span class="math inline">\(\mathcal{E} \boldsymbol{v}=0.5\left(\nabla \boldsymbol{v}+\nabla \boldsymbol{v}^{T}\right)\)</span> ,<span class="math inline">\(\alpha\)</span>是用于平衡一阶项和二阶项的权重值，在这里取2。</p></li><li><p>对于结构张量定义中的卷积核K，定义其为标准差<span class="math inline">\(\sigma=0.5\)</span>高斯分布的像素块，窗口大小3*3。</p></li><li><p>四种噪声水平下不同正则化方法的图像去噪比较。性能是以相对于噪声输入的平均信噪比改善(分贝)来衡量的。</p></li></ul><div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/04/ff3f005299007f17.png" width="600"/></div><h3 id="image-restoration">image restoration</h3><ul><li>对于图像去噪问题，考虑独立同分布高斯噪声和分别对应于标准偏差<span class="math inline">\(\sigma_{w}=\{0.1,0.15,0.2,0.25\}\)</span>的四种不同噪声水平。</li><li>在灰度实验中，TV是所有噪声水平中表现最差的方法。TGV比TV有所改进，这反映了它更倾向于分段线性而不是分段常数解，从而避免了TV的阶梯伪影。我们两个版本的正则化器，STV1和STV1，系统地优于TV和TGV2。</li></ul><h3 id="image-magnification">image magnification</h3><p>  图像放大是一个与图像去模糊密切相关的反问题。 再次验证了STV 1不仅提高了信噪比，还导致了增强视觉质量的重建。</p><div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/04/541b752a2b586b34.png" width="600"/></div><center>三个峰值信噪比和四个噪声水平下不同正则化方法的图像去模糊比较。性能是以相对于降级输入的平均PSNR改善(单位为分贝)来衡量的。最上面一行的条形代表灰度结果，而最下面一行的条形代表彩色结果</center><div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/04/6ad3d62fda3f5255.png" width="600"/></div><center>图像去模糊示例:输入和最佳结果的特写</center><div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/04/9f2198c1e69053f0.png" width="600"/></div><center>两种变焦因子下不同正则化因子的图像放大比较</center><div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/04/c387bba20c118634.png" width="600"/></div><center>图像放大示例:输入和最佳结果的特写镜头。输入通过简单的零阶保持放大。顶行:缩放因子d = 5时输入的灰度放大倍数。底行:缩放因子d = 5的输入的颜色放大倍数</center><h3 id="reconstruction-from-sparse-fourier-measurements">reconstruction from sparse Fourier measurements</h3><p>  考虑从有限数量的傅立叶测量中重建图像的问题。</p><h3 id="implementation-details-and-computational-runtimes">implementation details and computational runtimes</h3><p>  由于卷积核的存在，所提出的Stv2和Stv1函数在当前实现中大约慢3.5-4倍。</p><h2 id="conclusions">Conclusions</h2><ul><li>引入了一个新的凸能量泛函族，它扩展和推广了全变分半范数及其向量扩展。</li><li>我们的泛函的关键特征是，它们通过惩罚结构张量在这一点上的特征值，结合了图像域中每个点附近的信息。因此，它们提供了更丰富、更稳健的图像变化度量，从而提高了重建性能。</li><li>在几个逆成像问题上与竞争方法进行了比较,验证提出的正则化可以代替TV或其矢量扩展。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 论文阅读 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CV </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nvidia TX2 &amp; NX &amp; AGX刷机</title>
      <link href="/2021/04/01/shuaji/"/>
      <url>/2021/04/01/shuaji/</url>
      
        <content type="html"><![CDATA[<center>英伟达的哪款AI板子我没用过？NAIVE!</center><span id="more"></span><p> </p><h2 id="jetson-tx2">Jetson TX2</h2><ul><li>网上刷机教程很多，在此仅列出以下关键点和踩坑点</li><li>首先确保有良好的网络环境，出现问题最多的便在网络上！有网线就不要连Wifi。网络实在不行就换其他网络，比如用手机开热点</li><li>最有参考价值的是这篇<a href="https://www.it610.com/article/1293370881787109376.htm">TX2 刷Jetpack4.4</a></li><li>新版本Jetpack均通过<a href="https://developer.nvidia.com/nvidia-sdk-manager">SDK Manager</a>刷入</li><li>刷机前需要准备的硬件与环境: 1.装有Ubuntu操作系统（16.04/18.04/20.04均可）的主机(尽量避免虚拟机)，硬盘空间至少60GB以上，不然使用SDK Manager安装时会提示空间不足; 2.准备好USB hub(TX2板子上仅有一个USB A 接口，需要hub连接键鼠等)</li><li>在主机下载安装好SDK Manager后运行软件，第一次需要登录英伟达账号，选择对应板子型号，按照step 01——&gt;step 02——&gt;step 03顺序操作。可以先不连板子，先下载安装包。不用安装主机(host)的相关部分</li><li>SDK Manager登录账号容易失败，多试几次</li><li>主机在下载过Jetpack后，下一次再刷机时，可以不用登录账号，直接在登录界面点最右离线安装(安装包已经下好了，在主机里)</li><li>不要在TX2刷CUDA时主机终端还在占用apt命令</li><li>主机在整个刷机过程中不要息屏</li><li>不要轻易换源，我所有的刷机几乎都没换过源</li><li>SDK Manager刷机所有选项均选手动，不要自动</li><li>板子可以不用和主机连接同一网络(网上很多教程都错了)；板子甚至不用联网，直接用数据线连接主机更靠谱，此时ip一般为192.168.55.1</li><li>给板子刷机时，板子会有重启过程，直接物理重启即可</li></ul><p> </p><h2 id="jetson-xavier-nx">Jetson Xavier NX</h2><ul><li>NX 刷机简单许多，只要一个TF卡和读卡器、Windows PC</li><li>主要参考教程<a href="https://blog.csdn.net/u014531804/article/details/108684128">NX刷机</a>第一种方法</li></ul><p> </p><h2 id="jetson-agx-xavier">Jetson AGX Xavier</h2><ul><li>刷机大致过程和TX2相似</li><li>注意button位置与其对应功能</li><li>Type C 接口两边都有，刷机时数据线只能连接近4个button那端</li></ul><p> </p><h2 id="其他注意事项">其他注意事项</h2><ul><li>刷机完毕，看有无CUDA <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvcc -V</span><br></pre></td></tr></table></figure> 如果没有 <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export LD_LIBRARY_PATH=/usr/local/cuda/lib</span><br><span class="line">export PATH=$PATH:/usr/local/cuda/<span class="built_in">bin</span></span><br></pre></td></tr></table></figure> 再次查看就有了</li><li>若需要卸载CUDA <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get --purge remove <span class="string">&quot;*cublas*&quot;</span> <span class="string">&quot;*cufft*&quot;</span> <span class="string">&quot;*curand*&quot;</span> \</span><br><span class="line"> <span class="string">&quot;*cusolver*&quot;</span> <span class="string">&quot;*cusparse*&quot;</span> <span class="string">&quot;*npp*&quot;</span> <span class="string">&quot;*nvjpeg*&quot;</span> <span class="string">&quot;cuda*&quot;</span> <span class="string">&quot;nsight*&quot;</span></span><br></pre></td></tr></table></figure> 自动卸载残余 <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get autoremove</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> 人生的经验 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网页鼠标点击特效</title>
      <link href="/2021/04/01/clickeffect/"/>
      <url>/2021/04/01/clickeffect/</url>
      
        <content type="html"><![CDATA[<center>心形和气泡状鼠标点击特效</center><p> </p><span id="more"></span><p>NexT版本: 8.2.2</p><p> </p><h2 id="爱心特效">爱心特效</h2><h3 id="新建js脚本文件">新建js脚本文件</h3><p>  在/themes/next/source/js/src（新版本next中没有src文件夹，先建一个src文件夹）下新建文件love.js，接着把下面的代码粘贴到 love.js中：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">!function(e, t, a) &#123;</span><br><span class="line">    function r() &#123;</span><br><span class="line">        for (var e = 0; e &lt; s.length; e++) s[e].alpha &lt;= 0 ? (t.body.removeChild(s[e].el), s.splice(e, 1)) : (s[e].y--, s[e].scale += .004, s[e].alpha -= .013, s[e].el.style.cssText = &quot;left:&quot; + s[e].x + &quot;px;top:&quot; + s[e].y + &quot;px;opacity:&quot; + s[e].alpha + &quot;;transform:scale(&quot; + s[e].scale + &quot;,&quot; + s[e].scale + &quot;) rotate(45deg);background:&quot; + s[e].color + &quot;;z-index:99999&quot;);</span><br><span class="line">        requestAnimationFrame(r)</span><br><span class="line">    &#125;</span><br><span class="line">    function n() &#123;</span><br><span class="line">        var t = <span class="string">&quot;function&quot;</span> == typeof e.onclick &amp;&amp; e.onclick;</span><br><span class="line">        e.onclick = function(e) &#123;</span><br><span class="line">            t &amp;&amp; t(),</span><br><span class="line">            o(e)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    function o(e) &#123;</span><br><span class="line">        var a = t.createElement(<span class="string">&quot;div&quot;</span>);</span><br><span class="line">        a.className = <span class="string">&quot;heart&quot;</span>,</span><br><span class="line">        s.push(&#123;</span><br><span class="line">            el: a,</span><br><span class="line">            x: e.clientX - <span class="number">5</span>,</span><br><span class="line">            y: e.clientY - <span class="number">5</span>,</span><br><span class="line">            scale: <span class="number">1</span>,</span><br><span class="line">            alpha: <span class="number">1</span>,</span><br><span class="line">            color: c()</span><br><span class="line">        &#125;),</span><br><span class="line">        t.body.appendChild(a)</span><br><span class="line">    &#125;</span><br><span class="line">    function i(e) &#123;</span><br><span class="line">        var a = t.createElement(<span class="string">&quot;style&quot;</span>);</span><br><span class="line">        a.<span class="built_in">type</span> = <span class="string">&quot;text/css&quot;</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            a.appendChild(t.createTextNode(e))</span><br><span class="line">        &#125; catch(t) &#123;</span><br><span class="line">            a.styleSheet.cssText = e</span><br><span class="line">        &#125;</span><br><span class="line">        t.getElementsByTagName(<span class="string">&quot;head&quot;</span>)[<span class="number">0</span>].appendChild(a)</span><br><span class="line">    &#125;</span><br><span class="line">    function c() &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;rgb(&quot;</span> + ~~ (<span class="number">255</span> * Math.random()) + <span class="string">&quot;,&quot;</span> + ~~ (<span class="number">255</span> * Math.random()) + <span class="string">&quot;,&quot;</span> + ~~ (<span class="number">255</span> * Math.random()) + <span class="string">&quot;)&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">    var s = [];</span><br><span class="line">    e.requestAnimationFrame = e.requestAnimationFrame || e.webkitRequestAnimationFrame || e.mozRequestAnimationFrame || e.oRequestAnimationFrame || e.msRequestAnimationFrame ||</span><br><span class="line">    function(e) &#123;</span><br><span class="line">        setTimeout(e, <span class="number">1e3</span> / <span class="number">60</span>)</span><br><span class="line">    &#125;,</span><br><span class="line">    i(<span class="string">&quot;.heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: &#x27;&#x27;;width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;&quot;</span>),</span><br><span class="line">    n(),</span><br><span class="line">    r()</span><br><span class="line">&#125; (window, document);</span><br></pre></td></tr></table></figure><p> </p><h3 id="配置文件修改">配置文件修改</h3><p>  在/themes/next/layout_layout.njk文件末尾添加： <figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/love.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure></p><p> </p><h2 id="气泡特效">气泡特效</h2><h3 id="新建js脚本文件-1">新建js脚本文件</h3><p>  在/themes/next/source/js/src（新版本next中没有src文件夹，先建一个src文件夹）下新建文件boom.js，接着把下面的代码拷贝粘贴到boom.js 文件中：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">clickEffect</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> balls = [];</span><br><span class="line">  <span class="keyword">let</span> longPressed = <span class="literal">false</span>;</span><br><span class="line">  <span class="keyword">let</span> longPress;</span><br><span class="line">  <span class="keyword">let</span> multiplier = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">let</span> width, height;</span><br><span class="line">  <span class="keyword">let</span> origin;</span><br><span class="line">  <span class="keyword">let</span> normal;</span><br><span class="line">  <span class="keyword">let</span> ctx;</span><br><span class="line">  <span class="keyword">const</span> colours = [<span class="string">&quot;#F73859&quot;</span>, <span class="string">&quot;#14FFEC&quot;</span>, <span class="string">&quot;#00E0FF&quot;</span>, <span class="string">&quot;#FF99FE&quot;</span>, <span class="string">&quot;#FAF15D&quot;</span>];</span><br><span class="line">  <span class="keyword">const</span> canvas = <span class="built_in">document</span>.createElement(<span class="string">&quot;canvas&quot;</span>);</span><br><span class="line">  <span class="built_in">document</span>.body.appendChild(canvas);</span><br><span class="line">  canvas.setAttribute(<span class="string">&quot;style&quot;</span>, <span class="string">&quot;width: 10%; height: 10%; top: 0; left: 0; z-index: 99999; position: fixed; pointer-events: none;&quot;</span>);</span><br><span class="line">  <span class="keyword">const</span> pointer = <span class="built_in">document</span>.createElement(<span class="string">&quot;span&quot;</span>);</span><br><span class="line">  pointer.classList.add(<span class="string">&quot;pointer&quot;</span>);</span><br><span class="line">  <span class="built_in">document</span>.body.appendChild(pointer);</span><br><span class="line"> </span><br><span class="line">  <span class="keyword">if</span> (canvas.getContext &amp;&amp; <span class="built_in">window</span>.addEventListener) &#123;</span><br><span class="line">    ctx = canvas.getContext(<span class="string">&quot;2d&quot;</span>);</span><br><span class="line">    updateSize();</span><br><span class="line">    <span class="built_in">window</span>.addEventListener(<span class="string">&#x27;resize&#x27;</span>, updateSize, <span class="literal">false</span>);</span><br><span class="line">    loop();</span><br><span class="line">    <span class="built_in">window</span>.addEventListener(<span class="string">&quot;mousedown&quot;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">      pushBalls(randBetween(<span class="number">5</span>, <span class="number">10</span>), e.clientX, e.clientY);</span><br><span class="line">      <span class="built_in">document</span>.body.classList.add(<span class="string">&quot;is-pressed&quot;</span>);</span><br><span class="line">      longPress = <span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">document</span>.body.classList.add(<span class="string">&quot;is-longpress&quot;</span>);</span><br><span class="line">        longPressed = <span class="literal">true</span>;</span><br><span class="line">      &#125;, <span class="number">500</span>);</span><br><span class="line">    &#125;, <span class="literal">false</span>);</span><br><span class="line">    <span class="built_in">window</span>.addEventListener(<span class="string">&quot;mouseup&quot;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">      <span class="built_in">clearInterval</span>(longPress);</span><br><span class="line">      <span class="keyword">if</span> (longPressed == <span class="literal">true</span>) &#123;</span><br><span class="line">        <span class="built_in">document</span>.body.classList.remove(<span class="string">&quot;is-longpress&quot;</span>);</span><br><span class="line">        pushBalls(randBetween(<span class="number">20</span> + <span class="built_in">Math</span>.ceil(multiplier), <span class="number">40</span> + <span class="built_in">Math</span>.ceil(multiplier)), e.clientX, e.clientY);</span><br><span class="line">        longPressed = <span class="literal">false</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="built_in">document</span>.body.classList.remove(<span class="string">&quot;is-pressed&quot;</span>);</span><br><span class="line">    &#125;, <span class="literal">false</span>);</span><br><span class="line">    <span class="built_in">window</span>.addEventListener(<span class="string">&quot;mousemove&quot;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">let</span> x = e.clientX;</span><br><span class="line">      <span class="keyword">let</span> y = e.clientY;</span><br><span class="line">      pointer.style.top = y + <span class="string">&quot;px&quot;</span>;</span><br><span class="line">      pointer.style.left = x + <span class="string">&quot;px&quot;</span>;</span><br><span class="line">    &#125;, <span class="literal">false</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;canvas or addEventListener is unsupported!&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">updateSize</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    canvas.width = <span class="built_in">window</span>.innerWidth * <span class="number">2</span>;</span><br><span class="line">    canvas.height = <span class="built_in">window</span>.innerHeight * <span class="number">2</span>;</span><br><span class="line">    canvas.style.width = <span class="built_in">window</span>.innerWidth + <span class="string">&#x27;px&#x27;</span>;</span><br><span class="line">    canvas.style.height = <span class="built_in">window</span>.innerHeight + <span class="string">&#x27;px&#x27;</span>;</span><br><span class="line">    ctx.scale(<span class="number">2</span>, <span class="number">2</span>);</span><br><span class="line">    width = (canvas.width = <span class="built_in">window</span>.innerWidth);</span><br><span class="line">    height = (canvas.height = <span class="built_in">window</span>.innerHeight);</span><br><span class="line">    origin = &#123;</span><br><span class="line">      x: width / <span class="number">2</span>,</span><br><span class="line">      y: height / <span class="number">2</span></span><br><span class="line">    &#125;;</span><br><span class="line">    normal = &#123;</span><br><span class="line">      x: width / <span class="number">2</span>,</span><br><span class="line">      y: height / <span class="number">2</span></span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//设置球球大小</span></span><br><span class="line">  <span class="class"><span class="keyword">class</span> <span class="title">Ball</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="title">constructor</span>(<span class="params">x = origin.x, y = origin.y</span>)</span> &#123;</span><br><span class="line">      <span class="built_in">this</span>.x = x;</span><br><span class="line">      <span class="built_in">this</span>.y = y;</span><br><span class="line">      <span class="built_in">this</span>.angle = <span class="built_in">Math</span>.PI * <span class="number">2</span> * <span class="built_in">Math</span>.random();</span><br><span class="line">      <span class="keyword">if</span> (longPressed == <span class="literal">true</span>) &#123;</span><br><span class="line">        <span class="built_in">this</span>.multiplier = randBetween(<span class="number">9</span> + multiplier, <span class="number">10</span> + multiplier);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.multiplier = randBetween(<span class="number">5</span>, <span class="number">10</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="built_in">this</span>.vx = (<span class="built_in">this</span>.multiplier + <span class="built_in">Math</span>.random() * <span class="number">0.5</span>) * <span class="built_in">Math</span>.cos(<span class="built_in">this</span>.angle);</span><br><span class="line">      <span class="built_in">this</span>.vy = (<span class="built_in">this</span>.multiplier + <span class="built_in">Math</span>.random() * <span class="number">0.5</span>) * <span class="built_in">Math</span>.sin(<span class="built_in">this</span>.angle);</span><br><span class="line">      <span class="built_in">this</span>.r = randBetween(<span class="number">7</span>, <span class="number">9</span>) + <span class="number">3</span> * <span class="built_in">Math</span>.random();</span><br><span class="line">      <span class="built_in">this</span>.color = colours[<span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * colours.length)];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">update</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">      <span class="built_in">this</span>.x += <span class="built_in">this</span>.vx - normal.x;</span><br><span class="line">      <span class="built_in">this</span>.y += <span class="built_in">this</span>.vy - normal.y;</span><br><span class="line">      normal.x = -<span class="number">2</span> / <span class="built_in">window</span>.innerWidth * <span class="built_in">Math</span>.sin(<span class="built_in">this</span>.angle);</span><br><span class="line">      normal.y = -<span class="number">2</span> / <span class="built_in">window</span>.innerHeight * <span class="built_in">Math</span>.cos(<span class="built_in">this</span>.angle);</span><br><span class="line">      <span class="built_in">this</span>.r -= <span class="number">0.3</span>;</span><br><span class="line">      <span class="built_in">this</span>.vx *= <span class="number">0.9</span>;</span><br><span class="line">      <span class="built_in">this</span>.vy *= <span class="number">0.9</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"> </span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">pushBalls</span>(<span class="params">count = <span class="number">1</span>, x = origin.x, y = origin.y</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; count; i++) &#123;</span><br><span class="line">      balls.push(<span class="keyword">new</span> Ball(x, y));</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"> </span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">randBetween</span>(<span class="params">min, max</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * max) + min;</span><br><span class="line">  &#125;</span><br><span class="line"> </span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">loop</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    ctx.fillStyle = <span class="string">&quot;rgba(255, 255, 255, 0)&quot;</span>;</span><br><span class="line">    ctx.clearRect(<span class="number">0</span>, <span class="number">0</span>, canvas.width, canvas.height);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; balls.length; i++) &#123;</span><br><span class="line">      <span class="keyword">let</span> b = balls[i];</span><br><span class="line">      <span class="keyword">if</span> (b.r &lt; <span class="number">0</span>) <span class="keyword">continue</span>;</span><br><span class="line">      ctx.fillStyle = b.color;</span><br><span class="line">      ctx.beginPath();</span><br><span class="line">      ctx.arc(b.x, b.y, b.r, <span class="number">0</span>, <span class="built_in">Math</span>.PI * <span class="number">2</span>, <span class="literal">false</span>);</span><br><span class="line">      ctx.fill();</span><br><span class="line">      b.update();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (longPressed == <span class="literal">true</span>) &#123;</span><br><span class="line">      multiplier += <span class="number">0.2</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (!longPressed &amp;&amp; multiplier &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">      multiplier -= <span class="number">0.4</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    removeBall();</span><br><span class="line">    requestAnimationFrame(loop);</span><br><span class="line">  &#125;</span><br><span class="line"> </span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">removeBall</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; balls.length; i++) &#123;</span><br><span class="line">      <span class="keyword">let</span> b = balls[i];</span><br><span class="line">      <span class="keyword">if</span> (b.x + b.r &lt; <span class="number">0</span> || b.x - b.r &gt; width || b.y + b.r &lt; <span class="number">0</span> || b.y - b.r &gt; height || b.r &lt; <span class="number">0</span>) &#123;</span><br><span class="line">        balls.splice(i, <span class="number">1</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">clickEffect();<span class="comment">//调用特效函数</span></span><br></pre></td></tr></table></figure><p> </p><h3 id="配置文件修改-1">配置文件修改</h3><p>  在/themes/next/layout_layout.njk文件末尾添加：<br /><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/love.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 网站建设 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 好玩的 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kalman Filter (python)</title>
      <link href="/2021/04/01/KF/"/>
      <url>/2021/04/01/KF/</url>
      
        <content type="html"><![CDATA[<center>对卡尔曼滤波算法的一些理解和思考，以python形式呈现</center><span id="more"></span><p> </p><p>// 取位置初值为0，速度初值为10m/s<br />// T为采样周期，q为过程噪声方差，r为量测噪声方差<br />// N为蒙特卡洛模拟次数<br />// 初始状态协方差矩阵 <span class="math display">\[P=\left[\begin{array}{cc}R &amp; R / T \\ R / T &amp; 2 R / T^{2}\end{array}\right]\]</span></p><p>源代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line">T = <span class="number">1</span></span><br><span class="line">q = <span class="number">1</span></span><br><span class="line">r = <span class="number">5</span></span><br><span class="line">R = r</span><br><span class="line">Q = q</span><br><span class="line">N = <span class="number">50</span>      <span class="comment"># Monte Carlo simulation times</span></span><br><span class="line"> </span><br><span class="line">M_measPos = []</span><br><span class="line">M_estPos = []</span><br><span class="line">M_estVel = []</span><br><span class="line">M_measTime = []</span><br><span class="line">M_estDifPos = []</span><br><span class="line">M_estDifVel = []</span><br><span class="line">x_rme = []</span><br><span class="line">x_rmse = []</span><br><span class="line">x_rrmse = []</span><br><span class="line">v_rme = []</span><br><span class="line">v_rmse = []</span><br><span class="line">v_rrmse = []</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(N):</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getMeasurement</span>(<span class="params">updateNumber</span>):</span></span><br><span class="line">        <span class="keyword">if</span> updateNumber == <span class="number">1</span>:</span><br><span class="line">          getMeasurement.currentPosition = <span class="number">0</span> <span class="comment"># initial position</span></span><br><span class="line">          getMeasurement.currentVelocity = <span class="number">10</span> <span class="comment"># m/s  initial velocity</span></span><br><span class="line"></span><br><span class="line">        w = np.random.normal(loc=<span class="number">0</span>,scale=np.sqrt(r),size=<span class="number">1</span>)</span><br><span class="line">        v = np.random.normal(loc=<span class="number">0</span>,scale=np.sqrt(q),size=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">        x = getMeasurement.currentPosition + getMeasurement.currentVelocity*T + v</span><br><span class="line">        getMeasurement.currentPosition = x - v</span><br><span class="line">        getMeasurement.currentVelocity = <span class="number">10</span> + w</span><br><span class="line">        <span class="keyword">return</span> [x, getMeasurement.currentPosition, getMeasurement.currentVelocity] </span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">filter</span>(<span class="params">x, updateNumber</span>):</span></span><br><span class="line">        <span class="comment"># Initialize State</span></span><br><span class="line">        <span class="keyword">if</span> updateNumber == <span class="number">1</span>:</span><br><span class="line">            <span class="built_in">filter</span>.X = np.array([[<span class="number">0</span>],</span><br><span class="line">                                [<span class="number">10</span>]])</span><br><span class="line">            <span class="built_in">filter</span>.P = np.array([[R, R/T],</span><br><span class="line">                                [R/T, <span class="number">2</span>*R/(T**<span class="number">2</span>)]])</span><br><span class="line">            <span class="built_in">filter</span>.F = np.array([[<span class="number">1</span>, T],</span><br><span class="line">                                [<span class="number">0</span>, <span class="number">1</span>]])</span><br><span class="line">            <span class="built_in">filter</span>.H = np.array([[<span class="number">1</span>, <span class="number">0</span>]])</span><br><span class="line">            <span class="built_in">filter</span>.HT = np.array([[<span class="number">1</span>],</span><br><span class="line">                                 [<span class="number">0</span>]])</span><br><span class="line">            <span class="built_in">filter</span>.Gamma = np.array([[T**<span class="number">2</span>/<span class="number">2</span>],</span><br><span class="line">                                    [T]])  </span><br><span class="line">            <span class="built_in">filter</span>.R = R</span><br><span class="line">            <span class="built_in">filter</span>.Q = Q</span><br><span class="line">           </span><br><span class="line">        <span class="comment"># Predict State Forward</span></span><br><span class="line">        X_prime = <span class="built_in">filter</span>.F.dot(<span class="built_in">filter</span>.X)</span><br><span class="line">        <span class="comment"># Predict Covariance Forward</span></span><br><span class="line">        P_prime = <span class="built_in">filter</span>.F.dot(<span class="built_in">filter</span>.P).dot(<span class="built_in">filter</span>.F.T) + <span class="built_in">filter</span>.Gamma.dot(<span class="built_in">filter</span>.Q).dot(<span class="built_in">filter</span>.Gamma.T)</span><br><span class="line">        <span class="comment"># Compute Kalman Gain</span></span><br><span class="line">        S = <span class="built_in">filter</span>.H.dot(P_prime).dot(<span class="built_in">filter</span>.HT) + <span class="built_in">filter</span>.R</span><br><span class="line">        K = P_prime.dot(<span class="built_in">filter</span>.HT)*(<span class="number">1</span>/S)</span><br><span class="line">        <span class="comment"># Estimate State</span></span><br><span class="line">        residual = x - <span class="built_in">filter</span>.H.dot(X_prime)</span><br><span class="line">        <span class="built_in">filter</span>.X = X_prime + K*residual</span><br><span class="line">        <span class="comment"># Estimate Covariance</span></span><br><span class="line">        <span class="built_in">filter</span>.P = P_prime - K.dot(<span class="built_in">filter</span>.H).dot(P_prime)</span><br><span class="line">        <span class="keyword">return</span> [<span class="built_in">filter</span>.X[<span class="number">0</span>], <span class="built_in">filter</span>.X[<span class="number">1</span>], <span class="built_in">filter</span>.P]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">testFilter</span>():</span></span><br><span class="line">        t = np.linspace(<span class="number">0</span>, <span class="number">1</span>, num=<span class="number">100</span>)</span><br><span class="line">        numOfMeasurements = <span class="built_in">len</span>(t)</span><br><span class="line"></span><br><span class="line">        measTime = []</span><br><span class="line">        measPos = []</span><br><span class="line">        measDifPos = []</span><br><span class="line">        estDifPos = []</span><br><span class="line">        estDifVel = []</span><br><span class="line">        estPos = []</span><br><span class="line">        estVel = []</span><br><span class="line">        x_rme = []</span><br><span class="line">        x_rmse = []</span><br><span class="line">        x_rrmse = []</span><br><span class="line">        v_rme = []</span><br><span class="line">        v_rmse = []</span><br><span class="line">        v_rrmse = []</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,numOfMeasurements):</span><br><span class="line">            x = getMeasurement(k)</span><br><span class="line">            <span class="comment"># Call Filter and return new State</span></span><br><span class="line">            f = <span class="built_in">filter</span>(x[<span class="number">0</span>], k)</span><br><span class="line">            <span class="comment"># Save off that state so that it could be plotted</span></span><br><span class="line">            measTime.append(k)</span><br><span class="line">            measPos.append(x[<span class="number">0</span>])</span><br><span class="line">            measDifPos.append(x[<span class="number">0</span>]-x[<span class="number">1</span>])</span><br><span class="line">            estDifPos.append(f[<span class="number">0</span>]-x[<span class="number">1</span>])</span><br><span class="line">            x_rme.append(np.<span class="built_in">abs</span>((f[<span class="number">0</span>]-x[<span class="number">1</span>])/x[<span class="number">1</span>]))</span><br><span class="line">            x_rmse.append((f[<span class="number">0</span>]-x[<span class="number">1</span>])**<span class="number">2</span>)</span><br><span class="line">            x_rrmse.append(((f[<span class="number">0</span>]-x[<span class="number">1</span>])/x[<span class="number">1</span>])**<span class="number">2</span>)</span><br><span class="line">            estDifVel.append(f[<span class="number">1</span>]-x[<span class="number">2</span>])</span><br><span class="line">            v_rme.append(np.<span class="built_in">abs</span>((f[<span class="number">1</span>]-x[<span class="number">2</span>])/x[<span class="number">2</span>]))</span><br><span class="line">            v_rmse.append((f[<span class="number">1</span>]-x[<span class="number">2</span>])**<span class="number">2</span>)</span><br><span class="line">            v_rrmse.append(((f[<span class="number">1</span>]-x[<span class="number">2</span>])/x[<span class="number">2</span>])**<span class="number">2</span>)</span><br><span class="line">            estPos.append(f[<span class="number">0</span>])</span><br><span class="line">            estVel.append(f[<span class="number">1</span>])</span><br><span class="line">            posVar = f[<span class="number">2</span>]</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> [measTime, measPos, estPos, estVel, estDifPos, estDifVel, </span><br><span class="line">               x_rme, v_rme, x_rmse, v_rmse, x_rrmse, v_rrmse]</span><br><span class="line"></span><br><span class="line">    t = testFilter()</span><br><span class="line"></span><br><span class="line">    M_measTime.append(t[<span class="number">0</span>])</span><br><span class="line">    M_measPos.append(t[<span class="number">1</span>])  </span><br><span class="line">    M_estPos.append(t[<span class="number">2</span>])</span><br><span class="line">    M_estVel.append(t[<span class="number">3</span>])</span><br><span class="line">    M_estDifPos.append(np.<span class="built_in">abs</span>(t[<span class="number">4</span>]))</span><br><span class="line">    M_estDifVel.append(np.<span class="built_in">abs</span>(t[<span class="number">5</span>]))</span><br><span class="line">    x_rme.append(t[<span class="number">6</span>])</span><br><span class="line">    v_rme.append(t[<span class="number">7</span>])</span><br><span class="line">    x_rmse.append(t[<span class="number">8</span>])</span><br><span class="line">    v_rmse.append(t[<span class="number">9</span>])</span><br><span class="line">    x_rrmse.append(t[<span class="number">10</span>])</span><br><span class="line">    v_rrmse.append(t[<span class="number">11</span>])</span><br><span class="line"></span><br><span class="line">x_ME = np.mean(M_estDifPos, axis=<span class="number">0</span>)             <span class="comment"># mean error of position</span></span><br><span class="line">print(np.mean(x_ME))</span><br><span class="line">x_RME = np.mean(x_rme, axis=<span class="number">0</span>)                  <span class="comment"># relative mean error of position</span></span><br><span class="line">print(np.mean(x_RME))</span><br><span class="line">x_RMSE = np.sqrt(np.mean(x_rmse, axis=<span class="number">0</span>))       <span class="comment"># root mean square error of position</span></span><br><span class="line">print(np.mean(x_RMSE))</span><br><span class="line">x_RRMSE = np.sqrt(np.mean(x_rrmse, axis=<span class="number">0</span>))     <span class="comment"># relative root mean square error of position</span></span><br><span class="line">print(np.mean(x_RRMSE))</span><br><span class="line"></span><br><span class="line">v_ME = np.mean(M_estDifVel, axis=<span class="number">0</span>)             <span class="comment"># mean error of velocity</span></span><br><span class="line">print(np.mean(v_ME))</span><br><span class="line">v_RME = np.mean(v_rme, axis=<span class="number">0</span>)                  <span class="comment"># relative mean error of velocity</span></span><br><span class="line">print(np.mean(v_RME))</span><br><span class="line">v_RMSE = np.sqrt(np.mean(v_rmse, axis=<span class="number">0</span>))       <span class="comment"># root mean square error of velocity</span></span><br><span class="line">print(np.mean(v_RMSE))</span><br><span class="line">v_RRMSE = np.sqrt(np.mean(v_rrmse, axis=<span class="number">0</span>))     <span class="comment"># relative root mean square error of velocity</span></span><br><span class="line">print(np.mean(v_RRMSE))</span><br><span class="line"></span><br><span class="line"><span class="comment"># ##################### plot ######################</span></span><br><span class="line"><span class="comment"># ###### one simulation results #####</span></span><br><span class="line"><span class="comment"># plot1 = plt.figure(1)</span></span><br><span class="line"><span class="comment"># plt.plot(t[0], t[2])</span></span><br><span class="line"><span class="comment"># plt.ylabel(&#x27;Position&#x27;)</span></span><br><span class="line"><span class="comment"># plt.xlabel(&#x27;Time&#x27;)</span></span><br><span class="line"><span class="comment"># plt.title(&#x27;Position Estimate On one Measurement Update \n&#x27;, fontweight=&quot;bold&quot;)</span></span><br><span class="line"><span class="comment"># plt.legend([&#x27;Estimate Position&#x27;])</span></span><br><span class="line"><span class="comment"># plt.grid(True)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># plot2 = plt.figure(2)</span></span><br><span class="line"><span class="comment"># plt.plot(t[0], t[3])</span></span><br><span class="line"><span class="comment"># plt.ylabel(&#x27;Velocity (meters/seconds)&#x27;)</span></span><br><span class="line"><span class="comment"># plt.xlabel(&#x27;Update Number&#x27;)</span></span><br><span class="line"><span class="comment"># plt.title(&#x27;Velocity Estimate On one Measurement Update \n&#x27;, fontweight=&quot;bold&quot;)</span></span><br><span class="line"><span class="comment"># plt.legend([&#x27;Estimate Velocity&#x27;])</span></span><br><span class="line"><span class="comment"># plt.grid(True)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ###### error analysis with Monte Carlo simulation #####</span></span><br><span class="line"><span class="comment"># plot3 = plt.figure(3)</span></span><br><span class="line"><span class="comment"># plt.plot(t[0], x_ME)</span></span><br><span class="line"><span class="comment"># plt.title(&#x27;Position Mean Errors \n&#x27;, fontweight=&quot;bold&quot;)</span></span><br><span class="line"><span class="comment"># plt.ylabel(&#x27;ME (meters)&#x27;)</span></span><br><span class="line"><span class="comment"># plt.xlabel(&#x27;Update Number&#x27;)</span></span><br><span class="line"><span class="comment"># plt.grid(True)</span></span><br><span class="line"><span class="comment"># plt.xlim([0, 100])</span></span><br><span class="line"><span class="comment"># plt.show()</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># plot4 = plt.figure(4)</span></span><br><span class="line"><span class="comment"># plt.plot(t[0], x_RME)</span></span><br><span class="line"><span class="comment"># plt.title(&#x27;Position Relative Mean Errors \n&#x27;, fontweight=&quot;bold&quot;)</span></span><br><span class="line"><span class="comment"># plt.ylabel(&#x27;RME&#x27;)</span></span><br><span class="line"><span class="comment"># plt.xlabel(&#x27;Update Number&#x27;)</span></span><br><span class="line"><span class="comment"># plt.grid(True)</span></span><br><span class="line"><span class="comment"># plt.xlim([0, 100])</span></span><br><span class="line"><span class="comment"># plt.show()</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># plot5 = plt.figure(5)</span></span><br><span class="line"><span class="comment"># plt.plot(t[0], x_RMSE)</span></span><br><span class="line"><span class="comment"># plt.title(&#x27;Position Root Mean Square Errors \n&#x27;, fontweight=&quot;bold&quot;)</span></span><br><span class="line"><span class="comment"># plt.ylabel(&#x27;RMSE&#x27;)</span></span><br><span class="line"><span class="comment"># plt.xlabel(&#x27;Update Number&#x27;)</span></span><br><span class="line"><span class="comment"># plt.grid(True)</span></span><br><span class="line"><span class="comment"># plt.xlim([0, 100])</span></span><br><span class="line"><span class="comment"># plt.show()</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># plot6 = plt.figure(6)</span></span><br><span class="line"><span class="comment"># plt.plot(t[0], x_RRMSE)</span></span><br><span class="line"><span class="comment"># plt.title(&#x27;Position Relative Root Mean Square Errors  \n&#x27;, fontweight=&quot;bold&quot;)</span></span><br><span class="line"><span class="comment"># plt.ylabel(&#x27;RRMSE&#x27;)</span></span><br><span class="line"><span class="comment"># plt.xlabel(&#x27;Update Number&#x27;)</span></span><br><span class="line"><span class="comment"># plt.grid(True)</span></span><br><span class="line"><span class="comment"># plt.xlim([0, 100])</span></span><br><span class="line"><span class="comment"># plt.show()</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># plot7 = plt.figure(7)</span></span><br><span class="line"><span class="comment"># plt.plot(t[0], v_ME)</span></span><br><span class="line"><span class="comment"># plt.title(&#x27;Velocity Mean Errors \n&#x27;, fontweight=&quot;bold&quot;)</span></span><br><span class="line"><span class="comment"># plt.ylabel(&#x27;ME (meters/s)&#x27;)</span></span><br><span class="line"><span class="comment"># plt.xlabel(&#x27;Update Number&#x27;)</span></span><br><span class="line"><span class="comment"># plt.grid(True)</span></span><br><span class="line"><span class="comment"># plt.xlim([0, 100])</span></span><br><span class="line"><span class="comment"># plt.show()</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># plot8 = plt.figure(8)</span></span><br><span class="line"><span class="comment"># plt.plot(t[0], v_RME)</span></span><br><span class="line"><span class="comment"># plt.title(&#x27;Velocity Relative Mean Errors \n&#x27;, fontweight=&quot;bold&quot;)</span></span><br><span class="line"><span class="comment"># plt.ylabel(&#x27;RME&#x27;)</span></span><br><span class="line"><span class="comment"># plt.xlabel(&#x27;Update Number&#x27;)</span></span><br><span class="line"><span class="comment"># plt.grid(True)</span></span><br><span class="line"><span class="comment"># plt.xlim([0, 100])</span></span><br><span class="line"><span class="comment"># plt.show()</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># plot9 = plt.figure(9)</span></span><br><span class="line"><span class="comment"># plt.plot(t[0], v_RMSE)</span></span><br><span class="line"><span class="comment"># plt.title(&#x27;Velocity Root Mean Square Errors \n&#x27;, fontweight=&quot;bold&quot;)</span></span><br><span class="line"><span class="comment"># plt.ylabel(&#x27;RMSE&#x27;)</span></span><br><span class="line"><span class="comment"># plt.xlabel(&#x27;Update Number&#x27;)</span></span><br><span class="line"><span class="comment"># plt.grid(True)</span></span><br><span class="line"><span class="comment"># plt.xlim([0, 100])</span></span><br><span class="line"><span class="comment"># plt.show()</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># plot10 = plt.figure(10)</span></span><br><span class="line"><span class="comment"># plt.plot(t[0], v_RRMSE)</span></span><br><span class="line"><span class="comment"># plt.title(&#x27;Velocity Relative Root Mean Square Errors  \n&#x27;, fontweight=&quot;bold&quot;)</span></span><br><span class="line"><span class="comment"># plt.ylabel(&#x27;RRMSE&#x27;)</span></span><br><span class="line"><span class="comment"># plt.xlabel(&#x27;Update Number&#x27;)</span></span><br><span class="line"><span class="comment"># plt.grid(True)</span></span><br><span class="line"><span class="comment"># plt.xlim([0, 100])</span></span><br><span class="line"><span class="comment"># plt.show()</span></span><br></pre></td></tr></table></figure><p>#代码部分修改自网络#</p>]]></content>
      
      
      <categories>
          
          <category> 一些算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 卡尔曼滤波 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Zero Shot Objects Classification Method of Side scan Sonar Image Based on Synthesis of Pseudo Samples</title>
      <link href="/2021/03/30/zeroshot/"/>
      <url>/2021/03/30/zeroshot/</url>
      
        <content type="html"><![CDATA[<center>针对声纳图像的零样本学习问题</center><span id="more"></span><h2 id="foreword">Foreword</h2><p>  由于项目需要，阅读此论文。通过此文章，主要理解了零样本学习的概念技巧，本文的idea在于将PhotoWCT网络中上池化(unpooling)中区域零值改为非零高斯数值。<br />  本文作者来自哈工程自动化学院，文章录于应用声学而非图像领域期刊，学术水平较低。</p><p> </p><h2 id="abstract">Abstract</h2><ul><li>侧扫声纳(Side-Scan Sonar, SSS)</li><li>缺乏SSS数据集引出“零样本学习问题”。</li><li>风格迁移：利用普通光学图像和任何可用的SSS图像合成伪样本，并用这些伪样本训练DNN，转化为传统的监督学习问题。</li><li><a href="https://github.com/guizilaile23/ZSL-SSS">源代码</a></li></ul><p> </p><h2 id="introduction">Introduction</h2><ul><li>迁移学习就是将从源域(如光学图像)获取的知识转移到目标域。SSS不同于光学图像，但有一些特征是共同的，所以迁移学习可以很好地工作。</li><li>如果伪样本与真实SSS图像的域偏差较小，可以利用伪样本学习到的知识对SSS图像进行精确分类。</li></ul><p> </p><h2 id="related-work">Related Work</h2><ul><li>KELM</li><li>ECNet</li><li>风格迁移相关 StyleBank</li></ul><p> </p><h2 id="method">Method</h2><h3 id="提出的网络">提出的网络</h3><div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/03/b620c200d0c3f0ed.png" width="600"/></div><p>//怀疑这里两个编码器后的特征写反了 //该网络包含伪样本合成部分和分类部分。伪样本合成部分用于合成伪SSS图像，分类部分用于进行预测。两个部分可以整合成一个统一的形式，也可以独立工作。分开的时候更适合调试，一起更节省运算时间（屁话）。</p><p> </p><h3 id="损失函数">损失函数</h3><ul><li>总损失函数由分类损失<span class="math inline">\(L_{S}\)</span>和风格迁移部分的重构损失<span class="math inline">\(L_{R}\)</span>组成，公式如下： <span class="math display">\[L(\omega)=L_{S}+\eta L_{R}+\Omega\|\omega\|_{2}\]</span><br />式中，<span class="math inline">\(\eta\)</span>用于平衡两种损失，<span class="math inline">\(\Omega\|\omega\|_{2}\)</span>是正则项。<br /></li><li>分类损失部分：<br /><span class="math display">\[L_{S}(\omega)=\frac{1}{m} \sum_{i=1}^{m} d\left(f\left(x_{p} ; \omega\right), y\right)\]</span><br />  <span class="math inline">\(x_{p}\)</span>是伪样本，y是相应的标签，<span class="math inline">\(d\left(f\left(x_{p} ; \omega\right), y\right)\)</span>是<span class="math inline">\(f\left(x_{p} ; \omega\right)\)</span>到真实样本y的距离。</li><li>重构损失部分： <span class="math display">\[L_{R}(\omega)=\left\|x_{R}-x_{i n}\right\|_{2}^{2}+\lambda\left\|F\left(x_{R}\right)-F\left(x_{i n}\right)\right\|_{2}^{2}\]</span><br />  <span class="math inline">\(x_{m}\)</span>和<span class="math inline">\(x_{R}\)</span>分别为输入图像和重构输出，<span class="math inline">\(F(x)\)</span>是提取输入图像深层特征的编码器，<span class="math inline">\(\lambda\)</span>是权重参数。</li></ul><p> </p><h3 id="whitening-and-coloring-transform-wct">Whitening and Coloring Transform, WCT</h3><p>  白化的目的是去除输入数据的冗余信息。假设训练数据是图像，由于图像中相邻像素之间具有很强的相关性，所以用于训练时输入是冗余的；白化的目的就是降低输入的冗余性。输入数据集X，经过白化处理后，新的数据X'满足两个性质：特征之间相关性较低；所有特征具有相同的方差。</p><p> </p><h3 id="photowct">PhotoWCT</h3><ul><li>当进行真实感图像风格化时，WCT会产生结构伪影(例如，物体边界的扭曲)。同时由WCT方法生成模糊转换后的图像,和真实SSS之间有很大的不同,我们认为这一现象的主要原因主要是因为WCT方法使用最近邻上采样层解码器。最近邻上采样层的过程是图所示,它填充小面积相同的激活值,不保留输入图像的细节。<div data-align="center"><img src="https://ftp.bmp.ovh/imgs/2021/03/6168fdece267b27c.png" width="600"/></div></li><li>为解决上述问题，PhotoWCT用上池化层取代了WCT上采样层。<div data-align="center"><img src="https://ftp.bmp.ovh/imgs/2021/03/fec156dd1f0c9fed.png" width="600"/></div></li></ul><p> </p><h3 id="提出的idea">提出的idea</h3><ul><li>PhotoWCT的上池化层解决了风格迁移后的图像模糊问题，但也产生了其他问题。一些较大的图像在传输后呈现棋盘格的效果。这是因为上池化后，每个特征映射的值都有75%为零，这就有一定的零相邻的概率，形成棋盘格效应。</li><li>没有将所有非最大值设置为0，而是使用随机噪声(低于一定级别)来替换非最大值。<div data-align="center"><img src="https://ftp.bmp.ovh/imgs/2021/03/ece7ab8557de4ebe.png" width="600"/></div></li><li>改进后的网络<div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/03/93a08f732bc58809.png" width="600"/></div></li></ul><p> </p><h2 id="experiments-and-results">Experiments and Results</h2><h3 id="数据集">数据集</h3><h4 id="sss图像">SSS图像</h4><p>  对于SSS图像，收集了14个类别的639张SSS图像。有34架飞机和240张沉船图片;这些只用于测试。在其他12个类别中，我们选择合适的图像作为样式图像数据集。</p><p> </p><h4 id="光学图像">光学图像</h4><ul><li>使用航拍图片,因为视图上更类似SSS。</li><li>航空图像数据集：DOTA, UCAS-AOD, NWPU VHR-10, RSOD-Dataset and NWPU RESISC45。</li></ul><p> </p><h3 id="伪样本合成">伪样本合成</h3><ul><li>风格迁移网络采用VGG-19作为编码器;解码器是反向编码器。</li><li>在分类部分，使用ResNet-34作为分类网络。</li><li>交替训练风格迁移网络部分和分类部分。在风格转换部分，从零开始训练编码器和解码器，目标是最小化重构和感知损失的总和。使用SGD作为优化器来最小化交叉熵损失。</li><li>用了一个新参数来控制噪声级，将激活值产生的噪声背景乘以<span class="math inline">\(\theta\)</span>。<div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/03/1f97de18f3027647.png" width="800"/></div></li></ul><p> </p><h3 id="实验和结果">实验和结果</h3><ul><li>将数据集分为三类目标:飞机、船舶和其他;最后一个包含了26个类的样本，保证了在训练过程中具有丰富的负类。</li><li>平均精度(即每类平均精度)的测量方法如下: <span class="math display">\[a c c_{m e a n}=\frac{1}{\|k\|} \sum_{c=1}^{\|k\|} \frac{\text { correct predictions in } c}{\text { total samples in } c}\]</span></li><li>利用伪样本合成方法，对34幅真实飞机SSS图像中的21幅进行了正确识别，对240幅真实沉船SSS图像中的212幅进行了正确识别。PhotoWCT的伪样本合成也很好，识别出了一半的飞机图像和203个沉船。基于WCT的方法表现较差，而没有风格迁移的分类器未能识别大部分飞机SSS图像。<div data-align="center"><img src="https://i.bmp.ovh/imgs/2021/03/69732a7eba4011c3.png" width="1000"/></div></li></ul><p> </p><h3 id="深入分析">深入分析</h3><ul><li>方法之所以有效，是因为在迁移学习过程中，目标域和源域越接近，知识迁移效果越好。因此，伪样本(源域)的分布与真实SSS图像(目标域)的分布越接近，知识从源向目标域的传递就越有效。此方法的关键特点是上采样方法减少了区域偏差。</li><li>进一步分析了不同噪声级控制参数<span class="math inline">\(\theta\)</span>的影响。实验中，当<span class="math inline">\(\theta&lt;0.4\)</span>，所有的PhotoWCT结果非常相似;因此，稍微有点噪音是可以接受的。<span class="math inline">\(\theta&gt;0.5\)</span>时，性能提高，<span class="math inline">\(\theta=0.7\)</span>时在平均和全局精度方面提供了最好的结果。对<span class="math inline">\(\theta=1.0\)</span>，性能下降，因为解码过程中更多的噪声破坏了内容信息，降低了不同类别样本的可区分性。</li></ul><p> </p><h2 id="discussion">Discussion</h2><p>  零样本学习是迁移学习的一个极端例子。在迁移学习过程中，所有的源域和目标域数据都是可用的，因此，我们可以学习一个投影函数，将一幅图像投影到一个特征空间中，在这个空间中没有域偏向，然后完成迁移。然而，在处理零样本SSS图像分类问题时，没有目标域数据，没有投影函数是可以学习的。但是，既然我们知道目标域数据应该是什么样子，那么我们生成的源域数据就非常类似于目标域的数据，这代表了零样本学习问题的最佳解决方案。</p><p> </p><h2 id="conclusion">Conclusion</h2><p>  在本文中，主要研究没有真实的SSS图像来训练DNN的零样本学习图像分类问题。针对没有标记样本的类别，提出了一种固定的风格转换方法来合成伪样本，通过伪样本的合成，将零拍学习问题转化为传统的监督学习问题，利用训练好的DNN对真实SSS图像进行分类。通过源域数据的精心选择和样式传递方法的改进，实际SSS图像的识别率达到80%以上。</p>]]></content>
      
      
      <categories>
          
          <category> 论文阅读 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CV </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>First Shot</title>
      <link href="/2021/03/16/first/"/>
      <url>/2021/03/16/first/</url>
      
        <content type="html"><![CDATA[<center>Long long ago, a boy want to build his own website...</center><span id="more"></span><h2 id="网站架构">网站架构</h2><p><a href="https://hexo.io/zh-cn/">Hexo</a> + <a href="https://github.com/">Github</a></p><h2 id="主题">主题</h2><p><a href="https://theme-next.js.org/muse/">NexT.Muse</a></p><h2 id="公式插件">公式插件</h2><p><a href="https://www.jianshu.com/p/8424da4dd673">网站公式插件</a></p><h2 id="网站图标">网站图标</h2><p><a href="https://blog.csdn.net/Olivia_Vang/article/details/92976637?utm_medium=distribute.pc_relevant.none-task-blog-baidujs_baidulandingword-0&amp;spm=1001.2101.3001.4242">图标</a></p><h2 id="评论插件">评论插件</h2><p><a href="https://livere.com/">livere</a></p><h2 id="字数统计与阅览时间插件">字数统计与阅览时间插件</h2><p><a href="https://github.com/theme-next/hexo-symbols-count-time">symbols-count-time</a></p><h2 id="访问与阅览次数统计插件">访问与阅览次数统计插件</h2><p><a href="https://blog.csdn.net/baidu_34310405/article/details/102665373">访问量和阅览次数</a></p><h2 id="图床">图床</h2><p><a href="https://imgurl.org/">图床</a></p><h2 id="鼠标点击特效">鼠标点击特效</h2><p><a href="https://yuanyuspace.cn/2021/04/01/clickeffect/#more">鼠标点击特效</a></p><h2 id="网页内嵌b站">网页内嵌B站</h2><p><a href="https://hongcyu.cn/posts/hexo-bilibili.html">网页内嵌B站,方法二</a></p><p> </p><h2 id="blogroll">Blogroll</h2><p>Thanks to Mr.Wang, who helps me a lot to finish this website's construcion.<br /><a href="https://wanglindong.com">gaoshi_boy's blog</a></p>]]></content>
      
      
      <categories>
          
          <category> 网站建设 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 好玩的 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
